{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _StepperButton = _interopRequireDefault(require(\"./StepperButton\"));\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _commons = require(\"../../commons\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\stepper\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Stepper = function (_PureBaseComponent) {\n  (0, _inherits2.default)(Stepper, _PureBaseComponent);\n\n  var _super = _createSuper(Stepper);\n\n  function Stepper(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Stepper);\n    _this = _super.call(this, props);\n\n    _this.onAccessibilityAction = function (event) {\n      var value = _this.state.value;\n      var _this$props = _this.props,\n          min = _this$props.min,\n          max = _this$props.max;\n      var eventMsgContext = event.nativeEvent.action === 'decrement' ? 'Minimum' : 'Maximum';\n      var stepperLimitMsg = eventMsgContext + \" stepper value, \" + value + \", reached\";\n\n      switch (event.nativeEvent.action) {\n        case 'decrement':\n          if (value <= min) {\n            _lodash.default.invoke(_reactNative.AccessibilityInfo, 'announceForAccessibility', stepperLimitMsg);\n          } else {\n            _this.updateValue(value - 1);\n\n            _lodash.default.invoke(_reactNative.AccessibilityInfo, 'announceForAccessibility', value - 1);\n          }\n\n          break;\n\n        case 'increment':\n          if (value >= max) {\n            _lodash.default.invoke(_reactNative.AccessibilityInfo, 'announceForAccessibility', stepperLimitMsg);\n          } else {\n            _this.updateValue(value + 1);\n\n            _lodash.default.invoke(_reactNative.AccessibilityInfo, 'announceForAccessibility', value + 1);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.state = {\n      value: props.initialValue\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Stepper, [{\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var value = this.state.value;\n      var accessibilityLabel = this.props.accessibilityLabel;\n      var labelSuffix = \"value = \" + value;\n      return {\n        accessibilityLabel: accessibilityLabel ? accessibilityLabel + \", \" + labelSuffix : \"Stepper, \" + labelSuffix,\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityActions: ['decrement', 'increment'],\n        onAccessibilityAction: this.onAccessibilityAction\n      };\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = (0, _style.default)(this.props.size);\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return [this.state.value, this.props.label].join(' ');\n    }\n  }, {\n    key: \"getDisabledState\",\n    value: function getDisabledState() {\n      var minusDisabled = this.state.value === this.props.min;\n      var plusDisabled = this.state.value === this.props.max;\n      return {\n        minusDisabled: minusDisabled,\n        plusDisabled: plusDisabled\n      };\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      var _this2 = this;\n\n      var newValue = _lodash.default.max([value, this.props.min]);\n\n      newValue = _lodash.default.min([newValue, this.props.max]);\n\n      if (this.state.value !== newValue) {\n        this.setState({\n          value: newValue\n        }, function () {\n          if (_this2.props.onValueChange) {\n            _this2.props.onValueChange(newValue);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$getDisabledStat = this.getDisabledState(),\n          minusDisabled = _this$getDisabledStat.minusDisabled,\n          plusDisabled = _this$getDisabledStat.plusDisabled,\n          testID = _this$getDisabledStat.testID;\n\n      return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, this.getAccessibilityProps(), {\n        style: [this.styles.container, this.props.containerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: this.styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        testID: testID + \".label\",\n        style: this.styles.titleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, this.getLabel())), _react.default.createElement(_reactNative.View, {\n        style: this.styles.buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_StepperButton.default, {\n        label: \"-\",\n        testID: testID + \".decrease\",\n        styles: this.styles,\n        disabled: minusDisabled,\n        onPress: function onPress() {\n          return _this3.updateValue(_this3.state.value - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: this.styles.separator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_StepperButton.default, {\n        label: \"+\",\n        testID: testID + \".increase\",\n        styles: this.styles,\n        disabled: plusDisabled,\n        onPress: function onPress() {\n          return _this3.updateValue(_this3.state.value + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return Stepper;\n}(_commons.PureBaseComponent);\n\nexports.default = Stepper;\nStepper.displayName = 'Stepper';\nStepper.propTypes = {\n  label: _propTypes.default.string,\n  min: _propTypes.default.number.isRequired,\n  max: _propTypes.default.number,\n  containerStyle: _propTypes.default.object,\n  onValueChange: _propTypes.default.func,\n  initialValue: _propTypes.default.number.isRequired\n};","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/stepper/index.js"],"names":["Stepper","props","onAccessibilityAction","event","value","state","min","max","eventMsgContext","nativeEvent","action","stepperLimitMsg","_","invoke","AccessibilityInfo","updateValue","initialValue","accessibilityLabel","labelSuffix","accessible","accessibilityRole","accessibilityActions","styles","size","label","join","minusDisabled","plusDisabled","newValue","setState","onValueChange","getDisabledState","testID","getAccessibilityProps","container","containerStyle","title","titleText","getLabel","buttons","separator","PureBaseComponent","displayName","propTypes","PropTypes","string","number","isRequired","object","func"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport {AccessibilityInfo, Text, View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport StepperButton from './StepperButton';\nimport createStyles from './style';\nimport {PureBaseComponent} from '../../commons';\n\n/**\n * @description: Stepper component with increase and decrease buttons\n * @gif: https://media.giphy.com/media/3oFzm47bk0v4WV15O8/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\n */\nexport default class Stepper extends PureBaseComponent {\n  static displayName = 'Stepper';\n  static propTypes = {\n    /**\n     * Text to show next to the current number\n     */\n    label: PropTypes.string,\n    /**\n     * Minimum value\n     */\n    min: PropTypes.number.isRequired,\n    /**\n     * Maximum value\n     */\n    max: PropTypes.number,\n    /**\n     * Additional styles for the top container\n     */\n    containerStyle: PropTypes.object,\n    /**\n     * Handler function to receive updates when the value changes\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * the initial value\n     */\n    initialValue: PropTypes.number.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.initialValue\n    };\n  }\n\n  getAccessibilityProps() {\n    const {value} = this.state;\n    const {accessibilityLabel} = this.props;\n    const labelSuffix = `value = ${value}`;\n    return {\n      accessibilityLabel: accessibilityLabel ? `${accessibilityLabel}, ${labelSuffix}` : `Stepper, ${labelSuffix}`,\n      accessible: true,\n      accessibilityRole: 'adjustable',\n      accessibilityActions: ['decrement', 'increment'],\n      onAccessibilityAction: this.onAccessibilityAction\n    };\n  }\n\n  onAccessibilityAction = event => {\n    const {value} = this.state;\n    const {min, max} = this.props;\n    const eventMsgContext = event.nativeEvent.action === 'decrement' ? 'Minimum' : 'Maximum';\n    const stepperLimitMsg = `${eventMsgContext} stepper value, ${value}, reached`;\n\n    switch (event.nativeEvent.action) {\n      case 'decrement':\n        if (value <= min) {\n          _.invoke(AccessibilityInfo, 'announceForAccessibility', stepperLimitMsg);\n        } else {\n          this.updateValue(value - 1);\n          _.invoke(AccessibilityInfo, 'announceForAccessibility', value - 1);\n        }\n        break;\n      case 'increment':\n        if (value >= max) {\n          _.invoke(AccessibilityInfo, 'announceForAccessibility', stepperLimitMsg);\n        } else {\n          this.updateValue(value + 1);\n          _.invoke(AccessibilityInfo, 'announceForAccessibility', value + 1);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  \n  generateStyles() {\n    this.styles = createStyles(this.props.size);\n  }\n\n  getLabel() {\n    return [this.state.value, this.props.label].join(' ');\n  }\n\n  getDisabledState() {\n    const minusDisabled = this.state.value === this.props.min;\n    const plusDisabled = this.state.value === this.props.max;\n    return {minusDisabled, plusDisabled};\n  }\n\n  updateValue(value) {\n    let newValue = _.max([value, this.props.min]);\n    newValue = _.min([newValue, this.props.max]);\n    if (this.state.value !== newValue) {\n      this.setState({\n        value: newValue\n      },\n      () => {\n        if (this.props.onValueChange) {\n          this.props.onValueChange(newValue);\n        }\n      },);\n    }\n  }\n\n  render() {\n    const {minusDisabled, plusDisabled, testID} = this.getDisabledState();\n    return (\n      <View {...this.getAccessibilityProps()} style={[this.styles.container, this.props.containerStyle]}>\n        <View style={this.styles.title}>\n          <Text testID={`${testID}.label`} style={this.styles.titleText}>\n            {this.getLabel()}\n          </Text>\n        </View>\n        <View style={this.styles.buttons}>\n          <StepperButton\n            label=\"-\"\n            testID={`${testID}.decrease`}\n            styles={this.styles}\n            disabled={minusDisabled}\n            onPress={() => this.updateValue(this.state.value - 1)}\n          />\n          <View style={this.styles.separator}/>\n          <StepperButton\n            label=\"+\"\n            testID={`${testID}.increase`}\n            styles={this.styles}\n            disabled={plusDisabled}\n            onPress={() => this.updateValue(this.state.value + 1)}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}