{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = require(\"../styles\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\src\\\\components\\\\TextInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar RNSTextInput = function RNSTextInput(_ref) {\n  var type = _ref.type,\n      dark = _ref.dark,\n      style = _ref.style,\n      placeholderTextColor = _ref.placeholderTextColor,\n      restProps = (0, _objectWithoutProperties2.default)(_ref, [\"type\", \"dark\", \"style\", \"placeholderTextColor\"]);\n  var finalStyle = [styles.default, type === 'bordered' && styles.bordered, dark && styles.dark, style && style];\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      alignSelf: 'stretch',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.TextInput, (0, _extends2.default)({\n    placeholderTextColor: placeholderTextColor || _styles.colors.white,\n    underlineColorAndroid: \"white\"\n  }, restProps, {\n    style: finalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })), _reactNative.Platform.OS === 'ios' && _react.default.createElement(_reactNative.View, {\n    style: {\n      height: 0.5,\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar HEIGHT = 40;\n\nvar styles = _reactNative.StyleSheet.create({\n  default: _objectSpread({\n    height: HEIGHT,\n    color: 'white',\n    fontFamily: _styles.fonts.primaryRegular\n  }, _reactNative.Platform.select({\n    android: {\n      paddingLeft: 5,\n      opacity: 0.9\n    }\n  })),\n  bordered: {\n    borderWidth: 0.5,\n    borderColor: _styles.colors.lightGray,\n    borderRadius: 20,\n    paddingHorizontal: 20\n  },\n  dark: {\n    color: _styles.colors.gray\n  },\n  primary: {\n    borderRadius: HEIGHT / 2,\n    backgroundColor: 'transparent'\n  }\n});\n\nvar _default = RNSTextInput;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/src/components/TextInput.js"],"names":["RNSTextInput","type","dark","style","placeholderTextColor","restProps","finalStyle","styles","default","bordered","alignSelf","flexDirection","colors","white","Platform","OS","height","backgroundColor","HEIGHT","StyleSheet","create","color","fontFamily","fonts","primaryRegular","select","android","paddingLeft","opacity","borderWidth","borderColor","lightGray","borderRadius","paddingHorizontal","gray","primary"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAMf;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,oBAEI,QAFJA,oBAEI;AAAA,MADDC,SACC;AACJ,MAAMC,UAAU,GAAG,CACjBC,MAAM,CAACC,OADU,EAEjBP,IAAI,KAAK,UAAT,IAAuBM,MAAM,CAACE,QAFb,EAGjBP,IAAI,IAAIK,MAAM,CAACL,IAHE,EAIjBC,KAAK,IAAIA,KAJQ,CAAnB;AAOA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,aAAa,EAAE;AAAvC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,sBAAD;AACE,IAAA,oBAAoB,EAAEP,oBAAoB,IAAIQ,eAAOC,KADvD;AAEE,IAAA,qBAAqB,EAAC;AAFxB,KAGMR,SAHN;AAIE,IAAA,KAAK,EAAEC,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAOGQ,sBAASC,EAAT,KAAgB,KAAhB,IACC,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,eAAe,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF;AAaD,CA3BD;;AA6BA,IAAMC,MAAM,GAAG,EAAf;;AAEA,IAAMX,MAAM,GAAGY,wBAAWC,MAAX,CAAkB;AAC/BZ,EAAAA,OAAO;AACLQ,IAAAA,MAAM,EAAEE,MADH;AAELG,IAAAA,KAAK,EAAE,OAFF;AAGLC,IAAAA,UAAU,EAAEC,cAAMC;AAHb,KAIFV,sBAASW,MAAT,CAAgB;AACjBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,CADN;AAEPC,MAAAA,OAAO,EAAE;AAFF;AADQ,GAAhB,CAJE,CADwB;AAY/BnB,EAAAA,QAAQ,EAAE;AACRoB,IAAAA,WAAW,EAAE,GADL;AAERC,IAAAA,WAAW,EAAElB,eAAOmB,SAFZ;AAGRC,IAAAA,YAAY,EAAE,EAHN;AAIRC,IAAAA,iBAAiB,EAAE;AAJX,GAZqB;AAkB/B/B,EAAAA,IAAI,EAAE;AACJmB,IAAAA,KAAK,EAAET,eAAOsB;AADV,GAlByB;AAqB/BC,EAAAA,OAAO,EAAE;AACPH,IAAAA,YAAY,EAAEd,MAAM,GAAG,CADhB;AAEPD,IAAAA,eAAe,EAAE;AAFV;AArBsB,CAAlB,CAAf;;eA2BejB,Y","sourcesContent":["import React from 'react';\nimport { View, Platform, StyleSheet, TextInput } from 'react-native';\n\nimport { fonts, colors } from '../styles';\n\nconst RNSTextInput = ({\n  type,\n  dark,\n  style,\n  placeholderTextColor,\n  ...restProps\n}) => {\n  const finalStyle = [\n    styles.default,\n    type === 'bordered' && styles.bordered,\n    dark && styles.dark,\n    style && style,\n  ];\n\n  return (\n    <View style={{ alignSelf: 'stretch', flexDirection: 'column' }}>\n      <TextInput\n        placeholderTextColor={placeholderTextColor || colors.white}\n        underlineColorAndroid=\"white\"\n        {...restProps}\n        style={finalStyle}\n      />\n      {Platform.OS === 'ios' && (\n        <View style={{ height: 0.5, backgroundColor: 'white' }} />\n      )}\n    </View>\n  );\n};\n\nconst HEIGHT = 40;\n\nconst styles = StyleSheet.create({\n  default: {\n    height: HEIGHT,\n    color: 'white',\n    fontFamily: fonts.primaryRegular,\n    ...Platform.select({\n      android: {\n        paddingLeft: 5,\n        opacity: 0.9,\n      },\n    }),\n  },\n  bordered: {\n    borderWidth: 0.5,\n    borderColor: colors.lightGray,\n    borderRadius: 20,\n    paddingHorizontal: 20,\n  },\n  dark: {\n    color: colors.gray,\n  },\n  primary: {\n    borderRadius: HEIGHT / 2,\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default RNSTextInput;\n"]},"metadata":{},"sourceType":"script"}