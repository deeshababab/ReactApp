{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _commons = require(\"../../commons\");\n\nvar _assets = _interopRequireDefault(require(\"../../assets\"));\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _overlay = _interopRequireDefault(require(\"../overlay\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\image\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Image = function (_PureBaseComponent) {\n  (0, _inherits2.default)(Image, _PureBaseComponent);\n\n  var _super = _createSuper(Image);\n\n  function Image(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Image);\n    _this = _super.call(this, props);\n    _this.sourceTransformer = _this.getThemeProps().sourceTransformer;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Image, [{\n    key: \"getImageSource\",\n    value: function getImageSource() {\n      var _this$props = this.props,\n          assetName = _this$props.assetName,\n          assetGroup = _this$props.assetGroup;\n\n      if (!_lodash.default.isUndefined(assetName)) {\n        return _lodash.default.get(_assets.default, assetGroup + \".\" + assetName);\n      }\n\n      if (this.sourceTransformer) {\n        return this.sourceTransformer(this.props);\n      }\n\n      var source = this.props.source;\n\n      if (_lodash.default.get(source, 'uri') === null || _lodash.default.get(source, 'uri') === '') {\n        return _objectSpread(_objectSpread({}, source), {}, {\n          uri: undefined\n        });\n      }\n\n      return source;\n    }\n  }, {\n    key: \"renderImage\",\n    value: function renderImage() {\n      var source = this.getImageSource();\n\n      var _this$getThemeProps = this.getThemeProps(),\n          tintColor = _this$getThemeProps.tintColor,\n          style = _this$getThemeProps.style,\n          supportRTL = _this$getThemeProps.supportRTL,\n          cover = _this$getThemeProps.cover,\n          aspectRatio = _this$getThemeProps.aspectRatio,\n          others = (0, _objectWithoutProperties2.default)(_this$getThemeProps, [\"tintColor\", \"style\", \"supportRTL\", \"cover\", \"aspectRatio\"]);\n\n      var shouldFlipRTL = supportRTL && _helpers.Constants.isRTL;\n      return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({\n        style: [{\n          tintColor: tintColor\n        }, shouldFlipRTL && styles.rtlFlipped, cover && styles.coverImage, aspectRatio && {\n          aspectRatio: aspectRatio\n        }, style],\n        accessible: true,\n        accessibilityRole: 'image'\n      }, others, {\n        source: source,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          style = _this$getThemeProps2.style,\n          overlayType = _this$getThemeProps2.overlayType;\n\n      if (overlayType) {\n        return _react.default.createElement(_view.default, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }\n        }, this.renderImage(), _react.default.createElement(_overlay.default, {\n          style: style,\n          type: overlayType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return this.renderImage();\n    }\n  }]);\n  return Image;\n}(_commons.PureBaseComponent);\n\nImage.displayName = 'Image';\nImage.propTypes = {\n  sourceTransformer: _propTypes.default.func,\n  assetName: _propTypes.default.string,\n  assetGroup: _propTypes.default.string,\n  tintColor: _propTypes.default.string,\n  supportRTL: _propTypes.default.bool,\n  cover: _propTypes.default.bool,\n  aspectRatio: _propTypes.default.number,\n  overlayType: _overlay.default.propTypes.type\n};\nImage.defaultProps = {\n  assetGroup: 'icons'\n};\nImage.overlayTypes = _overlay.default.overlayTypes;\n\nvar styles = _reactNative.StyleSheet.create({\n  rtlFlipped: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  coverImage: {\n    width: _helpers.Constants.screenWidth,\n    aspectRatio: 16 / 8\n  }\n});\n\n(0, _hoistNonReactStatics.default)(Image, _reactNative.Image);\nvar _default = Image;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/image/index.js"],"names":["Image","props","sourceTransformer","getThemeProps","assetName","assetGroup","_","isUndefined","get","Assets","source","uri","undefined","getImageSource","tintColor","style","supportRTL","cover","aspectRatio","others","shouldFlipRTL","Constants","isRTL","styles","rtlFlipped","coverImage","overlayType","renderImage","PureBaseComponent","displayName","propTypes","PropTypes","func","string","bool","number","Overlay","type","defaultProps","overlayTypes","StyleSheet","create","transform","scaleX","width","screenWidth","RNImage"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport {Image as RNImage, StyleSheet} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {PureBaseComponent} from '../../commons';\nimport Assets from '../../assets';\nimport View from '../view';\nimport Overlay from '../overlay';\n\n\n/**\n * @description: Image wrapper with extra functionality like source transform and assets support\n * @extends: Image\n * @extendslink: https://facebook.github.io/react-native/docs/image.html\n */\nclass Image extends PureBaseComponent {\n  static displayName = 'Image';\n\n  static propTypes = {\n    /**\n     * custom source transform handler for manipulating the image source (great for size control)\n     */\n    sourceTransformer: PropTypes.func,\n    /**\n     * if provided image source will be driven from asset name\n     */\n    assetName: PropTypes.string,\n    /**\n     * the asset group, default is \"icons\"\n     */\n    assetGroup: PropTypes.string,\n    /**\n     * the asset tint\n     */\n    tintColor: PropTypes.string,\n    /**\n     * whether the image should flip horizontally on RTL locals\n     */\n    supportRTL: PropTypes.bool,\n    /**\n     * Show image as a cover, full width, image (according to aspect ratio, default: 16:8)\n     */\n    cover: PropTypes.bool,\n    /**\n     * The aspect ratio for the image\n     */\n    aspectRatio: PropTypes.number,\n    /**\n     * The type of overly to place on top of the image\n     */\n    overlayType: Overlay.propTypes.type\n  };\n\n  static defaultProps = {\n    assetGroup: 'icons'\n  };\n\n  static overlayTypes = Overlay.overlayTypes;\n\n  constructor(props) {\n    super(props);\n\n    this.sourceTransformer = this.getThemeProps().sourceTransformer;\n  }\n\n  getImageSource() {\n    const {assetName, assetGroup} = this.props;\n    if (!_.isUndefined(assetName)) {\n      return _.get(Assets, `${assetGroup}.${assetName}`);\n    }\n\n    if (this.sourceTransformer) {\n      return this.sourceTransformer(this.props);\n    }\n\n    const {source} = this.props;\n    if (_.get(source, 'uri') === null || _.get(source, 'uri') === '') {\n      return {...source, uri: undefined};\n    }\n\n    return source;\n  }\n\n  renderImage() {\n    const source = this.getImageSource();\n    const {tintColor, style, supportRTL, cover, aspectRatio, ...others} = this.getThemeProps();\n    const shouldFlipRTL = supportRTL && Constants.isRTL;\n\n    return (\n      <RNImage\n        style={[\n          {tintColor},\n          shouldFlipRTL && styles.rtlFlipped,\n          cover && styles.coverImage,\n          aspectRatio && {aspectRatio},\n          style\n        ]}\n        accessible\n        accessibilityRole={'image'}\n        {...others}\n        source={source}\n      />\n    );\n  }\n\n  render() {\n    const {style, overlayType} = this.getThemeProps();\n  \n    if (overlayType) {\n      return (\n        <View>\n          {this.renderImage()}\n          <Overlay style={style} type={overlayType}/>\n        </View>\n      );\n    }\n    return this.renderImage();\n  }\n}\n\nconst styles = StyleSheet.create({\n  rtlFlipped: {\n    transform: [{scaleX: -1}]\n  },\n  coverImage: {\n    width: Constants.screenWidth,\n    aspectRatio: 16 / 8\n  }\n});\n\nhoistNonReactStatic(Image, RNImage);\nexport default Image;\n"]},"metadata":{},"sourceType":"script"}