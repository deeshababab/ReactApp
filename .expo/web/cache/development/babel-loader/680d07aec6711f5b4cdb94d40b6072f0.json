{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _reactNativeReanimated = _interopRequireDefault(require(\"react-native-reanimated\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\incubator\\\\TouchableOpacity.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar cond = _reactNativeReanimated.default.cond,\n    eq = _reactNativeReanimated.default.eq,\n    Value = _reactNativeReanimated.default.Value,\n    call = _reactNativeReanimated.default.call,\n    block = _reactNativeReanimated.default.block,\n    event = _reactNativeReanimated.default.event;\n\nvar TouchableOpacity = function (_Component) {\n  (0, _inherits2.default)(TouchableOpacity, _Component);\n\n  var _super = _createSuper(TouchableOpacity);\n\n  function TouchableOpacity() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TouchableOpacity);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      pressState: new Value(-1)\n    };\n    _this.onStateChange = event([{\n      nativeEvent: {\n        state: _this.pressState\n      }\n    }], {\n      useNativeDriver: true\n    });\n    _this._opacity = block([cond(eq(_this.pressState, _reactNativeGestureHandler.State.END), call([], function () {\n      return _this.props.onPress(_this.props);\n    })), cond(eq(_this.pressState, _reactNativeGestureHandler.State.BEGAN), _this.props.activeOpacity, 1)]);\n    _this._color = cond(eq(_this.pressState, _reactNativeGestureHandler.State.BEGAN), (0, _reactNative.processColor)(_this.props.feedbackColor || _this.props.backgroundColor), (0, _reactNative.processColor)(_this.props.backgroundColor));\n    return _this;\n  }\n\n  (0, _createClass2.default)(TouchableOpacity, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          others = (0, _objectWithoutProperties2.default)(_this$props, [\"style\"]);\n      return _react.default.createElement(_reactNativeGestureHandler.TapGestureHandler, {\n        onHandlerStateChange: this.onStateChange,\n        shouldCancelWhenOutside: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeReanimated.default.View, (0, _extends2.default)({}, others, {\n        style: [style, {\n          backgroundColor: this._color,\n          opacity: this._opacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), this.props.children));\n    }\n  }, {\n    key: \"pressState\",\n    get: function get() {\n      return this.props.pressState || this.state.pressState;\n    }\n  }]);\n  return TouchableOpacity;\n}(_react.Component);\n\nexports.default = TouchableOpacity;\nTouchableOpacity.propTypes = {\n  feedbackColor: _propTypes.default.string,\n  backgroundColor: _propTypes.default.string,\n  activeOpacity: _propTypes.default.number,\n  onPress: _propTypes.default.func,\n  pressState: _propTypes.default.object\n};\nTouchableOpacity.defaultProps = {\n  activeOpacity: 0.2,\n  feedbackColor: 'transparent',\n  onPress: _lodash.default.noop\n};","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/incubator/TouchableOpacity.js"],"names":["cond","Reanimated","eq","Value","call","block","event","TouchableOpacity","state","pressState","onStateChange","nativeEvent","useNativeDriver","_opacity","State","END","props","onPress","BEGAN","activeOpacity","_color","feedbackColor","backgroundColor","style","others","opacity","children","Component","propTypes","PropTypes","string","number","func","object","defaultProps","_","noop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEOA,I,GAAuCC,8B,CAAvCD,I;IAAME,E,GAAiCD,8B,CAAjCC,E;IAAIC,K,GAA6BF,8B,CAA7BE,K;IAAOC,I,GAAsBH,8B,CAAtBG,I;IAAMC,K,GAAgBJ,8B,CAAhBI,K;IAAOC,K,GAASL,8B,CAATK,K;;IAEhBC,gB;;;;;;;;;;;;;;;UAenBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,IAAIN,KAAJ,CAAU,CAAC,CAAX;AADN,K;UAQRO,a,GAAgBJ,KAAK,CAAC,CACpB;AACEK,MAAAA,WAAW,EAAE;AAACH,QAAAA,KAAK,EAAE,MAAKC;AAAb;AADf,KADoB,CAAD,EAKrB;AAACG,MAAAA,eAAe,EAAE;AAAlB,KALqB,C;UAOrBC,Q,GAAWR,KAAK,CAAC,CACfL,IAAI,CAACE,EAAE,CAAC,MAAKO,UAAN,EAAkBK,iCAAMC,GAAxB,CAAH,EAAiCX,IAAI,CAAC,EAAD,EAAK;AAAA,aAAM,MAAKY,KAAL,CAAWC,OAAX,CAAmB,MAAKD,KAAxB,CAAN;AAAA,KAAL,CAArC,CADW,EAEfhB,IAAI,CAACE,EAAE,CAAC,MAAKO,UAAN,EAAkBK,iCAAMI,KAAxB,CAAH,EAAmC,MAAKF,KAAL,CAAWG,aAA9C,EAA6D,CAA7D,CAFW,CAAD,C;UAKhBC,M,GAASpB,IAAI,CAACE,EAAE,CAAC,MAAKO,UAAN,EAAkBK,iCAAMI,KAAxB,CAAH,EACX,+BAAa,MAAKF,KAAL,CAAWK,aAAX,IAA4B,MAAKL,KAAL,CAAWM,eAApD,CADW,EAEX,+BAAa,MAAKN,KAAL,CAAWM,eAAxB,CAFW,C;;;;;;6BAIJ;AAAA,wBACoB,KAAKN,KADzB;AAAA,UACAO,KADA,eACAA,KADA;AAAA,UACUC,MADV;AAEP,aACE,6BAAC,4CAAD;AAAmB,QAAA,oBAAoB,EAAE,KAAKd,aAA9C;AAA6D,QAAA,uBAAuB,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,8BAAD,CAAY,IAAZ,6BAAqBc,MAArB;AAA6B,QAAA,KAAK,EAAE,CAACD,KAAD,EAAQ;AAACD,UAAAA,eAAe,EAAE,KAAKF,MAAvB;AAA+BK,UAAAA,OAAO,EAAE,KAAKZ;AAA7C,SAAR,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,KAAKG,KAAL,CAAWU,QADd,CADF,CADF;AAOD;;;wBA7BgB;AACf,aAAO,KAAKV,KAAL,CAAWP,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAA3C;AACD;;;EArB2CkB,gB;;;AAAzBpB,gB,CACZqB,S,GAAY;AACjBP,EAAAA,aAAa,EAAEQ,mBAAUC,MADR;AAEjBR,EAAAA,eAAe,EAAEO,mBAAUC,MAFV;AAGjBX,EAAAA,aAAa,EAAEU,mBAAUE,MAHR;AAIjBd,EAAAA,OAAO,EAAEY,mBAAUG,IAJF;AAKjBvB,EAAAA,UAAU,EAAEoB,mBAAUI;AALL,C;AADA1B,gB,CASZ2B,Y,GAAe;AACpBf,EAAAA,aAAa,EAAE,GADK;AAEpBE,EAAAA,aAAa,EAAE,aAFK;AAGpBJ,EAAAA,OAAO,EAAEkB,gBAAEC;AAHS,C","sourcesContent":["// TODO: support hitSlop\nimport React, {Component} from 'react';\nimport {processColor} from 'react-native';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Reanimated from 'react-native-reanimated';\nimport {TapGestureHandler, State} from 'react-native-gesture-handler';\n\nconst {cond, eq, Value, call, block, event} = Reanimated;\n\nexport default class TouchableOpacity extends Component {\n  static propTypes = {\n    feedbackColor: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    activeOpacity: PropTypes.number,\n    onPress: PropTypes.func,\n    pressState: PropTypes.object\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.2,\n    feedbackColor: 'transparent',\n    onPress: _.noop\n  };\n\n  state = {\n    pressState: new Value(-1)\n  };\n\n  get pressState() {\n    return this.props.pressState || this.state.pressState;\n  }\n\n  onStateChange = event([\n    {\n      nativeEvent: {state: this.pressState}\n    }\n  ],\n  {useNativeDriver: true},);\n\n  _opacity = block([\n    cond(eq(this.pressState, State.END), call([], () => this.props.onPress(this.props))),\n    cond(eq(this.pressState, State.BEGAN), this.props.activeOpacity, 1)\n  ]);\n\n  _color = cond(eq(this.pressState, State.BEGAN),\n    processColor(this.props.feedbackColor || this.props.backgroundColor),\n    processColor(this.props.backgroundColor),);\n\n  render() {\n    const {style, ...others} = this.props;\n    return (\n      <TapGestureHandler onHandlerStateChange={this.onStateChange} shouldCancelWhenOutside>\n        <Reanimated.View {...others} style={[style, {backgroundColor: this._color, opacity: this._opacity}]}>\n          {this.props.children}\n        </Reanimated.View>\n      </TapGestureHandler>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}