{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _touchableOpacity = _interopRequireDefault(require(\"../touchableOpacity\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\switch\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar INNER_PADDING = 2;\nvar DEFAULT_WIDTH = 42;\nvar DEFAULT_HEIGHT = 24;\nvar DEFAULT_THUMB_SIZE = 20;\n\nvar Switch = function (_BaseComponent) {\n  (0, _inherits2.default)(Switch, _BaseComponent);\n\n  var _super = _createSuper(Switch);\n\n  function Switch() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Switch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      thumbPosition: new _reactNative.Animated.Value(_this.props.value ? 1 : 0)\n    };\n\n    _this.onPress = function () {\n      var _this$getThemeProps = _this.getThemeProps(),\n          disabled = _this$getThemeProps.disabled;\n\n      if (!disabled) {\n        _lodash.default.invoke(_this.props, 'onValueChange', !_this.props.value);\n      }\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Switch, [{\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps());\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          value = _this$getThemeProps2.value;\n\n      if (prevProps.value !== value) {\n        this.toggle(value);\n      }\n    }\n  }, {\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var _this$getThemeProps3 = this.getThemeProps(),\n          accessibilityLabel = _this$getThemeProps3.accessibilityLabel,\n          disabled = _this$getThemeProps3.disabled,\n          value = _this$getThemeProps3.value;\n\n      var switchState = value ? 'on' : 'off';\n      return {\n        accessible: true,\n        accessibilityLabel: accessibilityLabel ? accessibilityLabel + \" \" + switchState : \"switch \" + switchState,\n        accessibilityRole: 'button',\n        accessibilityStates: disabled ? ['disabled'] : undefined\n      };\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(value) {\n      var thumbPosition = this.state.thumbPosition;\n\n      _reactNative.Animated.timing(thumbPosition, {\n        toValue: value ? 1 : 0,\n        duration: 200,\n        easing: _reactNative.Easing.bezier(0.77, 0.0, 0.175, 1.0),\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"calcThumbOnPosition\",\n    value: function calcThumbOnPosition() {\n      var props = this.getThemeProps();\n      var width = props.width || DEFAULT_WIDTH;\n      var thumbSize = props.thumbSize || DEFAULT_THUMB_SIZE;\n      var position = width - (2 * INNER_PADDING + thumbSize);\n      position *= _helpers.Constants.isRTL ? -1 : 1;\n      return position;\n    }\n  }, {\n    key: \"getSwitchStyle\",\n    value: function getSwitchStyle() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          value = _this$getThemeProps4.value,\n          onColor = _this$getThemeProps4.onColor,\n          offColor = _this$getThemeProps4.offColor,\n          propsStyle = _this$getThemeProps4.style,\n          disabled = _this$getThemeProps4.disabled,\n          disabledColor = _this$getThemeProps4.disabledColor;\n\n      var style = [this.styles.switch];\n\n      if (disabled) {\n        style.push(disabledColor ? {\n          backgroundColor: disabledColor\n        } : this.styles.switchDisabled);\n      } else if (value) {\n        style.push(onColor ? {\n          backgroundColor: onColor\n        } : this.styles.switchOn);\n      } else {\n        style.push(offColor ? {\n          backgroundColor: offColor\n        } : this.styles.switchOff);\n      }\n\n      style.push(propsStyle);\n      return style;\n    }\n  }, {\n    key: \"renderThumb\",\n    value: function renderThumb() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          thumbStyle = _this$getThemeProps5.thumbStyle;\n\n      var thumbPosition = this.state.thumbPosition;\n      var interpolatedTranslateX = thumbPosition.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, this.calcThumbOnPosition()]\n      });\n      var thumbPositionStyle = {\n        transform: [{\n          translateX: interpolatedTranslateX\n        }]\n      };\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [this.styles.thumb, thumbPositionStyle, thumbStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n          others = (0, _extends2.default)({}, _this$getThemeProps6);\n\n      return _react.default.createElement(_touchableOpacity.default, (0, _extends2.default)({}, this.getAccessibilityProps(), {\n        activeOpacity: 1\n      }, others, {\n        style: this.getSwitchStyle(),\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }), this.renderThumb());\n    }\n  }]);\n  return Switch;\n}(_commons.BaseComponent);\n\nSwitch.displayName = 'Switch';\nSwitch.propTypes = {\n  value: _propTypes.default.bool,\n  onValueChange: _propTypes.default.func,\n  disabled: _propTypes.default.bool,\n  width: _propTypes.default.number,\n  height: _propTypes.default.number,\n  onColor: _propTypes.default.string,\n  offColor: _propTypes.default.string,\n  disabledColor: _propTypes.default.string,\n  thumbColor: _propTypes.default.string,\n  thumbSize: _propTypes.default.number,\n  thumbStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array])\n};\n\nfunction createStyles(_ref) {\n  var _ref$width = _ref.width,\n      width = _ref$width === void 0 ? DEFAULT_WIDTH : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? DEFAULT_HEIGHT : _ref$height,\n      _ref$onColor = _ref.onColor,\n      onColor = _ref$onColor === void 0 ? _style.Colors.blue30 : _ref$onColor,\n      _ref$offColor = _ref.offColor,\n      offColor = _ref$offColor === void 0 ? _style.Colors.blue60 : _ref$offColor,\n      _ref$disabledColor = _ref.disabledColor,\n      disabledColor = _ref$disabledColor === void 0 ? _style.Colors.dark70 : _ref$disabledColor,\n      _ref$thumbColor = _ref.thumbColor,\n      thumbColor = _ref$thumbColor === void 0 ? _style.Colors.white : _ref$thumbColor,\n      _ref$thumbSize = _ref.thumbSize,\n      thumbSize = _ref$thumbSize === void 0 ? DEFAULT_THUMB_SIZE : _ref$thumbSize;\n  return _reactNative.StyleSheet.create({\n    switch: {\n      width: width,\n      height: height,\n      borderRadius: _style.BorderRadiuses.br100,\n      justifyContent: 'center',\n      padding: INNER_PADDING\n    },\n    switchOn: {\n      backgroundColor: onColor\n    },\n    switchOff: {\n      backgroundColor: offColor\n    },\n    switchDisabled: {\n      backgroundColor: disabledColor\n    },\n    thumb: {\n      width: thumbSize,\n      height: thumbSize,\n      borderRadius: thumbSize / 2,\n      backgroundColor: thumbColor\n    }\n  });\n}\n\nvar _default = Switch;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/switch/index.js"],"names":["INNER_PADDING","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_THUMB_SIZE","Switch","state","thumbPosition","Animated","Value","props","value","onPress","getThemeProps","disabled","_","invoke","styles","createStyles","prevProps","toggle","accessibilityLabel","switchState","accessible","accessibilityRole","accessibilityStates","undefined","timing","toValue","duration","easing","Easing","bezier","useNativeDriver","start","width","thumbSize","position","Constants","isRTL","onColor","offColor","propsStyle","style","disabledColor","switch","push","backgroundColor","switchDisabled","switchOn","switchOff","thumbStyle","interpolatedTranslateX","interpolate","inputRange","outputRange","calcThumbOnPosition","thumbPositionStyle","transform","translateX","thumb","others","getAccessibilityProps","getSwitchStyle","renderThumb","BaseComponent","displayName","propTypes","PropTypes","bool","onValueChange","func","number","height","string","thumbColor","oneOfType","object","array","Colors","blue30","blue60","dark70","white","StyleSheet","create","borderRadius","BorderRadiuses","br100","justifyContent","padding"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, Animated, Easing} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {Colors, BorderRadiuses} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport TouchableOpacity from '../touchableOpacity';\n\nconst INNER_PADDING = 2;\nconst DEFAULT_WIDTH = 42;\nconst DEFAULT_HEIGHT = 24;\nconst DEFAULT_THUMB_SIZE = 20;\n\n/**\n * Switch component for toggling boolean value related to some context\n */\nclass Switch extends BaseComponent {\n  static displayName = 'Switch';\n\n  static propTypes = {\n    /**\n     * The value of the switch. If true the switch will be turned on. Default value is false\n     */\n    value: PropTypes.bool,\n    /**\n     * Invoked with the new value when the value changes\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * Whether the switch should be disabled\n     */\n    disabled: PropTypes.bool,\n    /**\n     * The Switch width\n     */\n    width: PropTypes.number,\n    /**\n     * The Switch height\n     */\n    height: PropTypes.number,\n    /**\n     * The Switch background color when it's turned on\n     */\n    onColor: PropTypes.string,\n    /**\n     * The Switch background color when it's turned off\n     */\n    offColor: PropTypes.string,\n    /**\n     * The Switch background color when it's disabled\n     */\n    disabledColor: PropTypes.string,\n    /**\n     * The Switch's thumb color\n     */\n    thumbColor: PropTypes.string,\n    /**\n     * The Switch's thumb size (width & height)\n     */\n    thumbSize: PropTypes.number,\n    /**\n     * The Switch's thumb style\n     */\n    thumbStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n  };\n\n  state = {\n    thumbPosition: new Animated.Value(this.props.value ? 1 : 0)\n  };\n\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps());\n  }\n\n  componentDidUpdate(prevProps) {\n    const {value} = this.getThemeProps();\n    if (prevProps.value !== value) {\n      this.toggle(value);\n    }\n  }\n\n  getAccessibilityProps() {\n    const {accessibilityLabel, disabled, value} = this.getThemeProps();\n    const switchState = value ? 'on' : 'off';\n\n    return {\n      accessible: true,\n      accessibilityLabel: accessibilityLabel ? `${accessibilityLabel} ${switchState}` : `switch ${switchState}`, //TODO: RN60 fix label and role and convert to accessibilityActions\n      accessibilityRole: 'button',\n      accessibilityStates: disabled ? ['disabled'] : undefined\n    };\n  }\n\n  toggle(value) {\n    const {thumbPosition} = this.state;\n\n    Animated.timing(thumbPosition, {\n      toValue: value ? 1 : 0,\n      duration: 200,\n      easing: Easing.bezier(0.77, 0.0, 0.175, 1.0),\n      useNativeDriver: true\n    }).start();\n  }\n\n  onPress = () => {\n    const {disabled} = this.getThemeProps();\n\n    if (!disabled) {\n      _.invoke(this.props, 'onValueChange', !this.props.value);\n    }\n  };\n\n  calcThumbOnPosition() {\n    const props = this.getThemeProps();\n    const width = props.width || DEFAULT_WIDTH;\n    const thumbSize = props.thumbSize || DEFAULT_THUMB_SIZE;\n    let position = width - (2 * INNER_PADDING + thumbSize);\n    position *= Constants.isRTL ? -1 : 1;\n    return position;\n  }\n\n  getSwitchStyle() {\n    const {value, onColor, offColor, style: propsStyle, disabled, disabledColor} = this.getThemeProps();\n    const style = [this.styles.switch];\n\n    if (disabled) {\n      style.push(disabledColor ? {backgroundColor: disabledColor} : this.styles.switchDisabled);\n    } else if (value) {\n      style.push(onColor ? {backgroundColor: onColor} : this.styles.switchOn);\n    } else {\n      style.push(offColor ? {backgroundColor: offColor} : this.styles.switchOff);\n    }\n\n    style.push(propsStyle);\n    return style;\n  }\n\n  renderThumb() {\n    const {thumbStyle} = this.getThemeProps();\n    const {thumbPosition} = this.state;\n\n    const interpolatedTranslateX = thumbPosition.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, this.calcThumbOnPosition()]\n    });\n\n    const thumbPositionStyle = {\n      transform: [{translateX: interpolatedTranslateX}]\n    };\n\n    return <Animated.View style={[this.styles.thumb, thumbPositionStyle, thumbStyle]}/>;\n  }\n\n  render() {\n    const {...others} = this.getThemeProps();\n\n    return (\n      <TouchableOpacity\n        {...this.getAccessibilityProps()}\n        activeOpacity={1}\n        {...others}\n        style={this.getSwitchStyle()}\n        onPress={this.onPress}\n      >\n        {this.renderThumb()}\n      </TouchableOpacity>\n    );\n  }\n}\n\nfunction createStyles({\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT,\n  onColor = Colors.blue30,\n  offColor = Colors.blue60,\n  disabledColor = Colors.dark70,\n  thumbColor = Colors.white,\n  thumbSize = DEFAULT_THUMB_SIZE\n}) {\n  return StyleSheet.create({\n    switch: {\n      width,\n      height,\n      borderRadius: BorderRadiuses.br100,\n      justifyContent: 'center',\n      padding: INNER_PADDING\n    },\n    switchOn: {\n      backgroundColor: onColor\n    },\n    switchOff: {\n      backgroundColor: offColor\n    },\n    switchDisabled: {\n      backgroundColor: disabledColor\n    },\n    thumb: {\n      width: thumbSize,\n      height: thumbSize,\n      borderRadius: thumbSize / 2,\n      backgroundColor: thumbColor\n    }\n  });\n}\n\nexport default Switch;\n"]},"metadata":{},"sourceType":"script"}