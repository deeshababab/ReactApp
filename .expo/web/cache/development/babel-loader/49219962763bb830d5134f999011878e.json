{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _TabBarContext = _interopRequireDefault(require(\"./TabBarContext\"));\n\nvar _TabBarItem = _interopRequireDefault(require(\"./TabBarItem\"));\n\nvar _ReanimatedObject = _interopRequireDefault(require(\"./ReanimatedObject\"));\n\nvar _commons = require(\"../../commons\");\n\nvar _view = _interopRequireDefault(require(\"../../components/view\"));\n\nvar _text = _interopRequireDefault(require(\"../../components/text\"));\n\nvar _style = require(\"../../style\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\incubator\\\\TabController\\\\TabBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DEFAULT_HEIGHT = 48;\nvar Code = _reactNativeReanimated.default.Code,\n    Clock = _reactNativeReanimated.default.Clock,\n    Value = _reactNativeReanimated.default.Value,\n    add = _reactNativeReanimated.default.add,\n    sub = _reactNativeReanimated.default.sub,\n    cond = _reactNativeReanimated.default.cond,\n    eq = _reactNativeReanimated.default.eq,\n    stopClock = _reactNativeReanimated.default.stopClock,\n    startClock = _reactNativeReanimated.default.startClock,\n    clockRunning = _reactNativeReanimated.default.clockRunning,\n    timing = _reactNativeReanimated.default.timing,\n    block = _reactNativeReanimated.default.block,\n    set = _reactNativeReanimated.default.set;\n\nvar TabBar = function (_PureComponent) {\n  (0, _inherits2.default)(TabBar, _PureComponent);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar(props, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TabBar);\n    _this = _super.call(this, props, context);\n\n    _this.onItemLayout = function (itemWidth, itemIndex) {\n      _this._itemsWidths[itemIndex] = itemWidth;\n\n      if (!_lodash.default.includes(_this._itemsWidths, null)) {\n        var selectedIndex = _this.context.selectedIndex;\n\n        var itemsOffsets = _lodash.default.map(_this._itemsWidths, function (w, index) {\n          return _lodash.default.sum(_lodash.default.take(_this._itemsWidths, index));\n        });\n\n        _this.setState({\n          itemsWidths: _this._itemsWidths,\n          itemsOffsets: itemsOffsets\n        });\n\n        _this.tabBar.current.scrollTo({\n          x: itemsOffsets[selectedIndex],\n          animated: false\n        });\n      }\n    };\n\n    _this.onContentSizeChange = function (width) {\n      if (width > _helpers.Constants.screenWidth) {\n        _this.setState({\n          scrollEnabled: true\n        });\n      }\n    };\n\n    if (_this.props.children) {\n      console.warn('uilib: Please pass the \"items\" prop to TabController.TabBar instead of children');\n    }\n\n    var itemsCount = _this.itemsCount;\n    _this.tabBar = _react.default.createRef();\n    _this._itemsWidths = _lodash.default.times(itemsCount, function () {\n      return null;\n    });\n    _this._indicatorOffset = new _ReanimatedObject.default({\n      duration: 300,\n      easing: _reactNativeReanimated.Easing.bezier(0.23, 1, 0.32, 1)\n    });\n    _this._indicatorWidth = new _ReanimatedObject.default({\n      duration: 300,\n      easing: _reactNativeReanimated.Easing.bezier(0.23, 1, 0.32, 1)\n    });\n    _this._indicatorTransitionStyle = {\n      width: _this._indicatorWidth.value,\n      left: _this._indicatorOffset.value\n    };\n    _this.state = {\n      scrollEnabled: false,\n      itemsWidths: undefined\n    };\n\n    _this.registerTabItems();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(TabBar, [{\n    key: \"registerTabItems\",\n    value: function registerTabItems() {\n      var registerTabItems = this.context.registerTabItems;\n      var items = this.props.items;\n      var ignoredItems = [];\n      var itemsCount;\n\n      if (items) {\n        itemsCount = _lodash.default.size(items);\n\n        _lodash.default.forEach(items, function (item, index) {\n          if (item.ignore) {\n            ignoredItems.push(index);\n          }\n        });\n      } else {\n        itemsCount = _react.default.Children.count(this.children);\n\n        _react.default.Children.toArray(this.children).forEach(function (child, index) {\n          if (child.props.ignore) {\n            ignoredItems.push(index);\n          }\n        });\n      }\n\n      registerTabItems(itemsCount, ignoredItems);\n    }\n  }, {\n    key: \"runTiming\",\n    value: function runTiming(targetValue, prevValue, duration) {\n      var clock = new Clock();\n      var state = {\n        finished: new Value(0),\n        position: prevValue,\n        time: new Value(0),\n        frameTime: new Value(0)\n      };\n      var config = {\n        duration: duration,\n        toValue: targetValue,\n        easing: _reactNativeReanimated.Easing.bezier(0.23, 1, 0.32, 1)\n      };\n      return block([cond(clockRunning(clock), [], [startClock(clock)]), timing(clock, state, config), cond(state.finished, [stopClock(clock), set(state.finished, 0), set(state.time, 0), set(state.frameTime, 0), set(prevValue, state.position)]), state.position]);\n    }\n  }, {\n    key: \"renderSelectedIndicator\",\n    value: function renderSelectedIndicator() {\n      var itemsWidths = this.state.itemsWidths;\n      var indicatorStyle = this.props.indicatorStyle;\n\n      if (itemsWidths) {\n        return _react.default.createElement(_reactNativeReanimated.default.View, {\n          style: [styles.selectedIndicator, indicatorStyle, this._indicatorTransitionStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }, {\n    key: \"renderTabBarItems\",\n    value: function renderTabBarItems() {\n      var _this2 = this;\n\n      var itemStates = this.context.itemStates;\n      var _this$props = this.props,\n          items = _this$props.items,\n          labelColor = _this$props.labelColor,\n          selectedLabelColor = _this$props.selectedLabelColor,\n          labelStyle = _this$props.labelStyle,\n          uppercase = _this$props.uppercase,\n          iconColor = _this$props.iconColor,\n          selectedIconColor = _this$props.selectedIconColor,\n          activeBackgroundColor = _this$props.activeBackgroundColor;\n\n      if (_lodash.default.isEmpty(itemStates)) {\n        return;\n      }\n\n      if (items) {\n        return _lodash.default.map(items, function (item, index) {\n          return _react.default.createElement(_TabBarItem.default, (0, _extends2.default)({\n            labelColor: labelColor,\n            selectedLabelColor: selectedLabelColor,\n            labelStyle: labelStyle,\n            uppercase: uppercase,\n            iconColor: iconColor,\n            selectedIconColor: selectedIconColor,\n            activeBackgroundColor: activeBackgroundColor\n          }, item, _this2.context, {\n            index: index,\n            state: itemStates[index],\n            onLayout: _this2.onItemLayout,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 11\n            }\n          }));\n        });\n      } else {\n        if (this.tabBarItems) {\n          return this.tabBarItems;\n        }\n\n        this.tabBarItems = _react.default.Children.map(this.children, function (child, index) {\n          return _react.default.cloneElement(child, _objectSpread(_objectSpread(_objectSpread({\n            labelColor: labelColor,\n            selectedLabelColor: selectedLabelColor,\n            labelStyle: labelStyle,\n            uppercase: uppercase,\n            iconColor: iconColor,\n            selectedIconColor: selectedIconColor,\n            activeBackgroundColor: activeBackgroundColor\n          }, child.props), _this2.context), {}, {\n            index: index,\n            state: itemStates[index],\n            onLayout: _this2.onItemLayout\n          }));\n        });\n        return this.tabBarItems;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var currentPage = this.context.currentPage;\n      var _this$props2 = this.props,\n          height = _this$props2.height,\n          enableShadow = _this$props2.enableShadow;\n      var _this$state = this.state,\n          itemsWidths = _this$state.itemsWidths,\n          itemsOffsets = _this$state.itemsOffsets,\n          scrollEnabled = _this$state.scrollEnabled;\n      return _react.default.createElement(_view.default, {\n        style: enableShadow && styles.containerShadow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        ref: this.tabBar,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.tabBarScroll,\n        contentContainerStyle: styles.tabBarScrollContent,\n        scrollEnabled: scrollEnabled,\n        onContentSizeChange: this.onContentSizeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_view.default, {\n        style: [styles.tabBar, height && {\n          height: height\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }\n      }, this.renderTabBarItems()), this.renderSelectedIndicator()), !_lodash.default.isUndefined(itemsWidths) && _react.default.createElement(Code, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }\n      }, function () {\n        var indicatorInset = _style.Spacings.s4;\n        return block([].concat((0, _toConsumableArray2.default)(_lodash.default.map(itemsWidths, function (width, index) {\n          return cond(eq(currentPage, index), [set(_this3._indicatorWidth.nextValue, sub(itemsWidths[index], indicatorInset * 2))]);\n        })), (0, _toConsumableArray2.default)(_lodash.default.map(itemsOffsets, function (offset, index) {\n          return cond(eq(currentPage, index), [set(_this3._indicatorOffset.nextValue, add(itemsOffsets[index], indicatorInset))]);\n        })), [_this3._indicatorOffset.getTransitionBlock(), _this3._indicatorWidth.getTransitionBlock()]));\n      }));\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return _lodash.default.filter(this.props.children, function (child) {\n        return !!child;\n      });\n    }\n  }, {\n    key: \"itemsCount\",\n    get: function get() {\n      var items = this.props.items;\n\n      if (items) {\n        return _lodash.default.size(items);\n      } else {\n        return _react.default.Children.count(this.children);\n      }\n    }\n  }]);\n  return TabBar;\n}(_react.PureComponent);\n\nTabBar.displayName = 'TabController.TabBar';\nTabBar.contextType = _TabBarContext.default;\nTabBar.propTypes = {\n  items: _propTypes.default.arrayOf(_propTypes.default.shape(_TabBarItem.default)),\n  height: _propTypes.default.number,\n  enableShadow: _propTypes.default.bool,\n  indicatorStyle: _reactNative.ViewPropTypes.style,\n  labelStyle: _text.default.propTypes.style,\n  labelColor: _propTypes.default.string,\n  selectedLabelColor: _propTypes.default.string,\n  uppercase: _propTypes.default.bool,\n  iconColor: _propTypes.default.string,\n  selectedIconColor: _propTypes.default.string,\n  activeBackgroundColor: _propTypes.default.string,\n  containerWidth: _propTypes.default.number\n};\nTabBar.defaultProps = {\n  containerWidth: _helpers.Constants.screenWidth\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  tabBar: {\n    flex: 1,\n    backgroundColor: _style.Colors.white,\n    height: DEFAULT_HEIGHT,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tabBarScroll: {\n    backgroundColor: _style.Colors.white\n  },\n  tabBarScrollContent: {\n    minWidth: _helpers.Constants.screenWidth\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: 70,\n    height: 2,\n    backgroundColor: _style.Colors.blue30\n  },\n  containerShadow: _objectSpread({}, _reactNative.Platform.select({\n    ios: {\n      shadowColor: _style.Colors.dark10,\n      shadowOpacity: 0.05,\n      shadowRadius: 2,\n      shadowOffset: {\n        height: 6,\n        width: 0\n      }\n    },\n    android: {\n      elevation: 5,\n      backgroundColor: _style.Colors.white\n    }\n  }))\n});\n\nvar _default = (0, _commons.asBaseComponent)((0, _commons.forwardRef)(TabBar));\n\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/incubator/TabController/TabBar.js"],"names":["DEFAULT_HEIGHT","Code","Reanimated","Clock","Value","add","sub","cond","eq","stopClock","startClock","clockRunning","timing","block","set","TabBar","props","context","onItemLayout","itemWidth","itemIndex","_itemsWidths","_","includes","selectedIndex","itemsOffsets","map","w","index","sum","take","setState","itemsWidths","tabBar","current","scrollTo","x","animated","onContentSizeChange","width","Constants","screenWidth","scrollEnabled","children","console","warn","itemsCount","React","createRef","times","_indicatorOffset","ReanimatedObject","duration","easing","Easing","bezier","_indicatorWidth","_indicatorTransitionStyle","value","left","state","undefined","registerTabItems","items","ignoredItems","size","forEach","item","ignore","push","Children","count","toArray","child","targetValue","prevValue","clock","finished","position","time","frameTime","config","toValue","indicatorStyle","styles","selectedIndicator","itemStates","labelColor","selectedLabelColor","labelStyle","uppercase","iconColor","selectedIconColor","activeBackgroundColor","isEmpty","tabBarItems","cloneElement","onLayout","currentPage","height","enableShadow","containerShadow","tabBarScroll","tabBarScrollContent","renderTabBarItems","renderSelectedIndicator","isUndefined","indicatorInset","Spacings","s4","nextValue","offset","getTransitionBlock","filter","PureComponent","displayName","contextType","TabBarContext","propTypes","PropTypes","arrayOf","shape","TabBarItem","number","bool","ViewPropTypes","style","Text","string","containerWidth","defaultProps","StyleSheet","create","flex","backgroundColor","Colors","white","flexDirection","justifyContent","minWidth","tab","alignItems","bottom","blue30","Platform","select","ios","shadowColor","dark10","shadowOpacity","shadowRadius","shadowOffset","android","elevation"],"mappings":"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","sourcesContent":["// TODO: support commented props\n// TODO: disable scroll when content width is shorter than screen width\nimport React, {PureComponent} from 'react';\nimport {StyleSheet, ScrollView, ViewPropTypes, Platform} from 'react-native';\nimport Reanimated, {Easing} from 'react-native-reanimated';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport TabBarContext from './TabBarContext';\nimport TabBarItem from './TabBarItem';\nimport ReanimatedObject from './ReanimatedObject';\nimport {asBaseComponent, forwardRef} from '../../commons';\nimport View from '../../components/view';\nimport Text from '../../components/text';\nimport {Colors, Spacings} from '../../style';\nimport {Constants} from '../../helpers';\n\nconst DEFAULT_HEIGHT = 48;\nconst {Code, Clock, Value, add, sub, cond, eq, stopClock, startClock, clockRunning, timing, block, set} = Reanimated;\n\n/**\n * @description: TabController's TabBar component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TabControllerScreen/index.js\n */\nclass TabBar extends PureComponent {\n  static displayName = 'TabController.TabBar';\n  static contextType = TabBarContext;\n\n  static propTypes = {\n    /**\n     * The list of tab bar items\n     */\n    items: PropTypes.arrayOf(PropTypes.shape(TabBarItem)),\n    /**\n     * Tab Bar height\n     */\n    height: PropTypes.number,\n    /**\n     * Show Tab Bar bottom shadow\n     */\n    enableShadow: PropTypes.bool,\n    // /**\n    //  * The minimum number of tabs to render in scroll mode\n    //  */\n    // minTabsForScroll: PropTypes.number,\n    /**\n     * custom style for the selected indicator\n     */\n    indicatorStyle: ViewPropTypes.style,\n    /**\n     * custom label style\n     */\n    labelStyle: Text.propTypes.style,\n    /**\n     * the default label color\n     */\n    labelColor: PropTypes.string,\n    /**\n     * the selected label color\n     */\n    selectedLabelColor: PropTypes.string,\n    /**\n     * whether to change the text to uppercase\n     */\n    uppercase: PropTypes.bool,\n    /**\n     * icon tint color\n     */\n    iconColor: PropTypes.string,\n    /**\n     * icon selected tint color\n     */\n    selectedIconColor: PropTypes.string,\n    /**\n     * TODO: rename to feedbackColor\n     * Apply background color on press for TouchableOpacity\n     */\n    activeBackgroundColor: PropTypes.string,\n    /**\n     * The TabBar container width\n     */\n    containerWidth: PropTypes.number\n  };\n\n  static defaultProps = {\n    containerWidth: Constants.screenWidth\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    if (this.props.children) {\n      console.warn('uilib: Please pass the \"items\" prop to TabController.TabBar instead of children');\n    }\n\n    const itemsCount = this.itemsCount;\n\n    this.tabBar = React.createRef();\n\n    this._itemsWidths = _.times(itemsCount, () => null);\n    this._indicatorOffset = new ReanimatedObject({duration: 300, easing: Easing.bezier(0.23, 1, 0.32, 1)});\n    this._indicatorWidth = new ReanimatedObject({duration: 300, easing: Easing.bezier(0.23, 1, 0.32, 1)});\n    this._indicatorTransitionStyle = {\n      width: this._indicatorWidth.value,\n      left: this._indicatorOffset.value\n    };\n\n    this.state = {\n      scrollEnabled: false,\n      itemsWidths: undefined\n    };\n\n    this.registerTabItems();\n  }\n\n  get children() {\n    return _.filter(this.props.children, child => !!child);\n  }\n\n  get itemsCount() {\n    const {items} = this.props;\n    if (items) {\n      return _.size(items);\n    } else {\n      return React.Children.count(this.children);\n    }\n  }\n\n  registerTabItems() {\n    const {registerTabItems} = this.context;\n    const {items} = this.props;\n    const ignoredItems = [];\n    let itemsCount;\n\n    if (items) {\n      itemsCount = _.size(items);\n      _.forEach(items, (item, index) => {\n        if (item.ignore) {\n          ignoredItems.push(index);\n        }\n      });\n      // TODO: deprecate with props.children\n    } else {\n      itemsCount = React.Children.count(this.children);\n      React.Children.toArray(this.children).forEach((child, index) => {\n        if (child.props.ignore) {\n          ignoredItems.push(index);\n        }\n      });\n    }\n\n    registerTabItems(itemsCount, ignoredItems);\n  }\n\n  onItemLayout = (itemWidth, itemIndex) => {\n    this._itemsWidths[itemIndex] = itemWidth;\n    if (!_.includes(this._itemsWidths, null)) {\n      const {selectedIndex} = this.context;\n      const itemsOffsets = _.map(this._itemsWidths, (w, index) => _.sum(_.take(this._itemsWidths, index)));\n      this.setState({itemsWidths: this._itemsWidths, itemsOffsets});\n      this.tabBar.current.scrollTo({x: itemsOffsets[selectedIndex], animated: false});\n    }\n  };\n\n  onContentSizeChange = width => {\n    if (width > Constants.screenWidth) {\n      this.setState({scrollEnabled: true});\n    }\n  };\n\n  runTiming(targetValue, prevValue, duration) {\n    const clock = new Clock();\n    const state = {\n      finished: new Value(0),\n      position: prevValue,\n      time: new Value(0),\n      frameTime: new Value(0)\n    };\n\n    const config = {\n      duration,\n      toValue: targetValue,\n      easing: Easing.bezier(0.23, 1, 0.32, 1)\n    };\n\n    return block([\n      cond(clockRunning(clock), [], [startClock(clock)]),\n      timing(clock, state, config),\n      cond(state.finished, [\n        stopClock(clock),\n        set(state.finished, 0),\n        set(state.time, 0),\n        set(state.frameTime, 0),\n        set(prevValue, state.position)\n      ]),\n      state.position\n    ]);\n  }\n\n  renderSelectedIndicator() {\n    const {itemsWidths} = this.state;\n    const {indicatorStyle} = this.props;\n    if (itemsWidths) {\n      return <Reanimated.View style={[styles.selectedIndicator, indicatorStyle, this._indicatorTransitionStyle]}/>;\n    }\n  }\n\n  renderTabBarItems() {\n    const {itemStates} = this.context;\n    const {\n      items,\n      labelColor,\n      selectedLabelColor,\n      labelStyle,\n      uppercase,\n      iconColor,\n      selectedIconColor,\n      activeBackgroundColor\n    } = this.props;\n\n    if (_.isEmpty(itemStates)) {\n      return;\n    }\n\n    if (items) {\n      return _.map(items, (item, index) => {\n        return (\n          <TabBarItem\n            labelColor={labelColor}\n            selectedLabelColor={selectedLabelColor}\n            labelStyle={labelStyle}\n            uppercase={uppercase}\n            iconColor={iconColor}\n            selectedIconColor={selectedIconColor}\n            activeBackgroundColor={activeBackgroundColor}\n            {...item}\n            {...this.context}\n            index={index}\n            state={itemStates[index]}\n            onLayout={this.onItemLayout}\n          />\n        );\n      });\n    } else {\n      // TODO: Remove once props.children is deprecated\n\n      if (this.tabBarItems) {\n        return this.tabBarItems;\n      }\n\n      this.tabBarItems = React.Children.map(this.children, (child, index) => {\n        return React.cloneElement(child, {\n          labelColor,\n          selectedLabelColor,\n          labelStyle,\n          uppercase,\n          iconColor,\n          selectedIconColor,\n          activeBackgroundColor,\n          ...child.props,\n          ...this.context,\n          index,\n          state: itemStates[index],\n          onLayout: this.onItemLayout\n        });\n      });\n      return this.tabBarItems;\n    }\n  }\n\n  render() {\n    const {currentPage} = this.context;\n    const {height, enableShadow} = this.props;\n    const {itemsWidths, itemsOffsets, scrollEnabled} = this.state;\n    return (\n      <View style={enableShadow && styles.containerShadow}>\n        <ScrollView\n          ref={this.tabBar}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          style={styles.tabBarScroll}\n          contentContainerStyle={styles.tabBarScrollContent}\n          scrollEnabled={scrollEnabled}\n          onContentSizeChange={this.onContentSizeChange}\n        >\n          <View style={[styles.tabBar, height && {height}]}>{this.renderTabBarItems()}</View>\n          {this.renderSelectedIndicator()}\n        </ScrollView>\n        {!_.isUndefined(itemsWidths) && (\n          <Code>\n            {() => {\n              const indicatorInset = Spacings.s4;\n\n              return block([\n                // calc indicator current width\n                ..._.map(itemsWidths, (width, index) => {\n                  return cond(eq(currentPage, index), [\n                    set(this._indicatorWidth.nextValue, sub(itemsWidths[index], indicatorInset * 2))\n                  ]);\n                }),\n                // calc indicator current position\n                ..._.map(itemsOffsets, (offset, index) => {\n                  return cond(eq(currentPage, index), [\n                    set(this._indicatorOffset.nextValue, add(itemsOffsets[index], indicatorInset))\n                  ]);\n                }),\n\n                // Offset transition\n                this._indicatorOffset.getTransitionBlock(),\n                // Width transition\n                this._indicatorWidth.getTransitionBlock()\n              ]);\n            }}\n          </Code>\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    flex: 1,\n    backgroundColor: Colors.white,\n    height: DEFAULT_HEIGHT,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tabBarScroll: {\n    backgroundColor: Colors.white\n  },\n  tabBarScrollContent: {\n    minWidth: Constants.screenWidth\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: 70,\n    height: 2,\n    backgroundColor: Colors.blue30\n  },\n  containerShadow: {\n    ...Platform.select({\n      ios: {\n        shadowColor: Colors.dark10,\n        shadowOpacity: 0.05,\n        shadowRadius: 2,\n        shadowOffset: {height: 6, width: 0}\n      },\n      android: {\n        elevation: 5,\n        backgroundColor: Colors.white\n      }\n    })\n  }\n});\n\nexport default asBaseComponent(forwardRef(TabBar));\n"]},"metadata":{},"sourceType":"script"}