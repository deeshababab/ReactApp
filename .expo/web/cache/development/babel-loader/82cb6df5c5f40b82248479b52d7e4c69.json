{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _reactNativeReanimated = _interopRequireDefault(require(\"react-native-reanimated\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _TabBarContext = _interopRequireDefault(require(\"./TabBarContext\"));\n\nvar _TabBar = _interopRequireDefault(require(\"./TabBar\"));\n\nvar _TabBarItem = _interopRequireDefault(require(\"./TabBarItem\"));\n\nvar _TabPage = _interopRequireDefault(require(\"./TabPage\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\incubator\\\\TabController\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar cond = _reactNativeReanimated.default.cond,\n    Code = _reactNativeReanimated.default.Code,\n    and = _reactNativeReanimated.default.and,\n    eq = _reactNativeReanimated.default.eq,\n    set = _reactNativeReanimated.default.set,\n    Value = _reactNativeReanimated.default.Value,\n    block = _reactNativeReanimated.default.block;\n\nvar TabController = function (_Component) {\n  (0, _inherits2.default)(TabController, _Component);\n\n  var _super = _createSuper(TabController);\n\n  function TabController() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TabController);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      itemStates: []\n    };\n    _this._targetPage = new Value(-1);\n    _this._currentPage = new Value(_this.props.selectedIndex);\n\n    _this.getProviderContextValue = function () {\n      var itemStates = _this.state.itemStates;\n      var _this$props = _this.props,\n          onChangeIndex = _this$props.onChangeIndex,\n          selectedIndex = _this$props.selectedIndex;\n      return {\n        selectedIndex: selectedIndex,\n        currentPage: _this._currentPage,\n        itemStates: itemStates,\n        registerTabItems: _this.registerTabItems,\n        onChangeIndex: onChangeIndex\n      };\n    };\n\n    _this.registerTabItems = function (tabItemsCount, ignoredItems) {\n      var itemStates = _lodash.default.times(tabItemsCount, function () {\n        return new Value(-1);\n      });\n\n      _this.setState({\n        itemStates: itemStates,\n        ignoredItems: ignoredItems\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(TabController, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          itemStates = _this$state.itemStates,\n          ignoredItems = _this$state.ignoredItems;\n      return _react.default.createElement(_TabBarContext.default.Provider, {\n        value: this.getProviderContextValue(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, this.props.children, !_lodash.default.isEmpty(itemStates) && _react.default.createElement(Code, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, function () {\n        return block((0, _toConsumableArray2.default)(_lodash.default.map(itemStates, function (state, index) {\n          return [cond(and(eq(state, _reactNativeGestureHandler.State.BEGAN), !_lodash.default.includes(ignoredItems, index)), set(_this2._targetPage, index)), cond(and(eq(_this2._targetPage, index), eq(state, _reactNativeGestureHandler.State.END), !_lodash.default.includes(ignoredItems, index)), set(_this2._currentPage, index))];\n        })));\n      }));\n    }\n  }]);\n  return TabController;\n}(_react.Component);\n\nTabController.displayName = 'TabController';\nTabController.contextType = _TabBarContext.default;\nTabController.propTypes = {\n  selectedIndex: _propTypes.default.number,\n  onChangeIndex: _propTypes.default.func\n};\nTabController.defaultProps = {\n  selectedIndex: 0,\n  activeOpacity: 0.2\n};\nTabController.TabBar = _TabBar.default;\nTabController.TabBarItem = _TabBarItem.default;\nTabController.TabPage = _TabPage.default;\nvar _default = TabController;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/incubator/TabController/index.js"],"names":["cond","Reanimated","Code","and","eq","set","Value","block","TabController","state","itemStates","_targetPage","_currentPage","props","selectedIndex","getProviderContextValue","onChangeIndex","currentPage","registerTabItems","tabItemsCount","ignoredItems","_","times","setState","children","isEmpty","map","index","State","BEGAN","includes","END","Component","displayName","contextType","TabBarContext","propTypes","PropTypes","number","func","defaultProps","activeOpacity","TabBar","TabBarItem","TabPage"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEOA,I,GAA0CC,8B,CAA1CD,I;IAAME,I,GAAoCD,8B,CAApCC,I;IAAMC,G,GAA8BF,8B,CAA9BE,G;IAAKC,E,GAAyBH,8B,CAAzBG,E;IAAIC,G,GAAqBJ,8B,CAArBI,G;IAAKC,K,GAAgBL,8B,CAAhBK,K;IAAOC,K,GAASN,8B,CAATM,K;;IASlCC,a;;;;;;;;;;;;;;;UAyBJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;UAIRC,W,GAAc,IAAIL,KAAJ,CAAU,CAAC,CAAX,C;UACdM,Y,GAAe,IAAIN,KAAJ,CAAU,MAAKO,KAAL,CAAWC,aAArB,C;;UAEfC,uB,GAA0B,YAAM;AAAA,UACvBL,UADuB,GACT,MAAKD,KADI,CACvBC,UADuB;AAAA,wBAES,MAAKG,KAFd;AAAA,UAEvBG,aAFuB,eAEvBA,aAFuB;AAAA,UAERF,aAFQ,eAERA,aAFQ;AAG9B,aAAO;AACLA,QAAAA,aAAa,EAAbA,aADK;AAELG,QAAAA,WAAW,EAAE,MAAKL,YAFb;AAGLF,QAAAA,UAAU,EAAVA,UAHK;AAILQ,QAAAA,gBAAgB,EAAE,MAAKA,gBAJlB;AAKLF,QAAAA,aAAa,EAAbA;AALK,OAAP;AAOD,K;;UAEDE,gB,GAAmB,UAACC,aAAD,EAAgBC,YAAhB,EAAiC;AAClD,UAAMV,UAAU,GAAGW,gBAAEC,KAAF,CAAQH,aAAR,EAAuB;AAAA,eAAM,IAAIb,KAAJ,CAAU,CAAC,CAAX,CAAN;AAAA,OAAvB,CAAnB;;AACA,YAAKiB,QAAL,CAAc;AAACb,QAAAA,UAAU,EAAVA,UAAD;AAAaU,QAAAA,YAAY,EAAZA;AAAb,OAAd;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBAC4B,KAAKX,KADjC;AAAA,UACAC,UADA,eACAA,UADA;AAAA,UACYU,YADZ,eACYA,YADZ;AAEP,aACE,6BAAC,sBAAD,CAAe,QAAf;AAAwB,QAAA,KAAK,EAAE,KAAKL,uBAAL,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWW,QADd,EAEG,CAACH,gBAAEI,OAAF,CAAUf,UAAV,CAAD,IACC,6BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA,eACCH,KAAK,kCACAc,gBAAEK,GAAF,CAAMhB,UAAN,EAAkB,UAACD,KAAD,EAAQkB,KAAR,EAAkB;AACrC,iBAAO,CACL3B,IAAI,CAACG,GAAG,CAACC,EAAE,CAACK,KAAD,EAAQmB,iCAAMC,KAAd,CAAH,EAAyB,CAACR,gBAAES,QAAF,CAAWV,YAAX,EAAyBO,KAAzB,CAA1B,CAAJ,EAAgEtB,GAAG,CAAC,MAAI,CAACM,WAAN,EAAmBgB,KAAnB,CAAnE,CADC,EAEL3B,IAAI,CAACG,GAAG,CAACC,EAAE,CAAC,MAAI,CAACO,WAAN,EAAmBgB,KAAnB,CAAH,EAA8BvB,EAAE,CAACK,KAAD,EAAQmB,iCAAMG,GAAd,CAAhC,EAAoD,CAACV,gBAAES,QAAF,CAAWV,YAAX,EAAyBO,KAAzB,CAArD,CAAJ,EACFtB,GAAG,CAAC,MAAI,CAACO,YAAN,EAAoBe,KAApB,CADD,CAFC,CAAP;AAKD,SANE,CADA,EADN;AAAA,OADH,CAHJ,CADF;AAoBD;;;EAvEyBK,gB;;AAAtBxB,a,CACGyB,W,GAAc,e;AADjBzB,a,CAEG0B,W,GAAcC,sB;AAFjB3B,a,CAIG4B,S,GAAY;AAKjBtB,EAAAA,aAAa,EAAEuB,mBAAUC,MALR;AASjBtB,EAAAA,aAAa,EAAEqB,mBAAUE;AATR,C;AAJf/B,a,CAoBGgC,Y,GAAe;AACpB1B,EAAAA,aAAa,EAAE,CADK;AAEpB2B,EAAAA,aAAa,EAAE;AAFK,C;AAsDxBjC,aAAa,CAACkC,MAAd,GAAuBA,eAAvB;AACAlC,aAAa,CAACmC,UAAd,GAA2BA,mBAA3B;AACAnC,aAAa,CAACoC,OAAd,GAAwBA,gBAAxB;eACepC,a","sourcesContent":["// TODO: support carousel mode\n// TODO: support auto scroll to selected index\n// TODO: support commented props\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Reanimated from 'react-native-reanimated';\nimport {State} from 'react-native-gesture-handler';\nimport TabBarContext from './TabBarContext';\nimport TabBar from './TabBar';\nimport TabBarItem from './TabBarItem';\nimport TabPage from './TabPage';\n\nconst {cond, Code, and, eq, set, Value, block} = Reanimated;\n\n/**\n * @description: A performant solution for a tab controller with lazy load mechanism\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TabControllerScreen/index.js\n * @notes: This component is based on react-native-gesture-handler\n * @important: On Android, if using react-native-navigation, make sure to wrap your screen with gestureHandlerRootHOC\n * @importantLink: https://kmagiera.github.io/react-native-gesture-handler/docs/getting-started.html#with-wix-react-native-navigation-https-githubcom-wix-react-native-navigation\n */\nclass TabController extends Component {\n  static displayName = 'TabController';\n  static contextType = TabBarContext;\n\n  static propTypes = {\n    /**\n     * TODO: change to initial index\n     * current selected tab index\n     */\n    selectedIndex: PropTypes.number,\n    /**\n     * callback for when index has change (will not be called on ignored items)\n     */\n    onChangeIndex: PropTypes.func\n    // /**\n    //  * callback for when tab selected\n    //  */\n    // onTabSelected: PropTypes.func,\n  };\n\n  static defaultProps = {\n    selectedIndex: 0,\n    activeOpacity: 0.2\n  };\n\n  state = {\n    itemStates: []\n  };\n\n  _targetPage = new Value(-1);\n  _currentPage = new Value(this.props.selectedIndex);\n\n  getProviderContextValue = () => {\n    const {itemStates} = this.state;\n    const {onChangeIndex, selectedIndex} = this.props;\n    return {\n      selectedIndex,\n      currentPage: this._currentPage,\n      itemStates,\n      registerTabItems: this.registerTabItems,\n      onChangeIndex\n    };\n  };\n\n  registerTabItems = (tabItemsCount, ignoredItems) => {\n    const itemStates = _.times(tabItemsCount, () => new Value(-1));\n    this.setState({itemStates, ignoredItems});\n  };\n\n  render() {\n    const {itemStates, ignoredItems} = this.state;\n    return (\n      <TabBarContext.Provider value={this.getProviderContextValue()}>\n        {this.props.children}\n        {!_.isEmpty(itemStates) && (\n          <Code>\n            {() =>\n              block([\n                ..._.map(itemStates, (state, index) => {\n                  return [\n                    cond(and(eq(state, State.BEGAN), !_.includes(ignoredItems, index)), set(this._targetPage, index)),\n                    cond(and(eq(this._targetPage, index), eq(state, State.END), !_.includes(ignoredItems, index)),\n                      set(this._currentPage, index),)\n                  ];\n                })\n              ])\n            }\n          </Code>\n        )}\n      </TabBarContext.Provider>\n    );\n  }\n}\n\nTabController.TabBar = TabBar;\nTabController.TabBarItem = TabBarItem;\nTabController.TabPage = TabPage;\nexport default TabController;\n"]},"metadata":{},"sourceType":"script"}