{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.RadioGroupContext = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _commons = require(\"../../commons\");\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\radioButton\\\\RadioGroup.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RadioGroupContext = _react.default.createContext({\n  value: undefined,\n  onValueChange: undefined\n});\n\nexports.RadioGroupContext = RadioGroupContext;\n\nvar RadioGroup = function (_BaseComponent) {\n  (0, _inherits2.default)(RadioGroup, _BaseComponent);\n\n  var _super = _createSuper(RadioGroup);\n\n  function RadioGroup(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RadioGroup);\n    _this = _super.call(this, props);\n\n    _this.onValueChange = function (value) {\n      _this.setState({\n        value: value\n      });\n\n      _lodash.default.invoke(_this.props, 'onValueChange', value);\n    };\n\n    if (props.value) {\n      console.warn(\"Please use \\\"initialValue\\\" instead of \\\"value\\\" in RadioGroup with value of \\\"\" + props.value + \"\\\"\");\n    }\n\n    _this.state = {\n      value: props.initialValue !== undefined ? props.initialValue : props.value\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(RadioGroup, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.initialValue !== nextProps.initialValue) {\n        this.setState({\n          value: nextProps.initialValue\n        });\n      } else if (this.props.value !== nextProps.value) {\n        this.setState({\n          value: nextProps.value\n        });\n      }\n    }\n  }, {\n    key: \"getContextProviderValue\",\n    value: function getContextProviderValue() {\n      var value = this.state.value;\n      return {\n        value: value,\n        onValueChange: this.onValueChange\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_view.default, (0, _extends2.default)({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(RadioGroupContext.Provider, {\n        value: this.getContextProviderValue(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, this.props.children));\n    }\n  }]);\n  return RadioGroup;\n}(_commons.BaseComponent);\n\nRadioGroup.displayName = 'RadioGroup';\nRadioGroup.propTypes = {\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  initialValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onValueChange: _propTypes.default.func\n};\nvar _default = RadioGroup;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/radioButton/RadioGroup.js"],"names":["RadioGroupContext","React","createContext","value","undefined","onValueChange","RadioGroup","props","setState","_","invoke","console","warn","state","initialValue","nextProps","getContextProviderValue","children","BaseComponent","displayName","propTypes","PropTypes","oneOfType","string","bool","func"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEO,IAAMA,iBAAiB,GAAGC,eAAMC,aAAN,CAAoB;AAACC,EAAAA,KAAK,EAAEC,SAAR;AAAmBC,EAAAA,aAAa,EAAED;AAAlC,CAApB,CAA1B;;;;IAKDE,U;;;;;AAmBJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;;AADiB,UAyBnBF,aAzBmB,GAyBH,UAAAF,KAAK,EAAI;AACvB,YAAKK,QAAL,CAAc;AAACL,QAAAA,KAAK,EAALA;AAAD,OAAd;;AACAM,sBAAEC,MAAF,CAAS,MAAKH,KAAd,EAAqB,eAArB,EAAsCJ,KAAtC;AACD,KA5BkB;;AAGjB,QAAII,KAAK,CAACJ,KAAV,EAAiB;AACfQ,MAAAA,OAAO,CAACC,IAAR,qFAA0FL,KAAK,CAACJ,KAAhG;AACD;;AAED,UAAKU,KAAL,GAAa;AACXV,MAAAA,KAAK,EAAEI,KAAK,CAACO,YAAN,KAAuBV,SAAvB,GAAmCG,KAAK,CAACO,YAAzC,GAAwDP,KAAK,CAACJ;AAD1D,KAAb;AAPiB;AAUlB;;;;qDAEgCY,S,EAAW;AAC1C,UAAI,KAAKR,KAAL,CAAWO,YAAX,KAA4BC,SAAS,CAACD,YAA1C,EAAwD;AACtD,aAAKN,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAEY,SAAS,CAACD;AAAlB,SAAd;AACD,OAFD,MAEO,IAAI,KAAKP,KAAL,CAAWJ,KAAX,KAAqBY,SAAS,CAACZ,KAAnC,EAA0C;AAC/C,aAAKK,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAEY,SAAS,CAACZ;AAAlB,SAAd;AACD;AACF;;;8CAEyB;AAAA,UACjBA,KADiB,GACR,KAAKU,KADG,CACjBV,KADiB;AAExB,aAAO;AAACA,QAAAA,KAAK,EAALA,KAAD;AAAQE,QAAAA,aAAa,EAAE,KAAKA;AAA5B,OAAP;AACD;;;6BAOQ;AACP,aACE,6BAAC,aAAD,6BAAU,KAAKE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,6BAAC,iBAAD,CAAmB,QAAnB;AAA4B,QAAA,KAAK,EAAE,KAAKS,uBAAL,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,KAAL,CAAWU,QADd,CADF,CADF;AAOD;;;EAzDsBC,sB;;AAAnBZ,U,CACGa,W,GAAc,Y;AADjBb,U,CAGGc,S,GAAY;AAKjBjB,EAAAA,KAAK,EAAEkB,mBAAUC,SAAV,CAAoB,CAACD,mBAAUE,MAAX,EAAmBF,mBAAUG,IAA7B,CAApB,CALU;AASjBV,EAAAA,YAAY,EAAEO,mBAAUC,SAAV,CAAoB,CAACD,mBAAUE,MAAX,EAAmBF,mBAAUG,IAA7B,CAApB,CATG;AAajBnB,EAAAA,aAAa,EAAEgB,mBAAUI;AAbR,C;eAyDNnB,U","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {BaseComponent} from '../../commons';\nimport View from '../view';\n\nexport const RadioGroupContext = React.createContext({value: undefined, onValueChange: undefined});\n\n/**\n * Wrap a group of Radio Buttons to automatically control their selection\n */\nclass RadioGroup extends BaseComponent {\n  static displayName = 'RadioGroup';\n\n  static propTypes = {\n    /**\n     * The value of the selected radio button\n     * Deprecated - please use initialValue instead\n     */\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    /**\n     * The initial value of the selected radio button\n     */\n    initialValue: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    /**\n     * Invoked once when value changes, by selecting one of the radio buttons in the group\n     */\n    onValueChange: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (props.value) {\n      console.warn(`Please use \"initialValue\" instead of \"value\" in RadioGroup with value of \"${props.value}\"`);\n    }\n\n    this.state = {\n      value: props.initialValue !== undefined ? props.initialValue : props.value\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.initialValue !== nextProps.initialValue) {\n      this.setState({value: nextProps.initialValue});\n    } else if (this.props.value !== nextProps.value) {\n      this.setState({value: nextProps.value});\n    }\n  }\n\n  getContextProviderValue() {\n    const {value} = this.state;\n    return {value, onValueChange: this.onValueChange};\n  }\n\n  onValueChange = value => {\n    this.setState({value});\n    _.invoke(this.props, 'onValueChange', value);\n  };\n\n  render() {\n    return (\n      <View {...this.props}>\n        <RadioGroupContext.Provider value={this.getContextProviderValue()}>\n          {this.props.children}\n        </RadioGroupContext.Provider>\n      </View>\n    );\n  }\n}\n\nexport default RadioGroup;\n"]},"metadata":{},"sourceType":"script"}