{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeUiLib = require(\"react-native-ui-lib\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\slider\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar TRACK_SIZE = 6;\nvar THUMB_SIZE = 24;\nvar BORDER_WIDTH = 6;\nvar SHADOW_RADIUS = 4;\nvar DEFAULT_COLOR = _reactNativeUiLib.Colors.dark50;\nvar ACTIVE_COLOR = _reactNativeUiLib.Colors.violet30;\nvar INACTIVE_COLOR = _reactNativeUiLib.Colors.dark60;\n\nvar Slider = function (_PureBaseComponent) {\n  (0, _inherits2.default)(Slider, _PureBaseComponent);\n\n  var _super = _createSuper(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Slider);\n    _this = _super.call(this, props);\n\n    _this.handleMoveShouldSetPanResponder = function (e, gestureState) {\n      return true;\n    };\n\n    _this.handlePanResponderGrant = function (e, gestureState) {\n      _this.updateThumbStyle(true);\n\n      _this._dx = 0;\n    };\n\n    _this.handlePanResponderMove = function (e, gestureState) {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      var dx = gestureState.dx * (_reactNativeUiLib.Constants.isRTL ? -1 : 1);\n\n      _this.update(dx - _this._dx);\n\n      _this._dx = dx;\n    };\n\n    _this.handlePanResponderEnd = function (e, gestureState) {\n      _this.updateThumbStyle(false);\n\n      _this.bounceToStep();\n    };\n\n    _this.setMinTrackRef = function (r) {\n      _this.minTrack = r;\n    };\n\n    _this.setThumbRef = function (r) {\n      _this.thumb = r;\n    };\n\n    _this.onValueChange = function (value) {\n      _lodash.default.invoke(_this.props, 'onValueChange', value);\n    };\n\n    _this.onContainerLayout = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n\n      _this.handleMeasure('containerSize', nativeEvent);\n    };\n\n    _this.onTrackLayout = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n\n      _this.handleMeasure('trackSize', nativeEvent);\n    };\n\n    _this.onThumbLayout = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n\n      _this.handleMeasure('thumbSize', nativeEvent);\n    };\n\n    _this.handleMeasure = function (name, nativeEvent) {\n      var _nativeEvent$layout = nativeEvent.layout,\n          width = _nativeEvent$layout.width,\n          height = _nativeEvent$layout.height;\n      var size = {\n        width: width,\n        height: height\n      };\n      var layoutName = \"\" + name;\n      var currentSize = _this[layoutName];\n\n      if (currentSize && width === currentSize.width && height === currentSize.height) {\n        return;\n      }\n\n      _this[layoutName] = size;\n\n      if (_this.containerSize && _this.thumbSize && _this.trackSize) {\n        _this.setState({\n          containerSize: _this.containerSize,\n          trackSize: _this.trackSize,\n          thumbSize: _this.thumbSize,\n          measureCompleted: true\n        });\n      }\n    };\n\n    _this.onAccessibilityAction = function (event) {\n      var _this$props = _this.props,\n          maximumValue = _this$props.maximumValue,\n          minimumValue = _this$props.minimumValue,\n          step = _this$props.step;\n\n      var value = _this.getValueForX(_this._x);\n\n      var newValue;\n\n      switch (event.nativeEvent.action) {\n        case 'increment':\n          newValue = value !== maximumValue ? value + step : value;\n          break;\n\n        case 'decrement':\n          newValue = value !== minimumValue ? value - step : value;\n          break;\n\n        default:\n          break;\n      }\n\n      _this._x = _this.getXForValue(newValue);\n\n      _this.updateValue(_this._x);\n\n      _this.updateStyles(_this._x);\n\n      _lodash.default.invoke(_reactNative.AccessibilityInfo, 'announceForAccessibility', \"New value \" + newValue);\n    };\n\n    _this.state = {\n      containerSize: {\n        width: 0,\n        height: 0\n      },\n      trackSize: {\n        width: 0,\n        height: 0\n      },\n      thumbSize: {\n        width: 0,\n        height: 0\n      },\n      measureCompleted: false\n    };\n    _this.thumb = undefined;\n    _this._thumbStyles = {\n      style: {}\n    };\n    _this.minTrack = undefined;\n    _this._minTrackStyles = {\n      style: {}\n    };\n    _this._x = 0;\n    _this._dx = 0;\n    _this.initialValue = _this.getRoundedValue(props.value);\n    _this.initialThumbSize = THUMB_SIZE;\n\n    _this.checkProps(props);\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Slider, [{\n    key: \"checkProps\",\n    value: function checkProps(props) {\n      if (props.minimumValue >= props.maximumValue) {\n        console.warn('Slider minimumValue must be lower than maximumValue');\n      }\n\n      if (props.value < props.minimumValue || props.value > props.maximumValue) {\n        console.warn('Slider value is not in range');\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps());\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._panResponder = _reactNative.PanResponder.create({\n        onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder,\n        onPanResponderGrant: this.handlePanResponderGrant,\n        onPanResponderMove: this.handlePanResponderMove,\n        onPanResponderRelease: this.handlePanResponderEnd,\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return true;\n        },\n        onPanResponderEnd: function onPanResponderEnd() {\n          return true;\n        },\n        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n          return false;\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.value !== this.props.value) {\n        this.initialValue = this.getRoundedValue(this.props.value);\n        this._x = this.getXForValue(this.initialValue);\n        this.updateStyles(this._x);\n      }\n\n      if (prevState.measureCompleted !== this.state.measureCompleted) {\n        this.initialThumbSize = this.state.thumbSize;\n        this._x = this.getXForValue(this.initialValue);\n        this.updateStyles(this._x);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dx) {\n      var x = this._x;\n      x += dx;\n      x = Math.max(Math.min(x, this.state.trackSize.width), 0);\n      this._x = x;\n      this.updateStyles(this._x);\n      this.updateValue(this._x);\n    }\n  }, {\n    key: \"bounceToStep\",\n    value: function bounceToStep() {\n      if (this.props.step > 0) {\n        var v = this.getValueForX(this._x);\n        var round = this.getRoundedValue(v);\n        var x = this.getXForValue(round);\n        this._x = x;\n        this.updateStyles(x);\n      }\n    }\n  }, {\n    key: \"updateStyles\",\n    value: function updateStyles(x) {\n      if (this.thumb) {\n        var trackSize = this.state.trackSize;\n        var position = x - this.initialThumbSize.width / 2;\n        var deviation = 3;\n\n        if (position + deviation < 0) {\n          this._thumbStyles.left = 0;\n        } else if (position - deviation > trackSize.width - this.initialThumbSize.width) {\n          this._thumbStyles.left = trackSize.width - this.initialThumbSize.width;\n        } else {\n          this._thumbStyles.left = position;\n        }\n\n        this.thumb.setNativeProps(this._thumbStyles);\n      }\n\n      if (this.minTrack) {\n        this._minTrackStyles.width = x;\n        this.minTrack.setNativeProps(this._minTrackStyles);\n      }\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(x) {\n      var value = this.getValueForX(x);\n      this.onValueChange(value);\n    }\n  }, {\n    key: \"updateThumbStyle\",\n    value: function updateThumbStyle(start) {\n      if (this.thumb && !this.props.disableActiveStyling) {\n        var _this$props2 = this.props,\n            thumbStyle = _this$props2.thumbStyle,\n            activeThumbStyle = _this$props2.activeThumbStyle;\n        var style = thumbStyle || this.styles.thumb;\n        var activeStyle = activeThumbStyle || this.styles.activeThumb;\n        this._thumbStyles.style = !this.props.disabled && (start ? activeStyle : style);\n        this.thumb.setNativeProps(this._thumbStyles);\n      }\n    }\n  }, {\n    key: \"getRoundedValue\",\n    value: function getRoundedValue(value) {\n      var step = this.props.step;\n      var v = this.getValueInRange(value);\n      return step > 0 ? Math.round(v / step) * step : v;\n    }\n  }, {\n    key: \"getValueInRange\",\n    value: function getValueInRange(value) {\n      var _this$props3 = this.props,\n          minimumValue = _this$props3.minimumValue,\n          maximumValue = _this$props3.maximumValue;\n      var v = value < minimumValue ? minimumValue : value > maximumValue ? maximumValue : value;\n      return v;\n    }\n  }, {\n    key: \"getXForValue\",\n    value: function getXForValue(v) {\n      var _this$props4 = this.props,\n          minimumValue = _this$props4.minimumValue,\n          maximumValue = _this$props4.maximumValue;\n      var range = this.getRange();\n      var relativeValue = maximumValue > 0 ? minimumValue - v : maximumValue - v;\n      var value = minimumValue < 0 ? Math.abs(relativeValue) : v - minimumValue;\n      var ratio = value / range;\n      var x = ratio * (this.state.trackSize.width - this.initialThumbSize.width / 2);\n      return x;\n    }\n  }, {\n    key: \"getValueForX\",\n    value: function getValueForX(x) {\n      var _this$props5 = this.props,\n          maximumValue = _this$props5.maximumValue,\n          minimumValue = _this$props5.minimumValue,\n          step = _this$props5.step;\n      var ratio = x / (this.state.trackSize.width - this.initialThumbSize.width / 2);\n      var range = this.getRange();\n\n      if (step) {\n        return Math.max(minimumValue, Math.min(maximumValue, minimumValue + Math.round(ratio * range / step) * step));\n      } else {\n        return Math.max(minimumValue, Math.min(maximumValue, ratio * range + minimumValue));\n      }\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var _this$props6 = this.props,\n          minimumValue = _this$props6.minimumValue,\n          maximumValue = _this$props6.maximumValue;\n      var range = maximumValue - minimumValue;\n      return range;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps = this.getThemeProps(),\n          containerStyle = _this$getThemeProps.containerStyle,\n          thumbStyle = _this$getThemeProps.thumbStyle,\n          trackStyle = _this$getThemeProps.trackStyle,\n          renderTrack = _this$getThemeProps.renderTrack,\n          disabled = _this$getThemeProps.disabled,\n          thumbTintColor = _this$getThemeProps.thumbTintColor;\n\n      return _react.default.createElement(_reactNativeUiLib.View, (0, _extends2.default)({\n        style: [this.styles.container, containerStyle],\n        onLayout: this.onContainerLayout,\n        accessible: true,\n        accessibilityLabel: 'Slider'\n      }, this.extractAccessibilityProps(), {\n        accessibilityRole: 'adjustable',\n        accessibilityStates: disabled ? ['disabled'] : undefined,\n        accessibilityActions: ['increment', 'decrement'],\n        onAccessibilityAction: this.onAccessibilityAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 7\n        }\n      }), _lodash.default.isFunction(renderTrack) ? _react.default.createElement(_reactNativeUiLib.View, {\n        style: [this.styles.track, trackStyle],\n        onLayout: this.onTrackLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }\n      }, renderTrack()) : _react.default.createElement(_reactNativeUiLib.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNativeUiLib.View, {\n        style: [this.styles.track, trackStyle, disabled && this.styles.trackDisabled],\n        onLayout: this.onTrackLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }\n      }), _react.default.createElement(_reactNativeUiLib.View, {\n        ref: this.setMinTrackRef,\n        style: [this.styles.track, trackStyle, this.styles.minimumTrack, disabled && {\n          backgroundColor: DEFAULT_COLOR\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNativeUiLib.View, {\n        ref: this.setThumbRef,\n        onLayout: this.onThumbLayout,\n        style: [this.styles.thumb, thumbStyle, {\n          backgroundColor: disabled ? DEFAULT_COLOR : thumbTintColor || ACTIVE_COLOR\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeUiLib.View, (0, _extends2.default)({\n        style: this.styles.touchArea\n      }, this._panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n  return Slider;\n}(_reactNativeUiLib.PureBaseComponent);\n\nexports.default = Slider;\nSlider.displayName = 'Slider';\nSlider.propTypes = {\n  value: _propTypes.default.number,\n  minimumValue: _propTypes.default.number,\n  maximumValue: _propTypes.default.number,\n  step: _propTypes.default.number,\n  minimumTrackTintColor: _propTypes.default.string,\n  maximumTrackTintColor: _propTypes.default.string,\n  renderTrack: _propTypes.default.func,\n  thumbTintColor: _propTypes.default.string,\n  onValueChange: _propTypes.default.func,\n  containerStyle: _reactNative.ViewPropTypes.style,\n  trackStyle: _reactNative.ViewPropTypes.style,\n  thumbStyle: _reactNative.ViewPropTypes.style,\n  activeThumbStyle: _reactNative.ViewPropTypes.style,\n  disableActiveStyling: _propTypes.default.bool,\n  disabled: _propTypes.default.bool\n};\nSlider.defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0\n};\n\nfunction createStyles(_ref4) {\n  var _ref4$minimumTrackTin = _ref4.minimumTrackTintColor,\n      minimumTrackTintColor = _ref4$minimumTrackTin === void 0 ? ACTIVE_COLOR : _ref4$minimumTrackTin,\n      _ref4$maximumTrackTin = _ref4.maximumTrackTintColor,\n      maximumTrackTintColor = _ref4$maximumTrackTin === void 0 ? DEFAULT_COLOR : _ref4$maximumTrackTin;\n  return _reactNative.StyleSheet.create({\n    container: {\n      height: THUMB_SIZE + SHADOW_RADIUS,\n      justifyContent: 'center'\n    },\n    track: {\n      height: TRACK_SIZE,\n      borderRadius: TRACK_SIZE / 2,\n      backgroundColor: maximumTrackTintColor,\n      overflow: 'hidden'\n    },\n    trackDisabled: {\n      backgroundColor: INACTIVE_COLOR\n    },\n    minimumTrack: {\n      position: 'absolute',\n      backgroundColor: minimumTrackTintColor\n    },\n    thumb: {\n      position: 'absolute',\n      width: THUMB_SIZE,\n      height: THUMB_SIZE,\n      borderRadius: THUMB_SIZE / 2,\n      borderWidth: BORDER_WIDTH,\n      borderColor: _reactNativeUiLib.Colors.white,\n      shadowColor: _reactNativeUiLib.Colors.rgba(_reactNativeUiLib.Colors.black, 0.3),\n      shadowOffset: {\n        width: 0,\n        height: 0\n      },\n      shadowOpacity: 0.9,\n      shadowRadius: SHADOW_RADIUS,\n      elevation: 2\n    },\n    activeThumb: {\n      width: THUMB_SIZE + 16,\n      height: THUMB_SIZE + 16,\n      borderRadius: (THUMB_SIZE + 16) / 2,\n      borderWidth: BORDER_WIDTH + 6\n    },\n    touchArea: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n      backgroundColor: 'transparent'\n    })\n  });\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/slider/index.js"],"names":["TRACK_SIZE","THUMB_SIZE","BORDER_WIDTH","SHADOW_RADIUS","DEFAULT_COLOR","Colors","dark50","ACTIVE_COLOR","violet30","INACTIVE_COLOR","dark60","Slider","props","handleMoveShouldSetPanResponder","e","gestureState","handlePanResponderGrant","updateThumbStyle","_dx","handlePanResponderMove","disabled","dx","Constants","isRTL","update","handlePanResponderEnd","bounceToStep","setMinTrackRef","r","minTrack","setThumbRef","thumb","onValueChange","value","_","invoke","onContainerLayout","nativeEvent","handleMeasure","onTrackLayout","onThumbLayout","name","layout","width","height","size","layoutName","currentSize","containerSize","thumbSize","trackSize","setState","measureCompleted","onAccessibilityAction","event","maximumValue","minimumValue","step","getValueForX","_x","newValue","action","getXForValue","updateValue","updateStyles","AccessibilityInfo","state","undefined","_thumbStyles","style","_minTrackStyles","initialValue","getRoundedValue","initialThumbSize","checkProps","console","warn","styles","createStyles","getThemeProps","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onStartShouldSetPanResponder","onPanResponderEnd","onPanResponderTerminationRequest","prevProps","prevState","x","Math","max","min","v","round","position","deviation","left","setNativeProps","start","disableActiveStyling","thumbStyle","activeThumbStyle","activeStyle","activeThumb","getValueInRange","range","getRange","relativeValue","abs","ratio","containerStyle","trackStyle","renderTrack","thumbTintColor","container","extractAccessibilityProps","isFunction","track","trackDisabled","minimumTrack","backgroundColor","touchArea","panHandlers","PureBaseComponent","displayName","propTypes","PropTypes","number","minimumTrackTintColor","string","maximumTrackTintColor","func","ViewPropTypes","bool","defaultProps","StyleSheet","justifyContent","borderRadius","overflow","borderWidth","borderColor","white","shadowColor","rgba","black","shadowOffset","shadowOpacity","shadowRadius","elevation","absoluteFillObject"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,CAAnB;AACA,IAAMC,UAAU,GAAG,EAAnB;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,aAAa,GAAG,CAAtB;AACA,IAAMC,aAAa,GAAGC,yBAAOC,MAA7B;AACA,IAAMC,YAAY,GAAGF,yBAAOG,QAA5B;AACA,IAAMC,cAAc,GAAGJ,yBAAOK,MAA9B;;IAMqBC,M;;;;;AAyEnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;;AADiB,UAkEnBC,+BAlEmB,GAkEe,UAACC,CAAD,EAAIC,YAAJ,EAAqB;AACrD,aAAO,IAAP;AACD,KApEkB;;AAAA,UAqEnBC,uBArEmB,GAqEO,UAACF,CAAD,EAAIC,YAAJ,EAAqB;AAC7C,YAAKE,gBAAL,CAAsB,IAAtB;;AACA,YAAKC,GAAL,GAAW,CAAX;AACD,KAxEkB;;AAAA,UAyEnBC,sBAzEmB,GAyEM,UAACL,CAAD,EAAIC,YAAJ,EAAqB;AAC5C,UAAI,MAAKH,KAAL,CAAWQ,QAAf,EAAyB;AACvB;AACD;;AACD,UAAMC,EAAE,GAAGN,YAAY,CAACM,EAAb,IAAmBC,4BAAUC,KAAV,GAAkB,CAAC,CAAnB,GAAuB,CAA1C,CAAX;;AACA,YAAKC,MAAL,CAAYH,EAAE,GAAG,MAAKH,GAAtB;;AACA,YAAKA,GAAL,GAAWG,EAAX;AACD,KAhFkB;;AAAA,UAiFnBI,qBAjFmB,GAiFK,UAACX,CAAD,EAAIC,YAAJ,EAAqB;AAC3C,YAAKE,gBAAL,CAAsB,KAAtB;;AACA,YAAKS,YAAL;AACD,KApFkB;;AAAA,UA6LnBC,cA7LmB,GA6LF,UAAAC,CAAC,EAAI;AACpB,YAAKC,QAAL,GAAgBD,CAAhB;AACD,KA/LkB;;AAAA,UAiMnBE,WAjMmB,GAiML,UAAAF,CAAC,EAAI;AACjB,YAAKG,KAAL,GAAaH,CAAb;AACD,KAnMkB;;AAAA,UAuMnBI,aAvMmB,GAuMH,UAAAC,KAAK,EAAI;AACvBC,sBAAEC,MAAF,CAAS,MAAKvB,KAAd,EAAqB,eAArB,EAAsCqB,KAAtC;AACD,KAzMkB;;AAAA,UA2MnBG,iBA3MmB,GA2MC,gBAAmB;AAAA,UAAjBC,WAAiB,QAAjBA,WAAiB;;AACrC,YAAKC,aAAL,CAAmB,eAAnB,EAAoCD,WAApC;AACD,KA7MkB;;AAAA,UA+MnBE,aA/MmB,GA+MH,iBAAmB;AAAA,UAAjBF,WAAiB,SAAjBA,WAAiB;;AACjC,YAAKC,aAAL,CAAmB,WAAnB,EAAgCD,WAAhC;AACD,KAjNkB;;AAAA,UAmNnBG,aAnNmB,GAmNH,iBAAmB;AAAA,UAAjBH,WAAiB,SAAjBA,WAAiB;;AACjC,YAAKC,aAAL,CAAmB,WAAnB,EAAgCD,WAAhC;AACD,KArNkB;;AAAA,UAuNnBC,aAvNmB,GAuNH,UAACG,IAAD,EAAOJ,WAAP,EAAuB;AAAA,gCACbA,WAAW,CAACK,MADC;AAAA,UAC9BC,KAD8B,uBAC9BA,KAD8B;AAAA,UACvBC,MADuB,uBACvBA,MADuB;AAErC,UAAMC,IAAI,GAAG;AAACF,QAAAA,KAAK,EAALA,KAAD;AAAQC,QAAAA,MAAM,EAANA;AAAR,OAAb;AACA,UAAME,UAAU,QAAML,IAAtB;AACA,UAAMM,WAAW,GAAG,MAAKD,UAAL,CAApB;;AAEA,UAAIC,WAAW,IAAIJ,KAAK,KAAKI,WAAW,CAACJ,KAArC,IAA8CC,MAAM,KAAKG,WAAW,CAACH,MAAzE,EAAiF;AAC/E;AACD;;AAED,YAAKE,UAAL,IAAmBD,IAAnB;;AAEA,UAAI,MAAKG,aAAL,IAAsB,MAAKC,SAA3B,IAAwC,MAAKC,SAAjD,EAA4D;AAC1D,cAAKC,QAAL,CAAc;AACZH,UAAAA,aAAa,EAAE,MAAKA,aADR;AAEZE,UAAAA,SAAS,EAAE,MAAKA,SAFJ;AAGZD,UAAAA,SAAS,EAAE,MAAKA,SAHJ;AAIZG,UAAAA,gBAAgB,EAAE;AAJN,SAAd;AAMD;AACF,KA3OkB;;AAAA,UA6OnBC,qBA7OmB,GA6OK,UAAAC,KAAK,EAAI;AAAA,wBACY,MAAK1C,KADjB;AAAA,UACxB2C,YADwB,eACxBA,YADwB;AAAA,UACVC,YADU,eACVA,YADU;AAAA,UACIC,IADJ,eACIA,IADJ;;AAE/B,UAAMxB,KAAK,GAAG,MAAKyB,YAAL,CAAkB,MAAKC,EAAvB,CAAd;;AACA,UAAIC,QAAJ;;AAEA,cAAQN,KAAK,CAACjB,WAAN,CAAkBwB,MAA1B;AACE,aAAK,WAAL;AACED,UAAAA,QAAQ,GAAG3B,KAAK,KAAKsB,YAAV,GAAyBtB,KAAK,GAAGwB,IAAjC,GAAwCxB,KAAnD;AACA;;AACF,aAAK,WAAL;AACE2B,UAAAA,QAAQ,GAAG3B,KAAK,KAAKuB,YAAV,GAAyBvB,KAAK,GAAGwB,IAAjC,GAAwCxB,KAAnD;AACA;;AACF;AACE;AARJ;;AAWA,YAAK0B,EAAL,GAAU,MAAKG,YAAL,CAAkBF,QAAlB,CAAV;;AACA,YAAKG,WAAL,CAAiB,MAAKJ,EAAtB;;AACA,YAAKK,YAAL,CAAkB,MAAKL,EAAvB;;AACAzB,sBAAEC,MAAF,CAAS8B,8BAAT,EAA4B,0BAA5B,iBAAqEL,QAArE;AACD,KAjQkB;;AAGjB,UAAKM,KAAL,GAAa;AACXlB,MAAAA,aAAa,EAAE;AAACL,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OADJ;AAEXM,MAAAA,SAAS,EAAE;AAACP,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OAFA;AAGXK,MAAAA,SAAS,EAAE;AAACN,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OAHA;AAIXQ,MAAAA,gBAAgB,EAAE;AAJP,KAAb;AAOA,UAAKrB,KAAL,GAAaoC,SAAb;AACA,UAAKC,YAAL,GAAoB;AAACC,MAAAA,KAAK,EAAE;AAAR,KAApB;AACA,UAAKxC,QAAL,GAAgBsC,SAAhB;AACA,UAAKG,eAAL,GAAuB;AAACD,MAAAA,KAAK,EAAE;AAAR,KAAvB;AACA,UAAKV,EAAL,GAAU,CAAV;AACA,UAAKzC,GAAL,GAAW,CAAX;AAEA,UAAKqD,YAAL,GAAoB,MAAKC,eAAL,CAAqB5D,KAAK,CAACqB,KAA3B,CAApB;AACA,UAAKwC,gBAAL,GAAwBxE,UAAxB;;AAEA,UAAKyE,UAAL,CAAgB9D,KAAhB;;AApBiB;AAqBlB;;;;+BAEUA,K,EAAO;AAChB,UAAIA,KAAK,CAAC4C,YAAN,IAAsB5C,KAAK,CAAC2C,YAAhC,EAA8C;AAC5CoB,QAAAA,OAAO,CAACC,IAAR,CAAa,qDAAb;AACD;;AACD,UAAIhE,KAAK,CAACqB,KAAN,GAAcrB,KAAK,CAAC4C,YAApB,IAAoC5C,KAAK,CAACqB,KAAN,GAAcrB,KAAK,CAAC2C,YAA5D,EAA0E;AACxEoB,QAAAA,OAAO,CAACC,IAAR,CAAa,8BAAb;AACD;AACF;;;qCAEgB;AACf,WAAKC,MAAL,GAAcC,YAAY,CAAC,KAAKC,aAAL,EAAD,CAA1B;AACD;;;yCAEoB;AACnB,WAAKC,aAAL,GAAqBC,0BAAaC,MAAb,CAAoB;AACvCC,QAAAA,2BAA2B,EAAE,KAAKtE,+BADK;AAEvCuE,QAAAA,mBAAmB,EAAE,KAAKpE,uBAFa;AAGvCqE,QAAAA,kBAAkB,EAAE,KAAKlE,sBAHc;AAIvCmE,QAAAA,qBAAqB,EAAE,KAAK7D,qBAJW;AAKvC8D,QAAAA,4BAA4B,EAAE;AAAA,iBAAM,IAAN;AAAA,SALS;AAMvCC,QAAAA,iBAAiB,EAAE;AAAA,iBAAM,IAAN;AAAA,SANoB;AAOvCC,QAAAA,gCAAgC,EAAE;AAAA,iBAAM,KAAN;AAAA;AAPK,OAApB,CAArB;AASD;;;uCAEkBC,S,EAAWC,S,EAAW;AACvC,UAAID,SAAS,CAACzD,KAAV,KAAoB,KAAKrB,KAAL,CAAWqB,KAAnC,EAA0C;AACxC,aAAKsC,YAAL,GAAoB,KAAKC,eAAL,CAAqB,KAAK5D,KAAL,CAAWqB,KAAhC,CAApB;AAEA,aAAK0B,EAAL,GAAU,KAAKG,YAAL,CAAkB,KAAKS,YAAvB,CAAV;AACA,aAAKP,YAAL,CAAkB,KAAKL,EAAvB;AACD;;AAED,UAAIgC,SAAS,CAACvC,gBAAV,KAA+B,KAAKc,KAAL,CAAWd,gBAA9C,EAAgE;AAC9D,aAAKqB,gBAAL,GAAwB,KAAKP,KAAL,CAAWjB,SAAnC;AAEA,aAAKU,EAAL,GAAU,KAAKG,YAAL,CAAkB,KAAKS,YAAvB,CAAV;AACA,aAAKP,YAAL,CAAkB,KAAKL,EAAvB;AACD;AACF;;;2BA0BMtC,E,EAAI;AAET,UAAIuE,CAAC,GAAG,KAAKjC,EAAb;AACAiC,MAAAA,CAAC,IAAIvE,EAAL;AACAuE,MAAAA,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASH,CAAT,EAAY,KAAK1B,KAAL,CAAWhB,SAAX,CAAqBP,KAAjC,CAAT,EAAkD,CAAlD,CAAJ;AAEA,WAAKgB,EAAL,GAAUiC,CAAV;AAEA,WAAK5B,YAAL,CAAkB,KAAKL,EAAvB;AACA,WAAKI,WAAL,CAAiB,KAAKJ,EAAtB;AACD;;;mCAEc;AACb,UAAI,KAAK/C,KAAL,CAAW6C,IAAX,GAAkB,CAAtB,EAAyB;AACvB,YAAMuC,CAAC,GAAG,KAAKtC,YAAL,CAAkB,KAAKC,EAAvB,CAAV;AACA,YAAMsC,KAAK,GAAG,KAAKzB,eAAL,CAAqBwB,CAArB,CAAd;AACA,YAAMJ,CAAC,GAAG,KAAK9B,YAAL,CAAkBmC,KAAlB,CAAV;AACA,aAAKtC,EAAL,GAAUiC,CAAV;AACA,aAAK5B,YAAL,CAAkB4B,CAAlB;AACD;AACF;;;iCAEYA,C,EAAG;AACd,UAAI,KAAK7D,KAAT,EAAgB;AAAA,YACPmB,SADO,GACM,KAAKgB,KADX,CACPhB,SADO;AAEd,YAAMgD,QAAQ,GAAGN,CAAC,GAAG,KAAKnB,gBAAL,CAAsB9B,KAAtB,GAA8B,CAAnD;AACA,YAAMwD,SAAS,GAAG,CAAlB;;AAEA,YAAID,QAAQ,GAAGC,SAAX,GAAuB,CAA3B,EAA8B;AAC5B,eAAK/B,YAAL,CAAkBgC,IAAlB,GAAyB,CAAzB;AACD,SAFD,MAEO,IAAIF,QAAQ,GAAGC,SAAX,GAAuBjD,SAAS,CAACP,KAAV,GAAkB,KAAK8B,gBAAL,CAAsB9B,KAAnE,EAA0E;AAC/E,eAAKyB,YAAL,CAAkBgC,IAAlB,GAAyBlD,SAAS,CAACP,KAAV,GAAkB,KAAK8B,gBAAL,CAAsB9B,KAAjE;AACD,SAFM,MAEA;AACL,eAAKyB,YAAL,CAAkBgC,IAAlB,GAAyBF,QAAzB;AACD;;AAED,aAAKnE,KAAL,CAAWsE,cAAX,CAA0B,KAAKjC,YAA/B;AACD;;AAED,UAAI,KAAKvC,QAAT,EAAmB;AACjB,aAAKyC,eAAL,CAAqB3B,KAArB,GAA6BiD,CAA7B;AACA,aAAK/D,QAAL,CAAcwE,cAAd,CAA6B,KAAK/B,eAAlC;AACD;AACF;;;gCAEWsB,C,EAAG;AACb,UAAM3D,KAAK,GAAG,KAAKyB,YAAL,CAAkBkC,CAAlB,CAAd;AACA,WAAK5D,aAAL,CAAmBC,KAAnB;AACD;;;qCAEgBqE,K,EAAO;AACtB,UAAI,KAAKvE,KAAL,IAAc,CAAC,KAAKnB,KAAL,CAAW2F,oBAA9B,EAAoD;AAAA,2BACX,KAAK3F,KADM;AAAA,YAC3C4F,UAD2C,gBAC3CA,UAD2C;AAAA,YAC/BC,gBAD+B,gBAC/BA,gBAD+B;AAElD,YAAMpC,KAAK,GAAGmC,UAAU,IAAI,KAAK3B,MAAL,CAAY9C,KAAxC;AACA,YAAM2E,WAAW,GAAGD,gBAAgB,IAAI,KAAK5B,MAAL,CAAY8B,WAApD;AAEA,aAAKvC,YAAL,CAAkBC,KAAlB,GAA0B,CAAC,KAAKzD,KAAL,CAAWQ,QAAZ,KAAyBkF,KAAK,GAAGI,WAAH,GAAiBrC,KAA/C,CAA1B;AACA,aAAKtC,KAAL,CAAWsE,cAAX,CAA0B,KAAKjC,YAA/B;AACD;AACF;;;oCAEenC,K,EAAO;AAAA,UACdwB,IADc,GACN,KAAK7C,KADC,CACd6C,IADc;AAErB,UAAMuC,CAAC,GAAG,KAAKY,eAAL,CAAqB3E,KAArB,CAAV;AACA,aAAOwB,IAAI,GAAG,CAAP,GAAWoC,IAAI,CAACI,KAAL,CAAWD,CAAC,GAAGvC,IAAf,IAAuBA,IAAlC,GAAyCuC,CAAhD;AACD;;;oCAEe/D,K,EAAO;AAAA,yBACgB,KAAKrB,KADrB;AAAA,UACd4C,YADc,gBACdA,YADc;AAAA,UACAD,YADA,gBACAA,YADA;AAErB,UAAMyC,CAAC,GAAG/D,KAAK,GAAGuB,YAAR,GAAuBA,YAAvB,GAAsCvB,KAAK,GAAGsB,YAAR,GAAuBA,YAAvB,GAAsCtB,KAAtF;AACA,aAAO+D,CAAP;AACD;;;iCAEYA,C,EAAG;AAAA,yBACuB,KAAKpF,KAD5B;AAAA,UACP4C,YADO,gBACPA,YADO;AAAA,UACOD,YADP,gBACOA,YADP;AAEd,UAAMsD,KAAK,GAAG,KAAKC,QAAL,EAAd;AACA,UAAMC,aAAa,GAAGxD,YAAY,GAAG,CAAf,GAAmBC,YAAY,GAAGwC,CAAlC,GAAsCzC,YAAY,GAAGyC,CAA3E;AACA,UAAM/D,KAAK,GAAGuB,YAAY,GAAG,CAAf,GAAmBqC,IAAI,CAACmB,GAAL,CAASD,aAAT,CAAnB,GAA6Cf,CAAC,GAAGxC,YAA/D;AACA,UAAMyD,KAAK,GAAGhF,KAAK,GAAG4E,KAAtB;AACA,UAAMjB,CAAC,GAAGqB,KAAK,IAAI,KAAK/C,KAAL,CAAWhB,SAAX,CAAqBP,KAArB,GAA6B,KAAK8B,gBAAL,CAAsB9B,KAAtB,GAA8B,CAA/D,CAAf;AACA,aAAOiD,CAAP;AACD;;;iCAEYA,C,EAAG;AAAA,yBAC6B,KAAKhF,KADlC;AAAA,UACP2C,YADO,gBACPA,YADO;AAAA,UACOC,YADP,gBACOA,YADP;AAAA,UACqBC,IADrB,gBACqBA,IADrB;AAEd,UAAMwD,KAAK,GAAGrB,CAAC,IAAI,KAAK1B,KAAL,CAAWhB,SAAX,CAAqBP,KAArB,GAA6B,KAAK8B,gBAAL,CAAsB9B,KAAtB,GAA8B,CAA/D,CAAf;AACA,UAAMkE,KAAK,GAAG,KAAKC,QAAL,EAAd;;AAEA,UAAIrD,IAAJ,EAAU;AACR,eAAOoC,IAAI,CAACC,GAAL,CAAStC,YAAT,EAAuBqC,IAAI,CAACE,GAAL,CAASxC,YAAT,EAAuBC,YAAY,GAAGqC,IAAI,CAACI,KAAL,CAAYgB,KAAK,GAAGJ,KAAT,GAAkBpD,IAA7B,IAAqCA,IAA3E,CAAvB,CAAP;AACD,OAFD,MAEO;AACL,eAAOoC,IAAI,CAACC,GAAL,CAAStC,YAAT,EAAuBqC,IAAI,CAACE,GAAL,CAASxC,YAAT,EAAuB0D,KAAK,GAAGJ,KAAR,GAAgBrD,YAAvC,CAAvB,CAAP;AACD;AACF;;;+BAEU;AAAA,yBAC4B,KAAK5C,KADjC;AAAA,UACF4C,YADE,gBACFA,YADE;AAAA,UACYD,YADZ,gBACYA,YADZ;AAET,UAAMsD,KAAK,GAAGtD,YAAY,GAAGC,YAA7B;AACA,aAAOqD,KAAP;AACD;;;6BA0EQ;AAAA,gCACiF,KAAK9B,aAAL,EADjF;AAAA,UACAmC,cADA,uBACAA,cADA;AAAA,UACgBV,UADhB,uBACgBA,UADhB;AAAA,UAC4BW,UAD5B,uBAC4BA,UAD5B;AAAA,UACwCC,WADxC,uBACwCA,WADxC;AAAA,UACqDhG,QADrD,uBACqDA,QADrD;AAAA,UAC+DiG,cAD/D,uBAC+DA,cAD/D;;AAGP,aACE,6BAAC,sBAAD;AACE,QAAA,KAAK,EAAE,CAAC,KAAKxC,MAAL,CAAYyC,SAAb,EAAwBJ,cAAxB,CADT;AAEE,QAAA,QAAQ,EAAE,KAAK9E,iBAFjB;AAGE,QAAA,UAAU,MAHZ;AAIE,QAAA,kBAAkB,EAAE;AAJtB,SAKM,KAAKmF,yBAAL,EALN;AAME,QAAA,iBAAiB,EAAE,YANrB;AAOE,QAAA,mBAAmB,EAAEnG,QAAQ,GAAG,CAAC,UAAD,CAAH,GAAkB+C,SAPjD;AAQE,QAAA,oBAAoB,EAAE,CAAC,WAAD,EAAc,WAAd,CARxB;AASE,QAAA,qBAAqB,EAAE,KAAKd,qBAT9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWGnB,gBAAEsF,UAAF,CAAaJ,WAAb,IACC,6BAAC,sBAAD;AAAM,QAAA,KAAK,EAAE,CAAC,KAAKvC,MAAL,CAAY4C,KAAb,EAAoBN,UAApB,CAAb;AAA8C,QAAA,QAAQ,EAAE,KAAK5E,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG6E,WAAW,EADd,CADD,GAKC,6BAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,sBAAD;AACE,QAAA,KAAK,EAAE,CAAC,KAAKvC,MAAL,CAAY4C,KAAb,EAAoBN,UAApB,EAAgC/F,QAAQ,IAAI,KAAKyD,MAAL,CAAY6C,aAAxD,CADT;AAEE,QAAA,QAAQ,EAAE,KAAKnF,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,6BAAC,sBAAD;AACE,QAAA,GAAG,EAAE,KAAKZ,cADZ;AAEE,QAAA,KAAK,EAAE,CACL,KAAKkD,MAAL,CAAY4C,KADP,EAELN,UAFK,EAGL,KAAKtC,MAAL,CAAY8C,YAHP,EAILvG,QAAQ,IAAI;AAACwG,UAAAA,eAAe,EAAExH;AAAlB,SAJP,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAhBJ,EAgCE,6BAAC,sBAAD;AACE,QAAA,GAAG,EAAE,KAAK0B,WADZ;AAEE,QAAA,QAAQ,EAAE,KAAKU,aAFjB;AAGE,QAAA,KAAK,EAAE,CACL,KAAKqC,MAAL,CAAY9C,KADP,EAELyE,UAFK,EAGL;AACEoB,UAAAA,eAAe,EAAExG,QAAQ,GAAGhB,aAAH,GAAmBiH,cAAc,IAAI9G;AADhE,SAHK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhCF,EA2CE,6BAAC,sBAAD;AAAM,QAAA,KAAK,EAAE,KAAKsE,MAAL,CAAYgD;AAAzB,SAAwC,KAAK7C,aAAL,CAAmB8C,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA3CF,CADF;AA+CD;;;EAhYiCC,mC;;;AAAfpH,M,CACZqH,W,GAAc,Q;AADFrH,M,CAGZsH,S,GAAY;AAIjBhG,EAAAA,KAAK,EAAEiG,mBAAUC,MAJA;AAQjB3E,EAAAA,YAAY,EAAE0E,mBAAUC,MARP;AAYjB5E,EAAAA,YAAY,EAAE2E,mBAAUC,MAZP;AAgBjB1E,EAAAA,IAAI,EAAEyE,mBAAUC,MAhBC;AAoBjBC,EAAAA,qBAAqB,EAAEF,mBAAUG,MApBhB;AAwBjBC,EAAAA,qBAAqB,EAAEJ,mBAAUG,MAxBhB;AA4BjBjB,EAAAA,WAAW,EAAEc,mBAAUK,IA5BN;AAgCjBlB,EAAAA,cAAc,EAAEa,mBAAUG,MAhCT;AAoCjBrG,EAAAA,aAAa,EAAEkG,mBAAUK,IApCR;AAwCjBrB,EAAAA,cAAc,EAAEsB,2BAAcnE,KAxCb;AA4CjB8C,EAAAA,UAAU,EAAEqB,2BAAcnE,KA5CT;AAgDjBmC,EAAAA,UAAU,EAAEgC,2BAAcnE,KAhDT;AAoDjBoC,EAAAA,gBAAgB,EAAE+B,2BAAcnE,KApDf;AAwDjBkC,EAAAA,oBAAoB,EAAE2B,mBAAUO,IAxDf;AA4DjBrH,EAAAA,QAAQ,EAAE8G,mBAAUO;AA5DH,C;AAHA9H,M,CAkEZ+H,Y,GAAe;AACpBzG,EAAAA,KAAK,EAAE,CADa;AAEpBuB,EAAAA,YAAY,EAAE,CAFM;AAGpBD,EAAAA,YAAY,EAAE,CAHM;AAIpBE,EAAAA,IAAI,EAAE;AAJc,C;;AAiUxB,SAASqB,YAAT,QAAqG;AAAA,oCAA9EsD,qBAA8E;AAAA,MAA9EA,qBAA8E,sCAAtD7H,YAAsD;AAAA,oCAAxC+H,qBAAwC;AAAA,MAAxCA,qBAAwC,sCAAhBlI,aAAgB;AACnG,SAAOuI,wBAAWzD,MAAX,CAAkB;AACvBoC,IAAAA,SAAS,EAAE;AACT1E,MAAAA,MAAM,EAAE3C,UAAU,GAAGE,aADZ;AAETyI,MAAAA,cAAc,EAAE;AAFP,KADY;AAKvBnB,IAAAA,KAAK,EAAE;AACL7E,MAAAA,MAAM,EAAE5C,UADH;AAEL6I,MAAAA,YAAY,EAAE7I,UAAU,GAAG,CAFtB;AAGL4H,MAAAA,eAAe,EAAEU,qBAHZ;AAILQ,MAAAA,QAAQ,EAAE;AAJL,KALgB;AAWvBpB,IAAAA,aAAa,EAAE;AACbE,MAAAA,eAAe,EAAEnH;AADJ,KAXQ;AAcvBkH,IAAAA,YAAY,EAAE;AACZzB,MAAAA,QAAQ,EAAE,UADE;AAEZ0B,MAAAA,eAAe,EAAEQ;AAFL,KAdS;AAkBvBrG,IAAAA,KAAK,EAAE;AACLmE,MAAAA,QAAQ,EAAE,UADL;AAELvD,MAAAA,KAAK,EAAE1C,UAFF;AAGL2C,MAAAA,MAAM,EAAE3C,UAHH;AAIL4I,MAAAA,YAAY,EAAE5I,UAAU,GAAG,CAJtB;AAKL8I,MAAAA,WAAW,EAAE7I,YALR;AAML8I,MAAAA,WAAW,EAAE3I,yBAAO4I,KANf;AAOLC,MAAAA,WAAW,EAAE7I,yBAAO8I,IAAP,CAAY9I,yBAAO+I,KAAnB,EAA0B,GAA1B,CAPR;AAQLC,MAAAA,YAAY,EAAE;AAAC1G,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OART;AASL0G,MAAAA,aAAa,EAAE,GATV;AAULC,MAAAA,YAAY,EAAEpJ,aAVT;AAWLqJ,MAAAA,SAAS,EAAE;AAXN,KAlBgB;AA+BvB7C,IAAAA,WAAW,EAAE;AACXhE,MAAAA,KAAK,EAAE1C,UAAU,GAAG,EADT;AAEX2C,MAAAA,MAAM,EAAE3C,UAAU,GAAG,EAFV;AAGX4I,MAAAA,YAAY,EAAE,CAAC5I,UAAU,GAAG,EAAd,IAAoB,CAHvB;AAIX8I,MAAAA,WAAW,EAAE7I,YAAY,GAAG;AAJjB,KA/BU;AAqCvB2H,IAAAA,SAAS,kCACJc,wBAAWc,kBADP;AAEP7B,MAAAA,eAAe,EAAE;AAFV;AArCc,GAAlB,CAAP;AA0CD","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, PanResponder, ViewPropTypes, AccessibilityInfo} from 'react-native';\nimport {Constants, Colors, PureBaseComponent, View} from 'react-native-ui-lib';\n\nconst TRACK_SIZE = 6;\nconst THUMB_SIZE = 24;\nconst BORDER_WIDTH = 6;\nconst SHADOW_RADIUS = 4;\nconst DEFAULT_COLOR = Colors.dark50;\nconst ACTIVE_COLOR = Colors.violet30;\nconst INACTIVE_COLOR = Colors.dark60;\n\n/**\n * @description: A Slider component\n * @example: https://github.com/wix/react-native-ui-lib/blob/feat/new_components/demo/src/screens/componentScreens/SliderScreen.js\n */\nexport default class Slider extends PureBaseComponent {\n  static displayName = 'Slider';\n\n  static propTypes = {\n    /**\n     * Initial value\n     */\n    value: PropTypes.number,\n    /**\n     * Minimum value\n     */\n    minimumValue: PropTypes.number,\n    /**\n     * Maximum value\n     */\n    maximumValue: PropTypes.number,\n    /**\n     * Step value of the slider. The value should be between 0 and (maximumValue - minimumValue)\n     */\n    step: PropTypes.number,\n    /**\n     * The color used for the track from minimum value to current value\n     */\n    minimumTrackTintColor: PropTypes.string,\n    /**\n     * The track color\n     */\n    maximumTrackTintColor: PropTypes.string,\n    /**\n     * Custom render instead of rendering the track\n     */\n    renderTrack: PropTypes.func,\n    /**\n     * Thumb color\n     */\n    thumbTintColor: PropTypes.string,\n    /**\n     * Callback for onValueChange\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * The container style\n     */\n    containerStyle: ViewPropTypes.style,\n    /**\n     * The track style\n     */\n    trackStyle: ViewPropTypes.style,\n    /**\n     * The thumb style\n     */\n    thumbStyle: ViewPropTypes.style,\n    /**\n     * The active (during press) thumb style\n     */\n    activeThumbStyle: ViewPropTypes.style,\n    /**\n     * If true the Slider will not change it's style on press\n     */\n    disableActiveStyling: PropTypes.bool,\n    /**\n     * If true the Slider will be disabled and will appear in disabled color\n     */\n    disabled: PropTypes.bool\n  };\n\n  static defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      containerSize: {width: 0, height: 0},\n      trackSize: {width: 0, height: 0},\n      thumbSize: {width: 0, height: 0},\n      measureCompleted: false\n    };\n\n    this.thumb = undefined;\n    this._thumbStyles = {style: {}};\n    this.minTrack = undefined;\n    this._minTrackStyles = {style: {}};\n    this._x = 0;\n    this._dx = 0;\n\n    this.initialValue = this.getRoundedValue(props.value);\n    this.initialThumbSize = THUMB_SIZE;\n\n    this.checkProps(props);\n  }\n\n  checkProps(props) {\n    if (props.minimumValue >= props.maximumValue) {\n      console.warn('Slider minimumValue must be lower than maximumValue');\n    }\n    if (props.value < props.minimumValue || props.value > props.maximumValue) {\n      console.warn('Slider value is not in range');\n    }\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps());\n  }\n\n  componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this.handlePanResponderGrant,\n      onPanResponderMove: this.handlePanResponderMove,\n      onPanResponderRelease: this.handlePanResponderEnd,\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderEnd: () => true,\n      onPanResponderTerminationRequest: () => false\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.value !== this.props.value) {\n      this.initialValue = this.getRoundedValue(this.props.value);\n      // set position for new value\n      this._x = this.getXForValue(this.initialValue);\n      this.updateStyles(this._x);\n    }\n\n    if (prevState.measureCompleted !== this.state.measureCompleted) {\n      this.initialThumbSize = this.state.thumbSize; // for thumb enlargement\n      // set initial position\n      this._x = this.getXForValue(this.initialValue);\n      this.updateStyles(this._x);\n    }\n  }\n\n  /* Gesture Recognizer */\n\n  handleMoveShouldSetPanResponder = (e, gestureState) => {\n    return true;\n  };\n  handlePanResponderGrant = (e, gestureState) => {\n    this.updateThumbStyle(true);\n    this._dx = 0;\n  };\n  handlePanResponderMove = (e, gestureState) => {\n    if (this.props.disabled) {\n      return;\n    }\n    const dx = gestureState.dx * (Constants.isRTL ? -1 : 1);\n    this.update(dx - this._dx);\n    this._dx = dx;\n  };\n  handlePanResponderEnd = (e, gestureState) => {\n    this.updateThumbStyle(false);\n    this.bounceToStep();\n  };\n\n  /* Actions */\n\n  update(dx) {\n    // calc x in range (instead of: this._x += dx)\n    let x = this._x;\n    x += dx;\n    x = Math.max(Math.min(x, this.state.trackSize.width), 0);\n\n    this._x = x;\n\n    this.updateStyles(this._x);\n    this.updateValue(this._x);\n  }\n\n  bounceToStep() {\n    if (this.props.step > 0) {\n      const v = this.getValueForX(this._x);\n      const round = this.getRoundedValue(v);\n      const x = this.getXForValue(round);\n      this._x = x;\n      this.updateStyles(x);\n    }\n  }\n\n  updateStyles(x) {\n    if (this.thumb) {\n      const {trackSize} = this.state;\n      const position = x - this.initialThumbSize.width / 2;\n      const deviation = 3;\n\n      if (position + deviation < 0) {\n        this._thumbStyles.left = 0;\n      } else if (position - deviation > trackSize.width - this.initialThumbSize.width) {\n        this._thumbStyles.left = trackSize.width - this.initialThumbSize.width;\n      } else {\n        this._thumbStyles.left = position;\n      }\n\n      this.thumb.setNativeProps(this._thumbStyles);\n    }\n\n    if (this.minTrack) {\n      this._minTrackStyles.width = x;\n      this.minTrack.setNativeProps(this._minTrackStyles);\n    }\n  }\n\n  updateValue(x) {\n    const value = this.getValueForX(x);\n    this.onValueChange(value);\n  }\n\n  updateThumbStyle(start) {\n    if (this.thumb && !this.props.disableActiveStyling) {\n      const {thumbStyle, activeThumbStyle} = this.props;\n      const style = thumbStyle || this.styles.thumb;\n      const activeStyle = activeThumbStyle || this.styles.activeThumb;\n\n      this._thumbStyles.style = !this.props.disabled && (start ? activeStyle : style);\n      this.thumb.setNativeProps(this._thumbStyles);\n    }\n  }\n\n  getRoundedValue(value) {\n    const {step} = this.props;\n    const v = this.getValueInRange(value);\n    return step > 0 ? Math.round(v / step) * step : v;\n  }\n\n  getValueInRange(value) {\n    const {minimumValue, maximumValue} = this.props;\n    const v = value < minimumValue ? minimumValue : value > maximumValue ? maximumValue : value;\n    return v;\n  }\n\n  getXForValue(v) {\n    const {minimumValue, maximumValue} = this.props;\n    const range = this.getRange();\n    const relativeValue = maximumValue > 0 ? minimumValue - v : maximumValue - v; // for negatives in min value\n    const value = minimumValue < 0 ? Math.abs(relativeValue) : v - minimumValue; // for negatives\n    const ratio = value / range;\n    const x = ratio * (this.state.trackSize.width - this.initialThumbSize.width / 2);\n    return x;\n  }\n\n  getValueForX(x) {\n    const {maximumValue, minimumValue, step} = this.props;\n    const ratio = x / (this.state.trackSize.width - this.initialThumbSize.width / 2);\n    const range = this.getRange();\n\n    if (step) {\n      return Math.max(minimumValue, Math.min(maximumValue, minimumValue + Math.round((ratio * range) / step) * step));\n    } else {\n      return Math.max(minimumValue, Math.min(maximumValue, ratio * range + minimumValue));\n    }\n  }\n\n  getRange() {\n    const {minimumValue, maximumValue} = this.props;\n    const range = maximumValue - minimumValue;\n    return range;\n  }\n\n  setMinTrackRef = r => {\n    this.minTrack = r;\n  };\n\n  setThumbRef = r => {\n    this.thumb = r;\n  };\n\n  /* Events */\n\n  onValueChange = value => {\n    _.invoke(this.props, 'onValueChange', value);\n  };\n\n  onContainerLayout = ({nativeEvent}) => {\n    this.handleMeasure('containerSize', nativeEvent);\n  };\n\n  onTrackLayout = ({nativeEvent}) => {\n    this.handleMeasure('trackSize', nativeEvent);\n  };\n\n  onThumbLayout = ({nativeEvent}) => {\n    this.handleMeasure('thumbSize', nativeEvent);\n  };\n\n  handleMeasure = (name, nativeEvent) => {\n    const {width, height} = nativeEvent.layout;\n    const size = {width, height};\n    const layoutName = `${name}`;\n    const currentSize = this[layoutName];\n\n    if (currentSize && width === currentSize.width && height === currentSize.height) {\n      return;\n    }\n\n    this[layoutName] = size;\n\n    if (this.containerSize && this.thumbSize && this.trackSize) {\n      this.setState({\n        containerSize: this.containerSize,\n        trackSize: this.trackSize,\n        thumbSize: this.thumbSize,\n        measureCompleted: true\n      });\n    }\n  };\n\n  onAccessibilityAction = event => {\n    const {maximumValue, minimumValue, step} = this.props;\n    const value = this.getValueForX(this._x);\n    let newValue;\n\n    switch (event.nativeEvent.action) {\n      case 'increment':\n        newValue = value !== maximumValue ? value + step : value;\n        break;\n      case 'decrement':\n        newValue = value !== minimumValue ? value - step : value;\n        break;\n      default: \n        break;\n    }\n\n    this._x = this.getXForValue(newValue);\n    this.updateValue(this._x);\n    this.updateStyles(this._x);\n    _.invoke(AccessibilityInfo, 'announceForAccessibility', `New value ${newValue}`);\n  };\n\n  /* Renders */\n\n  render() {\n    const {containerStyle, thumbStyle, trackStyle, renderTrack, disabled, thumbTintColor} = this.getThemeProps();\n\n    return (\n      <View\n        style={[this.styles.container, containerStyle]}\n        onLayout={this.onContainerLayout}\n        accessible\n        accessibilityLabel={'Slider'}\n        {...this.extractAccessibilityProps()}\n        accessibilityRole={'adjustable'}\n        accessibilityStates={disabled ? ['disabled'] : undefined}\n        accessibilityActions={['increment', 'decrement']}\n        onAccessibilityAction={this.onAccessibilityAction}\n      >\n        {_.isFunction(renderTrack) ? (\n          <View style={[this.styles.track, trackStyle]} onLayout={this.onTrackLayout}>\n            {renderTrack()}\n          </View>\n        ) : (\n          <View>\n            <View\n              style={[this.styles.track, trackStyle, disabled && this.styles.trackDisabled]}\n              onLayout={this.onTrackLayout}\n            />\n            <View\n              ref={this.setMinTrackRef}\n              style={[\n                this.styles.track,\n                trackStyle,\n                this.styles.minimumTrack,\n                disabled && {backgroundColor: DEFAULT_COLOR}\n              ]}\n            />\n          </View>\n        )}\n        <View\n          ref={this.setThumbRef}\n          onLayout={this.onThumbLayout}\n          style={[\n            this.styles.thumb,\n            thumbStyle,\n            {\n              backgroundColor: disabled ? DEFAULT_COLOR : thumbTintColor || ACTIVE_COLOR\n            }\n          ]}\n        />\n        <View style={this.styles.touchArea} {...this._panResponder.panHandlers}/>\n      </View>\n    );\n  }\n}\n\nfunction createStyles({minimumTrackTintColor = ACTIVE_COLOR, maximumTrackTintColor = DEFAULT_COLOR}) {\n  return StyleSheet.create({\n    container: {\n      height: THUMB_SIZE + SHADOW_RADIUS,\n      justifyContent: 'center'\n    },\n    track: {\n      height: TRACK_SIZE,\n      borderRadius: TRACK_SIZE / 2,\n      backgroundColor: maximumTrackTintColor,\n      overflow: 'hidden'\n    },\n    trackDisabled: {\n      backgroundColor: INACTIVE_COLOR\n    },\n    minimumTrack: {\n      position: 'absolute',\n      backgroundColor: minimumTrackTintColor\n    },\n    thumb: {\n      position: 'absolute',\n      width: THUMB_SIZE,\n      height: THUMB_SIZE,\n      borderRadius: THUMB_SIZE / 2,\n      borderWidth: BORDER_WIDTH,\n      borderColor: Colors.white,\n      shadowColor: Colors.rgba(Colors.black, 0.3),\n      shadowOffset: {width: 0, height: 0},\n      shadowOpacity: 0.9,\n      shadowRadius: SHADOW_RADIUS,\n      elevation: 2\n    },\n    activeThumb: {\n      width: THUMB_SIZE + 16,\n      height: THUMB_SIZE + 16,\n      borderRadius: (THUMB_SIZE + 16) / 2,\n      borderWidth: BORDER_WIDTH + 6\n    },\n    touchArea: {\n      ...StyleSheet.absoluteFillObject,\n      backgroundColor: 'transparent'\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}