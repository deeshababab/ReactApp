{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Assets = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction assignProperties(a, b) {\n  if (a) {\n    (0, _lodash.default)(b).keys().forEach(function (key) {\n      Object.defineProperty(a, key, Object.getOwnPropertyDescriptor(b, key));\n    });\n  }\n\n  return a;\n}\n\nfunction ensurePath(obj, path) {\n  var pointer = obj;\n  var pathArray = path.split('.');\n  var n = pathArray.length;\n\n  for (var i = 0; i < n; i++) {\n    var segment = pathArray[i];\n\n    if (pointer[segment]) {\n      var descriptor = Object.getOwnPropertyDescriptor(pointer, segment);\n\n      if (descriptor.get) {\n        Object.defineProperty(pointer, segment, descriptor);\n      }\n    } else {\n      pointer[segment] = pointer[segment] || {};\n    }\n\n    pointer = pointer[segment];\n  }\n\n  return pointer;\n}\n\nvar Assets = function () {\n  function Assets() {\n    (0, _classCallCheck2.default)(this, Assets);\n  }\n\n  (0, _createClass2.default)(Assets, [{\n    key: \"loadAssetsGroup\",\n    value: function loadAssetsGroup(groupName, assets) {\n      if (!_lodash.default.isString(groupName)) {\n        throw new Error('group name should be a string');\n      }\n\n      if (!_lodash.default.isPlainObject(assets)) {\n        throw new Error('assets should be a hash map or a function (for lazy access)');\n      }\n\n      if (groupName === '') {\n        assignProperties(this, assets);\n      } else {\n        assignProperties(ensurePath(this, groupName), assets);\n      }\n\n      return this;\n    }\n  }]);\n  return Assets;\n}();\n\nexports.Assets = Assets;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/assets/Assets.js"],"names":["assignProperties","a","b","keys","forEach","key","Object","defineProperty","getOwnPropertyDescriptor","ensurePath","obj","path","pointer","pathArray","split","n","length","i","segment","descriptor","get","Assets","groupName","assets","_","isString","Error","isPlainObject"],"mappings":";;;;;;;;;;;AAAA;;AAEA,SAASA,gBAAT,CAA0BC,CAA1B,EAA6BC,CAA7B,EAAgC;AAC9B,MAAID,CAAJ,EAAO;AACL,yBAAEC,CAAF,EAAKC,IAAL,GAAYC,OAAZ,CAAoB,UAACC,GAAD,EAAS;AAC3BC,MAAAA,MAAM,CAACC,cAAP,CAAsBN,CAAtB,EAAyBI,GAAzB,EAA8BC,MAAM,CAACE,wBAAP,CAAgCN,CAAhC,EAAmCG,GAAnC,CAA9B;AACD,KAFD;AAGD;;AAED,SAAOJ,CAAP;AACD;;AAED,SAASQ,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAC7B,MAAIC,OAAO,GAAGF,GAAd;AAEA,MAAMG,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAlB;AACA,MAAMC,CAAC,GAAGF,SAAS,CAACG,MAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AAC1B,QAAMC,OAAO,GAAGL,SAAS,CAACI,CAAD,CAAzB;;AAEA,QAAIL,OAAO,CAACM,OAAD,CAAX,EAAsB;AACpB,UAAMC,UAAU,GAAGb,MAAM,CAACE,wBAAP,CAAgCI,OAAhC,EAAyCM,OAAzC,CAAnB;;AACA,UAAIC,UAAU,CAACC,GAAf,EAAoB;AAClBd,QAAAA,MAAM,CAACC,cAAP,CAAsBK,OAAtB,EAA+BM,OAA/B,EAAwCC,UAAxC;AACD;AACF,KALD,MAKO;AACLP,MAAAA,OAAO,CAACM,OAAD,CAAP,GAAmBN,OAAO,CAACM,OAAD,CAAP,IAAoB,EAAvC;AACD;;AACDN,IAAAA,OAAO,GAAGA,OAAO,CAACM,OAAD,CAAjB;AACD;;AAED,SAAON,OAAP;AACD;;IAEYS,M;;;;;;;oCACKC,S,EAAWC,M,EAAQ;AACjC,UAAI,CAACC,gBAAEC,QAAF,CAAWH,SAAX,CAAL,EAA4B;AAC1B,cAAM,IAAII,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,UAAI,CAACF,gBAAEG,aAAF,CAAgBJ,MAAhB,CAAL,EAA8B;AAC5B,cAAM,IAAIG,KAAJ,CAAU,6DAAV,CAAN;AACD;;AAED,UAAIJ,SAAS,KAAK,EAAlB,EAAsB;AACpBtB,QAAAA,gBAAgB,CAAC,IAAD,EAAOuB,MAAP,CAAhB;AACD,OAFD,MAEO;AACLvB,QAAAA,gBAAgB,CAACS,UAAU,CAAC,IAAD,EAAOa,SAAP,CAAX,EAA8BC,MAA9B,CAAhB;AACD;;AAED,aAAO,IAAP;AACD","sourcesContent":["import _ from 'lodash';\n\nfunction assignProperties(a, b) {\n  if (a) {\n    _(b).keys().forEach((key) => {\n      Object.defineProperty(a, key, Object.getOwnPropertyDescriptor(b, key));\n    });\n  }\n\n  return a;\n}\n\nfunction ensurePath(obj, path) {\n  let pointer = obj;\n\n  const pathArray = path.split('.');\n  const n = pathArray.length;\n\n  for (let i = 0; i < n; i++) {\n    const segment = pathArray[i];\n    \n    if (pointer[segment]) {\n      const descriptor = Object.getOwnPropertyDescriptor(pointer, segment);\n      if (descriptor.get) {\n        Object.defineProperty(pointer, segment, descriptor);\n      }\n    } else {\n      pointer[segment] = pointer[segment] || {};\n    }\n    pointer = pointer[segment];\n  }\n\n  return pointer;\n}\n\nexport class Assets {\n  loadAssetsGroup(groupName, assets) {\n    if (!_.isString(groupName)) {\n      throw new Error('group name should be a string');\n    }\n\n    if (!_.isPlainObject(assets)) {\n      throw new Error('assets should be a hash map or a function (for lazy access)');\n    }\n\n    if (groupName === '') {\n      assignProperties(this, assets);\n    } else {\n      assignProperties(ensurePath(this, groupName), assets);\n    }\n\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}