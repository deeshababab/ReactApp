{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeUiLib = require(\"react-native-ui-lib\");\n\nvar _ColorPalette = _interopRequireDefault(require(\"./ColorPalette\"));\n\nvar _ColorSwatch = require(\"./ColorSwatch\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\colorPicker\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar KEYBOARD_HEIGHT = 216;\n\nvar ColorPicker = function (_PureBaseComponent) {\n  (0, _inherits2.default)(ColorPicker, _PureBaseComponent);\n\n  var _super = _createSuper(ColorPicker);\n\n  function ColorPicker(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ColorPicker);\n    _this = _super.call(this, props);\n\n    _this.keyboardDidShow = function (e) {\n      if (_reactNativeUiLib.Constants.isIOS && _this.state.keyboardHeight !== e.endCoordinates.height) {\n        _this.setState({\n          keyboardHeight: e.endCoordinates.height\n        });\n      }\n\n      _this.changeHeight(0);\n    };\n\n    _this.keyboardDidHide = function () {\n      _this.changeHeight(KEYBOARD_HEIGHT);\n    };\n\n    _this.onFocus = function () {\n      _this.changeHeight(0);\n    };\n\n    _this.setFocus = function () {\n      if (_this.textInput) {\n        _this.textInput.focus();\n      }\n    };\n\n    _this.showDialog = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    _this.applyColor = function (text) {\n      var _this$getValidColorSt = _this.getValidColorString(text),\n          hex = _this$getValidColorSt.hex,\n          valid = _this$getValidColorSt.valid;\n\n      if (hex) {\n        _this.setState({\n          color: _reactNativeUiLib.Colors.getHSL(hex),\n          text: text,\n          valid: valid\n        });\n      } else {\n        _this.setState({\n          text: text,\n          valid: valid\n        });\n      }\n    };\n\n    _this.onSliderValueChange = function (color) {\n      var c = _reactNativeUiLib.Colors.getHSL(color);\n\n      _this.updateColor(c);\n    };\n\n    _this.onChangeText = function (value) {\n      _this.applyColor(value);\n    };\n\n    _this.onDonePressed = function () {\n      var text = _this.state.text;\n\n      var _this$getValidColorSt2 = _this.getValidColorString(text),\n          hex = _this$getValidColorSt2.hex;\n\n      if (hex) {\n        _lodash.default.invoke(_this.props, 'onSubmit', hex, _this.getTextColor(hex));\n\n        _this.onDismiss();\n      }\n    };\n\n    _this.onDismiss = function () {\n      _this.resetValues();\n\n      _lodash.default.invoke(_this.props, 'onDismiss');\n    };\n\n    _this.onValueChange = function (value, options) {\n      _lodash.default.invoke(_this.props, 'onValueChange', value, options);\n    };\n\n    var _color = _reactNativeUiLib.Colors.getHSL(props.initialColor);\n\n    var _text = _this.getColorValue(props.initialColor);\n\n    var _this$getValidColorSt3 = _this.getValidColorString(_text),\n        _valid = _this$getValidColorSt3.valid;\n\n    _this.state = {\n      keyboardHeight: KEYBOARD_HEIGHT,\n      show: false,\n      color: _color,\n      text: _text,\n      valid: _valid\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ColorPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.keyboardDidShowListener = _reactNative.Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n      this.keyboardDidHideListener = _reactNative.Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.initialColor !== nextProps.initialColor) {\n        var text = this.getColorValue(nextProps.initialColor || this.props.initialColor);\n\n        var color = _reactNativeUiLib.Colors.getHSL(nextProps.initialColor);\n\n        var _this$getValidColorSt4 = this.getValidColorString(text),\n            valid = _this$getValidColorSt4.valid;\n\n        this.setState({\n          color: color,\n          text: text,\n          valid: valid\n        });\n      }\n    }\n  }, {\n    key: \"changeHeight\",\n    value: function changeHeight(height) {\n      if (_reactNativeUiLib.Constants.isAndroid && this.state.keyboardHeight !== height) {\n        _reactNative.LayoutAnimation.configureNext(_reactNative.LayoutAnimation.Presets.easeInEaseOut);\n\n        this.setState({\n          keyboardHeight: height\n        });\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.props);\n    }\n  }, {\n    key: \"getColorValue\",\n    value: function getColorValue(color) {\n      if (!_lodash.default.isString(color)) {\n        return;\n      }\n\n      return color.replace('#', '');\n    }\n  }, {\n    key: \"getHexColor\",\n    value: function getHexColor(text) {\n      if (text && !_reactNativeUiLib.Colors.isTransparent(text)) {\n        var trimmed = text.replace(/\\s+/g, '');\n        var hex = \"#\" + trimmed;\n        return hex;\n      }\n\n      return text;\n    }\n  }, {\n    key: \"getHexString\",\n    value: function getHexString(color) {\n      return _lodash.default.toUpper(_reactNativeUiLib.Colors.getHexString(color));\n    }\n  }, {\n    key: \"getTextColor\",\n    value: function getTextColor(color) {\n      return _reactNativeUiLib.Colors.isDark(color) ? _reactNativeUiLib.Colors.white : _reactNativeUiLib.Colors.dark10;\n    }\n  }, {\n    key: \"getValidColorString\",\n    value: function getValidColorString(text) {\n      var hex = this.getHexColor(text);\n\n      if (_reactNativeUiLib.Colors.isValidHex(hex)) {\n        return {\n          hex: hex,\n          valid: true\n        };\n      }\n\n      return {\n        undefined: undefined,\n        valid: false\n      };\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor(color) {\n      var hex = this.getHexString(color);\n      var text = this.getColorValue(hex);\n      this.setState({\n        color: color,\n        text: text,\n        valid: true\n      });\n    }\n  }, {\n    key: \"resetValues\",\n    value: function resetValues() {\n      var color = _reactNativeUiLib.Colors.getHSL(this.props.initialColor);\n\n      var text = this.getColorValue(this.props.initialColor);\n\n      var _this$getValidColorSt5 = this.getValidColorString(text),\n          valid = _this$getValidColorSt5.valid;\n\n      this.setState({\n        show: false,\n        color: color,\n        text: text,\n        valid: valid\n      });\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var useCustomTheme = this.props.useCustomTheme;\n      var valid = this.state.valid;\n      return _react.default.createElement(_reactNativeUiLib.View, {\n        row: true,\n        spread: true,\n        \"bg-white\": true,\n        \"paddingH-20\": true,\n        style: this.styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeUiLib.Button, {\n        link: true,\n        iconSource: _reactNativeUiLib.Assets.icons.x,\n        iconStyle: {\n          tintColor: _reactNativeUiLib.Colors.dark10\n        },\n        onPress: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeUiLib.Button, {\n        useCustomTheme: useCustomTheme,\n        disabled: !valid,\n        link: true,\n        iconSource: _reactNativeUiLib.Assets.icons.check,\n        onPress: this.onDonePressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderSliders\",\n    value: function renderSliders() {\n      var _this$state = this.state,\n          keyboardHeight = _this$state.keyboardHeight,\n          color = _this$state.color;\n      var colorValue = color.a === 0 ? _reactNativeUiLib.Colors.black : _reactNativeUiLib.Colors.getHexString(color);\n      return _react.default.createElement(_reactNativeUiLib.ColorSliderGroup, {\n        initialColor: colorValue,\n        containerStyle: [this.styles.sliderGroup, {\n          height: keyboardHeight\n        }],\n        sliderContainerStyle: this.styles.slider,\n        showLabels: true,\n        labelsStyle: this.styles.label,\n        onValueChange: this.onSliderValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderPreview\",\n    value: function renderPreview() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          color = _this$state2.color,\n          text = _this$state2.text;\n      var hex = this.getHexString(color);\n      var textColor = this.getTextColor(hex);\n\n      var fontScale = _reactNative.PixelRatio.getFontScale();\n\n      var value = _reactNativeUiLib.Colors.isTransparent(text) ? '000000' : text;\n      return _react.default.createElement(_reactNativeUiLib.View, {\n        style: [this.styles.preview, {\n          backgroundColor: hex\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeUiLib.TouchableOpacity, {\n        center: true,\n        onPress: this.setFocus,\n        activeOpacity: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeUiLib.View, {\n        style: this.styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNativeUiLib.Text, {\n        text60: true,\n        white: true,\n        \"marginL-13\": true,\n        \"marginR-5\": _reactNativeUiLib.Constants.isIOS,\n        style: {\n          color: textColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, \"#\"), _react.default.createElement(_reactNative.TextInput, {\n        ref: function ref(r) {\n          return _this2.textInput = r;\n        },\n        value: value,\n        maxLength: 6,\n        numberOfLines: 1,\n        onChangeText: this.onChangeText,\n        style: [this.styles.input, {\n          color: textColor,\n          width: (value.length + 1) * 16.5 * fontScale\n        }, _reactNativeUiLib.Constants.isAndroid && {\n          padding: 0\n        }],\n        selectionColor: textColor,\n        underlineColorAndroid: \"transparent\",\n        autoCorrect: false,\n        autoComplete: 'off',\n        autoCapitalize: 'characters',\n        returnKeyType: 'done',\n        enablesReturnKeyAutomatically: true,\n        onFocus: this.onFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNativeUiLib.View, {\n        style: [{\n          backgroundColor: textColor\n        }, this.styles.underline],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"renderDialog\",\n    value: function renderDialog() {\n      var show = this.state.show;\n      return _react.default.createElement(_reactNativeUiLib.Dialog, {\n        migrate: true,\n        visible: show,\n        width: \"100%\",\n        height: null,\n        bottom: true,\n        centerH: true,\n        onDismiss: this.onDismiss,\n        containerStyle: this.styles.dialog,\n        panDirection: _reactNativeUiLib.PanningProvider.Directions.DOWN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 7\n        }\n      }, this.renderHeader(), this.renderPreview(), this.renderSliders());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          colors = _this$props.colors,\n          value = _this$props.value;\n      return _react.default.createElement(_reactNativeUiLib.View, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_ColorPalette.default, {\n        value: value,\n        colors: colors,\n        style: this.styles.palette,\n        usePagination: false,\n        animatedIndex: this.animatedIndex,\n        onValueChange: this.onValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeUiLib.View, {\n        style: this.styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeUiLib.Button, {\n        color: _reactNativeUiLib.Colors.dark10,\n        outlineColor: _reactNativeUiLib.Colors.dark10,\n        style: this.styles.button,\n        round: true,\n        outline: true,\n        iconSource: _reactNativeUiLib.Assets.icons.plusSmall,\n        onPress: this.showDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }\n      })), this.renderDialog());\n    }\n  }, {\n    key: \"animatedIndex\",\n    get: function get() {\n      var _this$props2 = this.props,\n          animatedIndex = _this$props2.animatedIndex,\n          colors = _this$props2.colors;\n\n      if (animatedIndex === undefined) {\n        return colors.length - 1;\n      }\n\n      return animatedIndex;\n    }\n  }]);\n  return ColorPicker;\n}(_reactNativeUiLib.PureBaseComponent);\n\nexports.default = ColorPicker;\nColorPicker.displayName = 'ColorPicker';\nColorPicker.propTypes = _objectSpread(_objectSpread({}, _reactNativeUiLib.Dialog.PropTypes), {}, {\n  colors: _propTypes.default.arrayOf(_propTypes.default.string),\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  animatedIndex: _propTypes.default.number,\n  onValueChange: _propTypes.default.func,\n  initialColor: _propTypes.default.string,\n  onSubmit: _propTypes.default.func\n});\nColorPicker.defaultProps = {\n  initialColor: _reactNativeUiLib.Colors.dark80\n};\n\nfunction createStyles(props) {\n  var borderRadius = 12;\n  var iconSize = _ColorSwatch.SWATCH_SIZE;\n  var plusButtonContainerWidth = iconSize + 20 + 12;\n  var plusButtonContainerHeight = 92 - 2 * _ColorSwatch.SWATCH_MARGIN;\n\n  var styles = _reactNative.StyleSheet.create({\n    palette: {\n      paddingLeft: plusButtonContainerWidth\n    },\n    dialog: {\n      backgroundColor: _reactNativeUiLib.Colors.white,\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius\n    },\n    buttonContainer: {\n      position: 'absolute',\n      left: 0,\n      width: plusButtonContainerWidth,\n      height: plusButtonContainerHeight,\n      marginTop: _ColorSwatch.SWATCH_MARGIN,\n      marginBottom: _ColorSwatch.SWATCH_MARGIN,\n      alignItems: 'flex-end',\n      justifyContent: 'center',\n      paddingTop: 1,\n      backgroundColor: _reactNativeUiLib.Colors.white\n    },\n    button: {\n      width: iconSize,\n      height: iconSize,\n      marginRight: 12\n    },\n    preview: {\n      height: 200,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    header: {\n      height: 56,\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius\n    },\n    inputContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      marginBottom: _reactNativeUiLib.Constants.isAndroid ? 5 : 8\n    },\n    input: _objectSpread(_objectSpread({}, _reactNativeUiLib.Typography.text60), {}, {\n      letterSpacing: 3\n    }),\n    underline: {\n      height: 1.5,\n      width: _reactNativeUiLib.Constants.isAndroid ? 119 : 134,\n      marginRight: _reactNativeUiLib.Constants.isAndroid ? 13 : 8\n    },\n    sliderGroup: {\n      paddingTop: 12,\n      marginHorizontal: 20\n    },\n    slider: {\n      marginBottom: 15,\n      height: 26\n    },\n    label: {\n      marginBottom: 3\n    }\n  });\n\n  return styles;\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/colorPicker/index.js"],"names":["KEYBOARD_HEIGHT","ColorPicker","props","keyboardDidShow","e","Constants","isIOS","state","keyboardHeight","endCoordinates","height","setState","changeHeight","keyboardDidHide","onFocus","setFocus","textInput","focus","showDialog","show","applyColor","text","getValidColorString","hex","valid","color","Colors","getHSL","onSliderValueChange","c","updateColor","onChangeText","value","onDonePressed","_","invoke","getTextColor","onDismiss","resetValues","onValueChange","options","initialColor","getColorValue","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","remove","nextProps","isAndroid","LayoutAnimation","configureNext","Presets","easeInEaseOut","styles","createStyles","isString","replace","isTransparent","trimmed","toUpper","getHexString","isDark","white","dark10","getHexColor","isValidHex","undefined","useCustomTheme","header","Assets","icons","x","tintColor","check","colorValue","a","black","sliderGroup","slider","label","textColor","fontScale","PixelRatio","getFontScale","preview","backgroundColor","inputContainer","r","input","width","length","padding","underline","dialog","PanningProvider","Directions","DOWN","renderHeader","renderPreview","renderSliders","colors","palette","animatedIndex","buttonContainer","button","plusSmall","renderDialog","PureBaseComponent","displayName","propTypes","Dialog","PropTypes","arrayOf","string","oneOfType","bool","number","func","onSubmit","defaultProps","dark80","borderRadius","iconSize","SWATCH_SIZE","plusButtonContainerWidth","plusButtonContainerHeight","SWATCH_MARGIN","StyleSheet","create","paddingLeft","borderTopLeftRadius","borderTopRightRadius","position","left","marginTop","marginBottom","alignItems","justifyContent","paddingTop","marginRight","flexDirection","Typography","text60","letterSpacing","marginHorizontal"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAcA;;AACA;;;;;;;;;;;;AAGA,IAAMA,eAAe,GAAG,GAAxB;;IAOqBC,W;;;;;AAmCnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;;AADiB,UAoCnBC,eApCmB,GAoCD,UAAAC,CAAC,EAAI;AACrB,UAAIC,4BAAUC,KAAV,IAAmB,MAAKC,KAAL,CAAWC,cAAX,KAA8BJ,CAAC,CAACK,cAAF,CAAiBC,MAAtE,EAA8E;AAC5E,cAAKC,QAAL,CAAc;AAACH,UAAAA,cAAc,EAAEJ,CAAC,CAACK,cAAF,CAAiBC;AAAlC,SAAd;AACD;;AAED,YAAKE,YAAL,CAAkB,CAAlB;AACD,KA1CkB;;AAAA,UA4CnBC,eA5CmB,GA4CD,YAAM;AACtB,YAAKD,YAAL,CAAkBZ,eAAlB;AACD,KA9CkB;;AAAA,UAgDnBc,OAhDmB,GAgDT,YAAM;AACd,YAAKF,YAAL,CAAkB,CAAlB;AACD,KAlDkB;;AAAA,UAoDnBG,QApDmB,GAoDR,YAAM;AACf,UAAI,MAAKC,SAAT,EAAoB;AAClB,cAAKA,SAAL,CAAeC,KAAf;AACD;AACF,KAxDkB;;AAAA,UAqEnBC,UArEmB,GAqEN,YAAM;AACjB,YAAKP,QAAL,CAAc;AAACQ,QAAAA,IAAI,EAAE;AAAP,OAAd;AACD,KAvEkB;;AAAA,UAkHnBC,UAlHmB,GAkHN,UAACC,IAAD,EAAU;AAAA,kCACA,MAAKC,mBAAL,CAAyBD,IAAzB,CADA;AAAA,UACdE,GADc,yBACdA,GADc;AAAA,UACTC,KADS,yBACTA,KADS;;AAGrB,UAAID,GAAJ,EAAS;AACP,cAAKZ,QAAL,CAAc;AAACc,UAAAA,KAAK,EAAEC,yBAAOC,MAAP,CAAcJ,GAAd,CAAR;AAA4BF,UAAAA,IAAI,EAAJA,IAA5B;AAAkCG,UAAAA,KAAK,EAALA;AAAlC,SAAd;AACD,OAFD,MAEO;AACL,cAAKb,QAAL,CAAc;AAACU,UAAAA,IAAI,EAAJA,IAAD;AAAOG,UAAAA,KAAK,EAALA;AAAP,SAAd;AACD;AACF,KA1HkB;;AAAA,UA+InBI,mBA/ImB,GA+IG,UAAAH,KAAK,EAAI;AAC7B,UAAMI,CAAC,GAAGH,yBAAOC,MAAP,CAAcF,KAAd,CAAV;;AACA,YAAKK,WAAL,CAAiBD,CAAjB;AACD,KAlJkB;;AAAA,UAoJnBE,YApJmB,GAoJJ,UAAAC,KAAK,EAAI;AACtB,YAAKZ,UAAL,CAAgBY,KAAhB;AACD,KAtJkB;;AAAA,UAwJnBC,aAxJmB,GAwJH,YAAM;AAAA,UACbZ,IADa,GACL,MAAKd,KADA,CACbc,IADa;;AAAA,mCAEN,MAAKC,mBAAL,CAAyBD,IAAzB,CAFM;AAAA,UAEbE,GAFa,0BAEbA,GAFa;;AAIpB,UAAIA,GAAJ,EAAS;AACPW,wBAAEC,MAAF,CAAS,MAAKjC,KAAd,EAAqB,UAArB,EAAiCqB,GAAjC,EAAsC,MAAKa,YAAL,CAAkBb,GAAlB,CAAtC;;AACA,cAAKc,SAAL;AACD;AACF,KAhKkB;;AAAA,UAkKnBA,SAlKmB,GAkKP,YAAM;AAChB,YAAKC,WAAL;;AACAJ,sBAAEC,MAAF,CAAS,MAAKjC,KAAd,EAAqB,WAArB;AACD,KArKkB;;AAAA,UA4SnBqC,aA5SmB,GA4SH,UAACP,KAAD,EAAQQ,OAAR,EAAoB;AAClCN,sBAAEC,MAAF,CAAS,MAAKjC,KAAd,EAAqB,eAArB,EAAsC8B,KAAtC,EAA6CQ,OAA7C;AACD,KA9SkB;;AAGjB,QAAMf,MAAK,GAAGC,yBAAOC,MAAP,CAAczB,KAAK,CAACuC,YAApB,CAAd;;AACA,QAAMpB,KAAI,GAAG,MAAKqB,aAAL,CAAmBxC,KAAK,CAACuC,YAAzB,CAAb;;AAJiB,iCAKD,MAAKnB,mBAAL,CAAyBD,KAAzB,CALC;AAAA,QAKVG,MALU,0BAKVA,KALU;;AAOjB,UAAKjB,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAER,eADL;AAEXmB,MAAAA,IAAI,EAAE,KAFK;AAGXM,MAAAA,KAAK,EAALA,MAHW;AAIXJ,MAAAA,IAAI,EAAJA,KAJW;AAKXG,MAAAA,KAAK,EAALA;AALW,KAAb;AAPiB;AAclB;;;;wCAEmB;AAClB,WAAKmB,uBAAL,GAA+BC,sBAASC,WAAT,CAAqB,iBAArB,EAAwC,KAAK1C,eAA7C,CAA/B;AACA,WAAK2C,uBAAL,GAA+BF,sBAASC,WAAT,CAAqB,iBAArB,EAAwC,KAAKhC,eAA7C,CAA/B;AACD;;;2CAEsB;AACrB,WAAK8B,uBAAL,CAA6BI,MAA7B;AACA,WAAKD,uBAAL,CAA6BC,MAA7B;AACD;;;qDAEgCC,S,EAAW;AAC1C,UAAI,KAAK9C,KAAL,CAAWuC,YAAX,KAA4BO,SAAS,CAACP,YAA1C,EAAwD;AACtD,YAAMpB,IAAI,GAAG,KAAKqB,aAAL,CAAmBM,SAAS,CAACP,YAAV,IAA0B,KAAKvC,KAAL,CAAWuC,YAAxD,CAAb;;AACA,YAAMhB,KAAK,GAAGC,yBAAOC,MAAP,CAAcqB,SAAS,CAACP,YAAxB,CAAd;;AAFsD,qCAGtC,KAAKnB,mBAAL,CAAyBD,IAAzB,CAHsC;AAAA,YAG/CG,KAH+C,0BAG/CA,KAH+C;;AAKtD,aAAKb,QAAL,CAAc;AAACc,UAAAA,KAAK,EAALA,KAAD;AAAQJ,UAAAA,IAAI,EAAJA,IAAR;AAAcG,UAAAA,KAAK,EAALA;AAAd,SAAd;AACD;AACF;;;iCAwBYd,M,EAAQ;AACnB,UAAIL,4BAAU4C,SAAV,IAAuB,KAAK1C,KAAL,CAAWC,cAAX,KAA8BE,MAAzD,EAAiE;AAC/DwC,qCAAgBC,aAAhB,CAA8BD,6BAAgBE,OAAhB,CAAwBC,aAAtD;;AACA,aAAK1C,QAAL,CAAc;AAACH,UAAAA,cAAc,EAAEE;AAAjB,SAAd;AACD;AACF;;;qCAEgB;AACf,WAAK4C,MAAL,GAAcC,YAAY,CAAC,KAAKrD,KAAN,CAA1B;AACD;;;kCAcauB,K,EAAO;AACnB,UAAI,CAACS,gBAAEsB,QAAF,CAAW/B,KAAX,CAAL,EAAwB;AACtB;AACD;;AACD,aAAOA,KAAK,CAACgC,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAP;AACD;;;gCAEWpC,I,EAAM;AAChB,UAAIA,IAAI,IAAI,CAACK,yBAAOgC,aAAP,CAAqBrC,IAArB,CAAb,EAAyC;AACvC,YAAMsC,OAAO,GAAGtC,IAAI,CAACoC,OAAL,CAAa,MAAb,EAAqB,EAArB,CAAhB;AACA,YAAMlC,GAAG,SAAOoC,OAAhB;AACA,eAAOpC,GAAP;AACD;;AACD,aAAOF,IAAP;AACD;;;iCAEYI,K,EAAO;AAClB,aAAOS,gBAAE0B,OAAF,CAAUlC,yBAAOmC,YAAP,CAAoBpC,KAApB,CAAV,CAAP;AACD;;;iCAEYA,K,EAAO;AAClB,aAAOC,yBAAOoC,MAAP,CAAcrC,KAAd,IAAuBC,yBAAOqC,KAA9B,GAAsCrC,yBAAOsC,MAApD;AACD;;;wCAEmB3C,I,EAAM;AACxB,UAAME,GAAG,GAAG,KAAK0C,WAAL,CAAiB5C,IAAjB,CAAZ;;AAEA,UAAIK,yBAAOwC,UAAP,CAAkB3C,GAAlB,CAAJ,EAA4B;AAC1B,eAAO;AAACA,UAAAA,GAAG,EAAHA,GAAD;AAAMC,UAAAA,KAAK,EAAE;AAAb,SAAP;AACD;;AACD,aAAO;AAAC2C,QAAAA,SAAS,EAATA,SAAD;AAAY3C,QAAAA,KAAK,EAAE;AAAnB,OAAP;AACD;;;gCAYWC,K,EAAO;AACjB,UAAMF,GAAG,GAAG,KAAKsC,YAAL,CAAkBpC,KAAlB,CAAZ;AACA,UAAMJ,IAAI,GAAG,KAAKqB,aAAL,CAAmBnB,GAAnB,CAAb;AACA,WAAKZ,QAAL,CAAc;AAACc,QAAAA,KAAK,EAALA,KAAD;AAAQJ,QAAAA,IAAI,EAAJA,IAAR;AAAcG,QAAAA,KAAK,EAAE;AAArB,OAAd;AACD;;;kCAEa;AACZ,UAAMC,KAAK,GAAGC,yBAAOC,MAAP,CAAc,KAAKzB,KAAL,CAAWuC,YAAzB,CAAd;;AACA,UAAMpB,IAAI,GAAG,KAAKqB,aAAL,CAAmB,KAAKxC,KAAL,CAAWuC,YAA9B,CAAb;;AAFY,mCAGI,KAAKnB,mBAAL,CAAyBD,IAAzB,CAHJ;AAAA,UAGLG,KAHK,0BAGLA,KAHK;;AAKZ,WAAKb,QAAL,CAAc;AACZQ,QAAAA,IAAI,EAAE,KADM;AAEZM,QAAAA,KAAK,EAALA,KAFY;AAGZJ,QAAAA,IAAI,EAAJA,IAHY;AAIZG,QAAAA,KAAK,EAALA;AAJY,OAAd;AAMD;;;mCA0Bc;AAAA,UACN4C,cADM,GACY,KAAKlE,KADjB,CACNkE,cADM;AAAA,UAEN5C,KAFM,GAEG,KAAKjB,KAFR,CAENiB,KAFM;AAIb,aACE,6BAAC,sBAAD;AAAM,QAAA,GAAG,MAAT;AAAU,QAAA,MAAM,MAAhB;AAAiB,wBAAjB;AAA0B,2BAA1B;AAAsC,QAAA,KAAK,EAAE,KAAK8B,MAAL,CAAYe,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,wBAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,UAAU,EAAEC,yBAAOC,KAAP,CAAaC,CAF3B;AAGE,QAAA,SAAS,EAAE;AAACC,UAAAA,SAAS,EAAE/C,yBAAOsC;AAAnB,SAHb;AAIE,QAAA,OAAO,EAAE,KAAK3B,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,6BAAC,wBAAD;AACE,QAAA,cAAc,EAAE+B,cADlB;AAEE,QAAA,QAAQ,EAAE,CAAC5C,KAFb;AAGE,QAAA,IAAI,MAHN;AAIE,QAAA,UAAU,EAAE8C,yBAAOC,KAAP,CAAaG,KAJ3B;AAKE,QAAA,OAAO,EAAE,KAAKzC,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAiBD;;;oCAEe;AAAA,wBACkB,KAAK1B,KADvB;AAAA,UACPC,cADO,eACPA,cADO;AAAA,UACSiB,KADT,eACSA,KADT;AAEd,UAAMkD,UAAU,GAAGlD,KAAK,CAACmD,CAAN,KAAY,CAAZ,GAAgBlD,yBAAOmD,KAAvB,GAA+BnD,yBAAOmC,YAAP,CAAoBpC,KAApB,CAAlD;AAEA,aACE,6BAAC,kCAAD;AACE,QAAA,YAAY,EAAEkD,UADhB;AAEE,QAAA,cAAc,EAAE,CAAC,KAAKrB,MAAL,CAAYwB,WAAb,EAA0B;AAACpE,UAAAA,MAAM,EAAEF;AAAT,SAA1B,CAFlB;AAGE,QAAA,oBAAoB,EAAE,KAAK8C,MAAL,CAAYyB,MAHpC;AAIE,QAAA,UAAU,MAJZ;AAKE,QAAA,WAAW,EAAE,KAAKzB,MAAL,CAAY0B,KAL3B;AAME,QAAA,aAAa,EAAE,KAAKpD,mBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;oCAEe;AAAA;;AAAA,yBACQ,KAAKrB,KADb;AAAA,UACPkB,KADO,gBACPA,KADO;AAAA,UACAJ,IADA,gBACAA,IADA;AAEd,UAAME,GAAG,GAAG,KAAKsC,YAAL,CAAkBpC,KAAlB,CAAZ;AACA,UAAMwD,SAAS,GAAG,KAAK7C,YAAL,CAAkBb,GAAlB,CAAlB;;AACA,UAAM2D,SAAS,GAAGC,wBAAWC,YAAX,EAAlB;;AACA,UAAMpD,KAAK,GAAGN,yBAAOgC,aAAP,CAAqBrC,IAArB,IAA6B,QAA7B,GAAwCA,IAAtD;AAEA,aACE,6BAAC,sBAAD;AAAM,QAAA,KAAK,EAAE,CAAC,KAAKiC,MAAL,CAAY+B,OAAb,EAAsB;AAACC,UAAAA,eAAe,EAAE/D;AAAlB,SAAtB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,kCAAD;AAAkB,QAAA,MAAM,MAAxB;AAAyB,QAAA,OAAO,EAAE,KAAKR,QAAvC;AAAiD,QAAA,aAAa,EAAE,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,sBAAD;AAAM,QAAA,KAAK,EAAE,KAAKuC,MAAL,CAAYiC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,sBAAD;AAAM,QAAA,MAAM,MAAZ;AAAa,QAAA,KAAK,MAAlB;AAAmB,0BAAnB;AAA8B,qBAAWlF,4BAAUC,KAAnD;AAA0D,QAAA,KAAK,EAAE;AAACmB,UAAAA,KAAK,EAAEwD;AAAR,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,6BAAC,sBAAD;AACE,QAAA,GAAG,EAAE,aAAAO,CAAC;AAAA,iBAAK,MAAI,CAACxE,SAAL,GAAiBwE,CAAtB;AAAA,SADR;AAEE,QAAA,KAAK,EAAExD,KAFT;AAGE,QAAA,SAAS,EAAE,CAHb;AAIE,QAAA,aAAa,EAAE,CAJjB;AAKE,QAAA,YAAY,EAAE,KAAKD,YALrB;AAME,QAAA,KAAK,EAAE,CACL,KAAKuB,MAAL,CAAYmC,KADP,EAEL;AAAChE,UAAAA,KAAK,EAAEwD,SAAR;AAAmBS,UAAAA,KAAK,EAAE,CAAC1D,KAAK,CAAC2D,MAAN,GAAe,CAAhB,IAAqB,IAArB,GAA4BT;AAAtD,SAFK,EAGL7E,4BAAU4C,SAAV,IAAuB;AAAC2C,UAAAA,OAAO,EAAE;AAAV,SAHlB,CANT;AAWE,QAAA,cAAc,EAAEX,SAXlB;AAYE,QAAA,qBAAqB,EAAC,aAZxB;AAaE,QAAA,WAAW,EAAE,KAbf;AAcE,QAAA,YAAY,EAAE,KAdhB;AAeE,QAAA,cAAc,EAAE,YAflB;AAiBE,QAAA,aAAa,EAAE,MAjBjB;AAkBE,QAAA,6BAA6B,MAlB/B;AAmBE,QAAA,OAAO,EAAE,KAAKnE,OAnBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,EA2BE,6BAAC,sBAAD;AAAM,QAAA,KAAK,EAAE,CAAC;AAACwE,UAAAA,eAAe,EAAEL;AAAlB,SAAD,EAA+B,KAAK3B,MAAL,CAAYuC,SAA3C,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF,CADF,CADF;AAiCD;;;mCAEc;AAAA,UACN1E,IADM,GACE,KAAKZ,KADP,CACNY,IADM;AAGb,aACE,6BAAC,wBAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,OAAO,EAAEA,IAFX;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAE,IAJV;AAKE,QAAA,MAAM,MALR;AAME,QAAA,OAAO,MANT;AAOE,QAAA,SAAS,EAAE,KAAKkB,SAPlB;AAQE,QAAA,cAAc,EAAE,KAAKiB,MAAL,CAAYwC,MAR9B;AASE,QAAA,YAAY,EAAEC,kCAAgBC,UAAhB,CAA2BC,IAT3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWG,KAAKC,YAAL,EAXH,EAYG,KAAKC,aAAL,EAZH,EAaG,KAAKC,aAAL,EAbH,CADF;AAiBD;;;6BAEQ;AAAA,wBACiB,KAAKlG,KADtB;AAAA,UACAmG,MADA,eACAA,MADA;AAAA,UACQrE,KADR,eACQA,KADR;AAGP,aACE,6BAAC,sBAAD;AAAM,QAAA,GAAG,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,qBAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,MAAM,EAAEqE,MAFV;AAGE,QAAA,KAAK,EAAE,KAAK/C,MAAL,CAAYgD,OAHrB;AAIE,QAAA,aAAa,EAAE,KAJjB;AAKE,QAAA,aAAa,EAAE,KAAKC,aALtB;AAME,QAAA,aAAa,EAAE,KAAKhE,aANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE,6BAAC,sBAAD;AAAM,QAAA,KAAK,EAAE,KAAKe,MAAL,CAAYkD,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,wBAAD;AACE,QAAA,KAAK,EAAE9E,yBAAOsC,MADhB;AAEE,QAAA,YAAY,EAAEtC,yBAAOsC,MAFvB;AAGE,QAAA,KAAK,EAAE,KAAKV,MAAL,CAAYmD,MAHrB;AAIE,QAAA,KAAK,MAJP;AAKE,QAAA,OAAO,MALT;AAME,QAAA,UAAU,EAAEnC,yBAAOC,KAAP,CAAamC,SAN3B;AAOE,QAAA,OAAO,EAAE,KAAKxF,UAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,EAoBG,KAAKyF,YAAL,EApBH,CADF;AAwBD;;;wBAhOmB;AAAA,yBACc,KAAKzG,KADnB;AAAA,UACXqG,aADW,gBACXA,aADW;AAAA,UACIF,MADJ,gBACIA,MADJ;;AAElB,UAAIE,aAAa,KAAKpC,SAAtB,EAAiC;AAC/B,eAAOkC,MAAM,CAACV,MAAP,GAAgB,CAAvB;AACD;;AACD,aAAOY,aAAP;AACD;;;EAlHsCK,mC;;;AAApB3G,W,CACZ4G,W,GAAc,a;AADF5G,W,CAGZ6G,S,mCACFC,yBAAOC,S;AAIVX,EAAAA,MAAM,EAAEW,mBAAUC,OAAV,CAAkBD,mBAAUE,MAA5B,C;AAIRlF,EAAAA,KAAK,EAAEgF,mBAAUG,SAAV,CAAoB,CAACH,mBAAUE,MAAX,EAAmBF,mBAAUI,IAA7B,CAApB,C;AAIPb,EAAAA,aAAa,EAAES,mBAAUK,M;AAIzB9E,EAAAA,aAAa,EAAEyE,mBAAUM,I;AAIzB7E,EAAAA,YAAY,EAAEuE,mBAAUE,M;AAIxBK,EAAAA,QAAQ,EAAEP,mBAAUM;;AA5BHrH,W,CA+BZuH,Y,GAAe;AACpB/E,EAAAA,YAAY,EAAEf,yBAAO+F;AADD,C;;AAqTxB,SAASlE,YAAT,CAAsBrD,KAAtB,EAA6B;AAC3B,MAAMwH,YAAY,GAAG,EAArB;AACA,MAAMC,QAAQ,GAAGC,wBAAjB;AACA,MAAMC,wBAAwB,GAAGF,QAAQ,GAAG,EAAX,GAAgB,EAAjD;AACA,MAAMG,yBAAyB,GAAG,KAAK,IAAIC,0BAA3C;;AAEA,MAAMzE,MAAM,GAAG0E,wBAAWC,MAAX,CAAkB;AAC/B3B,IAAAA,OAAO,EAAE;AACP4B,MAAAA,WAAW,EAAEL;AADN,KADsB;AAI/B/B,IAAAA,MAAM,EAAE;AACNR,MAAAA,eAAe,EAAE5D,yBAAOqC,KADlB;AAENoE,MAAAA,mBAAmB,EAAET,YAFf;AAGNU,MAAAA,oBAAoB,EAAEV;AAHhB,KAJuB;AAS/BlB,IAAAA,eAAe,EAAE;AACf6B,MAAAA,QAAQ,EAAE,UADK;AAEfC,MAAAA,IAAI,EAAE,CAFS;AAGf5C,MAAAA,KAAK,EAAEmC,wBAHQ;AAIfnH,MAAAA,MAAM,EAAEoH,yBAJO;AAKfS,MAAAA,SAAS,EAAER,0BALI;AAMfS,MAAAA,YAAY,EAAET,0BANC;AAOfU,MAAAA,UAAU,EAAE,UAPG;AAQfC,MAAAA,cAAc,EAAE,QARD;AASfC,MAAAA,UAAU,EAAE,CATG;AAUfrD,MAAAA,eAAe,EAAE5D,yBAAOqC;AAVT,KATc;AAqB/B0C,IAAAA,MAAM,EAAE;AACNf,MAAAA,KAAK,EAAEiC,QADD;AAENjH,MAAAA,MAAM,EAAEiH,QAFF;AAGNiB,MAAAA,WAAW,EAAE;AAHP,KArBuB;AA0B/BvD,IAAAA,OAAO,EAAE;AACP3E,MAAAA,MAAM,EAAE,GADD;AAEP+H,MAAAA,UAAU,EAAE,QAFL;AAGPC,MAAAA,cAAc,EAAE;AAHT,KA1BsB;AA+B/BrE,IAAAA,MAAM,EAAE;AACN3D,MAAAA,MAAM,EAAE,EADF;AAENyH,MAAAA,mBAAmB,EAAET,YAFf;AAGNU,MAAAA,oBAAoB,EAAEV;AAHhB,KA/BuB;AAoC/BnC,IAAAA,cAAc,EAAE;AACdkD,MAAAA,UAAU,EAAE,QADE;AAEdC,MAAAA,cAAc,EAAE,QAFF;AAGdG,MAAAA,aAAa,EAAE,KAHD;AAIdL,MAAAA,YAAY,EAAEnI,4BAAU4C,SAAV,GAAsB,CAAtB,GAA0B;AAJ1B,KApCe;AA0C/BwC,IAAAA,KAAK,kCACAqD,6BAAWC,MADX;AAEHC,MAAAA,aAAa,EAAE;AAFZ,MA1C0B;AA8C/BnD,IAAAA,SAAS,EAAE;AACTnF,MAAAA,MAAM,EAAE,GADC;AAETgF,MAAAA,KAAK,EAAErF,4BAAU4C,SAAV,GAAsB,GAAtB,GAA4B,GAF1B;AAGT2F,MAAAA,WAAW,EAAEvI,4BAAU4C,SAAV,GAAsB,EAAtB,GAA2B;AAH/B,KA9CoB;AAmD/B6B,IAAAA,WAAW,EAAE;AACX6D,MAAAA,UAAU,EAAE,EADD;AAEXM,MAAAA,gBAAgB,EAAE;AAFP,KAnDkB;AAuD/BlE,IAAAA,MAAM,EAAE;AACNyD,MAAAA,YAAY,EAAE,EADR;AAEN9H,MAAAA,MAAM,EAAE;AAFF,KAvDuB;AA2D/BsE,IAAAA,KAAK,EAAE;AACLwD,MAAAA,YAAY,EAAE;AADT;AA3DwB,GAAlB,CAAf;;AA+DA,SAAOlF,MAAP;AACD","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {LayoutAnimation, StyleSheet, Keyboard, TextInput, PixelRatio} from 'react-native';\nimport {\n  Constants,\n  Assets,\n  Colors,\n  Typography,\n  PureBaseComponent,\n  View,\n  TouchableOpacity,\n  Dialog,\n  Button,\n  Text,\n  ColorSliderGroup,\n  PanningProvider\n} from 'react-native-ui-lib';\nimport ColorPalette from './ColorPalette';\nimport {SWATCH_MARGIN, SWATCH_SIZE} from './ColorSwatch';\n\n\nconst KEYBOARD_HEIGHT = 216;\n\n/**\n * @description: A color picker component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.js\n * @notes: This is a screen width component\n */\nexport default class ColorPicker extends PureBaseComponent {\n  static displayName = 'ColorPicker';\n\n  static propTypes = {\n    ...Dialog.PropTypes,\n    /**\n     * Array of colors for the picker's color palette (hex values)\n     */\n    colors: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * The value of the selected swatch\n     */\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    /**\n     * The index of the item to animate at first render (default is last)\n     */\n    animatedIndex: PropTypes.number,\n    /**\n     * onValueChange callback for the picker's color palette change\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * The initial color to pass the picker dialog\n     */\n    initialColor: PropTypes.string,\n    /**\n     * onSubmit callback for the picker dialog color change\n     */\n    onSubmit: PropTypes.func\n  };\n\n  static defaultProps = {\n    initialColor: Colors.dark80\n  };\n\n  constructor(props) {\n    super(props);\n\n    const color = Colors.getHSL(props.initialColor);\n    const text = this.getColorValue(props.initialColor);\n    const {valid} = this.getValidColorString(text);\n\n    this.state = {\n      keyboardHeight: KEYBOARD_HEIGHT,\n      show: false,\n      color,\n      text,\n      valid\n    };\n  }\n\n  componentDidMount() {\n    this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n    this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n  }\n\n  componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.initialColor !== nextProps.initialColor) {\n      const text = this.getColorValue(nextProps.initialColor || this.props.initialColor);\n      const color = Colors.getHSL(nextProps.initialColor);\n      const {valid} = this.getValidColorString(text);\n      \n      this.setState({color, text, valid});\n    }\n  }\n\n  keyboardDidShow = e => {\n    if (Constants.isIOS && this.state.keyboardHeight !== e.endCoordinates.height) {\n      this.setState({keyboardHeight: e.endCoordinates.height});\n    }\n    // For down arrow button in Android keyboard\n    this.changeHeight(0);\n  };\n\n  keyboardDidHide = () => {\n    this.changeHeight(KEYBOARD_HEIGHT);\n  };\n\n  onFocus = () => {\n    this.changeHeight(0);\n  };\n\n  setFocus = () => {\n    if (this.textInput) {\n      this.textInput.focus();\n    }\n  };\n\n  changeHeight(height) {\n    if (Constants.isAndroid && this.state.keyboardHeight !== height) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n      this.setState({keyboardHeight: height});\n    }\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.props);\n  }\n\n  showDialog = () => {\n    this.setState({show: true});\n  };\n\n  get animatedIndex() {\n    const {animatedIndex, colors} = this.props;\n    if (animatedIndex === undefined) {\n      return colors.length - 1;\n    }\n    return animatedIndex;\n  }\n\n  getColorValue(color) {\n    if (!_.isString(color)) {\n      return;\n    }\n    return color.replace('#', '');\n  }\n\n  getHexColor(text) {\n    if (text && !Colors.isTransparent(text)) {\n      const trimmed = text.replace(/\\s+/g, '');\n      const hex = `#${trimmed}`;\n      return hex;\n    }\n    return text;\n  }\n\n  getHexString(color) {\n    return _.toUpper(Colors.getHexString(color));\n  }\n\n  getTextColor(color) {\n    return Colors.isDark(color) ? Colors.white : Colors.dark10;\n  }\n\n  getValidColorString(text) {\n    const hex = this.getHexColor(text);\n    \n    if (Colors.isValidHex(hex)) {\n      return {hex, valid: true};\n    }\n    return {undefined, valid: false};\n  }\n\n  applyColor = (text) => {\n    const {hex, valid} = this.getValidColorString(text);\n\n    if (hex) {\n      this.setState({color: Colors.getHSL(hex), text, valid});\n    } else {\n      this.setState({text, valid});\n    }\n  };\n\n  updateColor(color) {\n    const hex = this.getHexString(color);\n    const text = this.getColorValue(hex);\n    this.setState({color, text, valid: true});\n  }\n\n  resetValues() {\n    const color = Colors.getHSL(this.props.initialColor);\n    const text = this.getColorValue(this.props.initialColor);\n    const {valid} = this.getValidColorString(text);\n    \n    this.setState({\n      show: false,\n      color,\n      text,\n      valid\n    });\n  }\n\n  onSliderValueChange = color => {\n    const c = Colors.getHSL(color);\n    this.updateColor(c);\n  };\n\n  onChangeText = value => {\n    this.applyColor(value);\n  };\n\n  onDonePressed = () => {\n    const {text} = this.state;\n    const {hex} = this.getValidColorString(text);\n\n    if (hex) {\n      _.invoke(this.props, 'onSubmit', hex, this.getTextColor(hex));\n      this.onDismiss();\n    }\n  };\n\n  onDismiss = () => {\n    this.resetValues();\n    _.invoke(this.props, 'onDismiss');\n  };\n\n  renderHeader() {\n    const {useCustomTheme} = this.props;\n    const {valid} = this.state;\n\n    return (\n      <View row spread bg-white paddingH-20 style={this.styles.header}>\n        <Button\n          link\n          iconSource={Assets.icons.x}\n          iconStyle={{tintColor: Colors.dark10}}\n          onPress={this.onDismiss}\n        />\n        <Button\n          useCustomTheme={useCustomTheme}\n          disabled={!valid}\n          link\n          iconSource={Assets.icons.check}\n          onPress={this.onDonePressed}\n        />\n      </View>\n    );\n  }\n\n  renderSliders() {\n    const {keyboardHeight, color} = this.state;\n    const colorValue = color.a === 0 ? Colors.black : Colors.getHexString(color);\n\n    return (\n      <ColorSliderGroup \n        initialColor={colorValue} \n        containerStyle={[this.styles.sliderGroup, {height: keyboardHeight}]}\n        sliderContainerStyle={this.styles.slider}\n        showLabels\n        labelsStyle={this.styles.label}\n        onValueChange={this.onSliderValueChange}\n      />\n    );\n  }\n\n  renderPreview() {\n    const {color, text} = this.state;\n    const hex = this.getHexString(color);\n    const textColor = this.getTextColor(hex);\n    const fontScale = PixelRatio.getFontScale();\n    const value = Colors.isTransparent(text) ? '000000' : text;\n\n    return (\n      <View style={[this.styles.preview, {backgroundColor: hex}]}>\n        <TouchableOpacity center onPress={this.setFocus} activeOpacity={1}>\n          <View style={this.styles.inputContainer}>\n            <Text text60 white marginL-13 marginR-5={Constants.isIOS} style={{color: textColor}}>\n              #\n            </Text>\n            <TextInput\n              ref={r => (this.textInput = r)}\n              value={value}\n              maxLength={6}\n              numberOfLines={1}\n              onChangeText={this.onChangeText}\n              style={[\n                this.styles.input,\n                {color: textColor, width: (value.length + 1) * 16.5 * fontScale},\n                Constants.isAndroid && {padding: 0}\n              ]}\n              selectionColor={textColor}\n              underlineColorAndroid=\"transparent\"\n              autoCorrect={false}\n              autoComplete={'off'}\n              autoCapitalize={'characters'}\n              // keyboardType={'numbers-and-punctuation'} // doesn't work with `autoCapitalize`\n              returnKeyType={'done'}\n              enablesReturnKeyAutomatically\n              onFocus={this.onFocus}\n            />\n          </View>\n          <View style={[{backgroundColor: textColor}, this.styles.underline]}/>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  renderDialog() {\n    const {show} = this.state;\n\n    return (\n      <Dialog\n        migrate\n        visible={show}\n        width=\"100%\"\n        height={null}\n        bottom\n        centerH\n        onDismiss={this.onDismiss}\n        containerStyle={this.styles.dialog}\n        panDirection={PanningProvider.Directions.DOWN}\n      >\n        {this.renderHeader()}\n        {this.renderPreview()}\n        {this.renderSliders()}\n      </Dialog>\n    );\n  }\n\n  render() {\n    const {colors, value} = this.props;\n\n    return (\n      <View row>\n        <ColorPalette\n          value={value}\n          colors={colors}\n          style={this.styles.palette}\n          usePagination={false}\n          animatedIndex={this.animatedIndex}\n          onValueChange={this.onValueChange}\n        />\n        <View style={this.styles.buttonContainer}>\n          <Button\n            color={Colors.dark10}\n            outlineColor={Colors.dark10}\n            style={this.styles.button}\n            round\n            outline\n            iconSource={Assets.icons.plusSmall}\n            onPress={this.showDialog}\n          />\n        </View>\n        {this.renderDialog()}\n      </View>\n    );\n  }\n\n  // ColorPalette\n  onValueChange = (value, options) => {\n    _.invoke(this.props, 'onValueChange', value, options);\n  };\n}\n\nfunction createStyles(props) {\n  const borderRadius = 12;\n  const iconSize = SWATCH_SIZE;\n  const plusButtonContainerWidth = iconSize + 20 + 12;\n  const plusButtonContainerHeight = 92 - 2 * SWATCH_MARGIN;\n  \n  const styles = StyleSheet.create({\n    palette: {\n      paddingLeft: plusButtonContainerWidth\n    },\n    dialog: {\n      backgroundColor: Colors.white,\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius\n    },\n    buttonContainer: {\n      position: 'absolute',\n      left: 0,\n      width: plusButtonContainerWidth,\n      height: plusButtonContainerHeight,\n      marginTop: SWATCH_MARGIN,\n      marginBottom: SWATCH_MARGIN,\n      alignItems: 'flex-end',\n      justifyContent: 'center',\n      paddingTop: 1,\n      backgroundColor: Colors.white\n    },\n    button: {\n      width: iconSize,\n      height: iconSize,\n      marginRight: 12\n    },\n    preview: {\n      height: 200,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    header: {\n      height: 56,\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius\n    },\n    inputContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      marginBottom: Constants.isAndroid ? 5 : 8\n    },\n    input: {\n      ...Typography.text60,\n      letterSpacing: 3\n    },\n    underline: {\n      height: 1.5,\n      width: Constants.isAndroid ? 119 : 134,\n      marginRight: Constants.isAndroid ? 13 : 8\n    },\n    sliderGroup: {\n      paddingTop: 12,\n      marginHorizontal: 20\n    },\n    slider: {\n      marginBottom: 15,\n      height: 26\n    },\n    label: {\n      marginBottom: 3\n    }\n  });\n  return styles;\n}\n"]},"metadata":{},"sourceType":"script"}