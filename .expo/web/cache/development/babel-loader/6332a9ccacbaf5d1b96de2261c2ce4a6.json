{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _reactNativeReanimated = _interopRequireDefault(require(\"react-native-reanimated\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _style = require(\"../../style\");\n\nvar _text = _interopRequireDefault(require(\"../../components/text\"));\n\nvar _badge = _interopRequireDefault(require(\"../../components/badge\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"../TouchableOpacity\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\incubator\\\\TabController\\\\TabBarItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar cond = _reactNativeReanimated.default.cond,\n    eq = _reactNativeReanimated.default.eq,\n    call = _reactNativeReanimated.default.call,\n    block = _reactNativeReanimated.default.block,\n    event = _reactNativeReanimated.default.event,\n    and = _reactNativeReanimated.default.and,\n    defined = _reactNativeReanimated.default.defined;\nvar DEFAULT_LABEL_COLOR = _style.Colors.black;\nvar DEFAULT_SELECTED_LABEL_COLOR = _style.Colors.blue30;\n\nvar TabBarItem = function (_PureComponent) {\n  (0, _inherits2.default)(TabBarItem, _PureComponent);\n\n  var _super = _createSuper(TabBarItem);\n\n  function TabBarItem() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TabBarItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      itemWidth: undefined\n    };\n    _this.onStateChange = event([{\n      nativeEvent: {\n        state: _this.props.state\n      }\n    }], {\n      useNativeDriver: true\n    });\n\n    _this.onLayout = function (_ref) {\n      var width = _ref.nativeEvent.layout.width;\n      var _this$props = _this.props,\n          index = _this$props.index,\n          onLayout = _this$props.onLayout;\n      var itemWidth = _this.state.itemWidth;\n\n      if (!itemWidth) {\n        _this.setState({\n          itemWidth: width\n        });\n\n        onLayout(width, index);\n      }\n    };\n\n    _this.onPress = function () {\n      var _this$props2 = _this.props,\n          index = _this$props2.index,\n          onPress = _this$props2.onPress;\n\n      _lodash.default.invoke(_this.props, 'onChangeIndex', index);\n\n      onPress(index);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(TabBarItem, [{\n    key: \"getItemStyle\",\n    value: function getItemStyle() {\n      var _this$props3 = this.props,\n          state = _this$props3.state,\n          width = _this$props3.width;\n      var itemWidth = this.state.itemWidth;\n      var opacity = block([cond(eq(state, _reactNativeGestureHandler.State.END), call([], this.onPress)), cond(eq(state, _reactNativeGestureHandler.State.BEGAN), this.props.activeOpacity, 1)]);\n      var style = {\n        opacity: opacity\n      };\n\n      if (width || itemWidth) {\n        style.flex = undefined;\n        style.width = width || itemWidth;\n        style.paddingHorizontal = undefined;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"getLabelStyle\",\n    value: function getLabelStyle() {\n      var itemWidth = this.state.itemWidth;\n      var _this$props4 = this.props,\n          index = _this$props4.index,\n          currentPage = _this$props4.currentPage,\n          labelColor = _this$props4.labelColor,\n          selectedLabelColor = _this$props4.selectedLabelColor,\n          labelStyle = _this$props4.labelStyle,\n          ignore = _this$props4.ignore;\n      var fontWeight = cond(and(eq(currentPage, index), defined(itemWidth)), '700', '300');\n      var activeColor = selectedLabelColor || DEFAULT_SELECTED_LABEL_COLOR;\n      var inactiveColor = labelColor || DEFAULT_LABEL_COLOR;\n      var color = cond(eq(currentPage, index), (0, _reactNative.processColor)(activeColor), (0, _reactNative.processColor)(ignore ? activeColor : inactiveColor));\n      return [{\n        fontWeight: fontWeight,\n        color: color\n      }, labelStyle];\n    }\n  }, {\n    key: \"getIconStyle\",\n    value: function getIconStyle() {\n      var _this$props5 = this.props,\n          index = _this$props5.index,\n          currentPage = _this$props5.currentPage,\n          iconColor = _this$props5.iconColor,\n          selectedIconColor = _this$props5.selectedIconColor,\n          labelColor = _this$props5.labelColor,\n          selectedLabelColor = _this$props5.selectedLabelColor,\n          ignore = _this$props5.ignore;\n      var activeColor = selectedIconColor || selectedLabelColor || DEFAULT_SELECTED_LABEL_COLOR;\n      var inactiveColor = iconColor || labelColor || DEFAULT_LABEL_COLOR;\n      var tintColor = cond(eq(currentPage, index), activeColor, ignore ? activeColor : inactiveColor);\n      return {\n        tintColor: tintColor\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          label = _this$props6.label,\n          icon = _this$props6.icon,\n          badge = _this$props6.badge,\n          state = _this$props6.state,\n          uppercase = _this$props6.uppercase,\n          activeOpacity = _this$props6.activeOpacity,\n          activeBackgroundColor = _this$props6.activeBackgroundColor,\n          testID = _this$props6.testID;\n      return _react.default.createElement(_TouchableOpacity.default, {\n        pressState: state,\n        style: [styles.tabItem, this.getItemStyle()],\n        onLayout: this.onLayout,\n        feedbackColor: activeBackgroundColor,\n        activeOpacity: activeOpacity,\n        onPress: this.onPress,\n        testID: testID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, icon && _react.default.createElement(_reactNativeReanimated.default.Image, {\n        source: icon,\n        style: [styles.tabItemIcon, this.getIconStyle()],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 18\n        }\n      }), !_lodash.default.isEmpty(label) && _react.default.createElement(_reactNativeReanimated.default.Text, {\n        style: [styles.tabItemLabel, this.getLabelStyle()],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, uppercase ? _lodash.default.toUpper(label) : label), badge && _react.default.createElement(_badge.default, (0, _extends2.default)({\n        backgroundColor: _style.Colors.red30,\n        size: 'default'\n      }, badge, {\n        containerStyle: styles.badge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      })));\n    }\n  }]);\n  return TabBarItem;\n}(_react.PureComponent);\n\nexports.default = TabBarItem;\nTabBarItem.displayName = 'TabController.TabBarItem';\nTabBarItem.propTypes = {\n  label: _propTypes.default.string,\n  labelStyle: _text.default.propTypes.style,\n  labelColor: _propTypes.default.string,\n  selectedLabelColor: _propTypes.default.string,\n  icon: _propTypes.default.number,\n  iconColor: _propTypes.default.string,\n  selectedIconColor: _propTypes.default.string,\n  badge: _propTypes.default.shape(_badge.default.propTypes),\n  width: _propTypes.default.number,\n  ignore: _propTypes.default.bool,\n  onPress: _propTypes.default.func,\n  uppercase: _propTypes.default.bool,\n  activeOpacity: _propTypes.default.number,\n  activeBackgroundColor: _propTypes.default.string,\n  index: _propTypes.default.number,\n  state: _propTypes.default.object,\n  currentPage: _propTypes.default.object,\n  onLayout: _propTypes.default.func\n};\nTabBarItem.defaultProps = {\n  activeOpacity: 1,\n  onPress: _lodash.default.noop\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  tabItem: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: _style.Spacings.s4\n  },\n  tabItemLabel: _objectSpread({}, _style.Typography.text80),\n  tabItemIcon: {\n    marginRight: 10\n  },\n  badge: {\n    marginLeft: _style.Spacings.s1\n  }\n});","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/incubator/TabController/TabBarItem.js"],"names":["cond","Reanimated","eq","call","block","event","and","defined","DEFAULT_LABEL_COLOR","Colors","black","DEFAULT_SELECTED_LABEL_COLOR","blue30","TabBarItem","state","itemWidth","undefined","onStateChange","nativeEvent","props","useNativeDriver","onLayout","width","layout","index","setState","onPress","_","invoke","opacity","State","END","BEGAN","activeOpacity","style","flex","paddingHorizontal","currentPage","labelColor","selectedLabelColor","labelStyle","ignore","fontWeight","activeColor","inactiveColor","color","iconColor","selectedIconColor","tintColor","label","icon","badge","uppercase","activeBackgroundColor","testID","styles","tabItem","getItemStyle","tabItemIcon","getIconStyle","isEmpty","tabItemLabel","getLabelStyle","toUpper","red30","PureComponent","displayName","propTypes","PropTypes","string","Text","number","shape","Badge","bool","func","object","defaultProps","noop","StyleSheet","create","flexDirection","alignItems","justifyContent","Spacings","s4","Typography","text80","marginRight","marginLeft","s1"],"mappings":"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","sourcesContent":["// TODO: support commented props\nimport React, {PureComponent} from 'react';\nimport {StyleSheet, processColor} from 'react-native';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Reanimated from 'react-native-reanimated';\nimport {State} from 'react-native-gesture-handler';\nimport {Colors, Typography, Spacings} from '../../style';\nimport Text from '../../components/text';\nimport Badge from '../../components/badge';\nimport TouchableOpacity from '../TouchableOpacity';\n\nconst {cond, eq, call, block, event, and, defined} = Reanimated;\n\nconst DEFAULT_LABEL_COLOR = Colors.black;\nconst DEFAULT_SELECTED_LABEL_COLOR = Colors.blue30;\n\n/**\n * @description: TabController's TabBarItem\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TabControllerScreen/index.js\n * @notes: Must be rendered as a direct child of TabController.TabBar.\n */\nexport default class TabBarItem extends PureComponent {\n  static displayName = 'TabController.TabBarItem';\n\n  static propTypes = {\n    /**\n     * label of the tab\n     */\n    label: PropTypes.string,\n    /**\n     * custom label style\n     */\n    labelStyle: Text.propTypes.style,\n    /**\n     * the default label color\n     */\n    labelColor: PropTypes.string,\n    /**\n     * the selected label color\n     */\n    selectedLabelColor: PropTypes.string,\n    /**\n     * icon of the tab\n     */\n    icon: PropTypes.number,\n    /**\n     * icon tint color\n     */\n    iconColor: PropTypes.string,\n    /**\n     * icon selected tint color\n     */\n    selectedIconColor: PropTypes.string,\n    /**\n     * Badge component props to display next the item label\n     */\n    badge: PropTypes.shape(Badge.propTypes),\n    // /**\n    //  * maximun number of lines the label can break\n    //  */\n    // maxLines: PropTypes.number,\n    // /**\n    //  * whether the tab will have a divider on its right\n    //  */\n    // showDivider: PropTypes.bool,\n    /**\n     * A fixed width for the item\n     */\n    width: PropTypes.number,\n    /**\n     * ignore of the tab\n     */\n    ignore: PropTypes.bool, // eslint-disable-line\n    /**\n     * callback for when pressing a tab\n     */\n    onPress: PropTypes.func,\n    /**\n     * whether to change the text to uppercase\n     */\n    uppercase: PropTypes.bool,\n    /**\n     * The active opacity when pressing a tab\n     */\n    activeOpacity: PropTypes.number,\n    /**\n     * TODO: rename to feedbackColor\n     * Apply background color on press for TouchableOpacity\n     */\n    activeBackgroundColor: PropTypes.string,\n\n    // INTERNAL PROPS\n    index: PropTypes.number,\n    state: PropTypes.object,\n    currentPage: PropTypes.object,\n    onLayout: PropTypes.func\n  };\n\n  static defaultProps = {\n    activeOpacity: 1,\n    onPress: _.noop\n  };\n\n  state = {\n    itemWidth: undefined\n  };\n\n  onStateChange = event([\n    {\n      nativeEvent: {state: this.props.state}\n    }\n  ],\n  {useNativeDriver: true},);\n\n  onLayout = ({\n    nativeEvent: {\n      layout: {width}\n    }\n  }) => {\n    const {index, onLayout} = this.props;\n    const {itemWidth} = this.state;\n    if (!itemWidth) {\n      this.setState({itemWidth: width});\n      onLayout(width, index);\n    }\n  };\n\n  onPress = () => {\n    const {index, onPress} = this.props;\n    _.invoke(this.props, 'onChangeIndex', index);\n    onPress(index);\n  };\n\n  getItemStyle() {\n    const {state, width} = this.props;\n    const {itemWidth} = this.state;\n    const opacity = block([\n      cond(eq(state, State.END), call([], this.onPress)),\n      cond(eq(state, State.BEGAN), this.props.activeOpacity, 1)\n    ]);\n\n    const style = {\n      opacity\n    };\n\n    if (width || itemWidth) {\n      style.flex = undefined;\n      style.width = width || itemWidth;\n      style.paddingHorizontal = undefined;\n    }\n\n    return style;\n  }\n\n  getLabelStyle() {\n    const {itemWidth} = this.state;\n    const {index, currentPage, labelColor, selectedLabelColor, labelStyle, ignore} = this.props;\n    const fontWeight = cond(and(eq(currentPage, index), defined(itemWidth)), '700', '300');\n    const activeColor = selectedLabelColor || DEFAULT_SELECTED_LABEL_COLOR;\n    const inactiveColor = labelColor || DEFAULT_LABEL_COLOR;\n    const color = cond(eq(currentPage, index),\n      processColor(activeColor),\n      processColor(ignore ? activeColor : inactiveColor),);\n\n    return [\n      {\n        fontWeight,\n        color\n      },\n      labelStyle\n    ];\n  }\n\n  getIconStyle() {\n    const {index, currentPage, iconColor, selectedIconColor, labelColor, selectedLabelColor, ignore} = this.props;\n\n    const activeColor = selectedIconColor || selectedLabelColor || DEFAULT_SELECTED_LABEL_COLOR;\n    const inactiveColor = iconColor || labelColor || DEFAULT_LABEL_COLOR;\n\n    const tintColor = cond(eq(currentPage, index),\n      // TODO: using processColor here broke functionality,\n      // not using it seem to not be very performant\n      activeColor,\n      ignore ? activeColor : inactiveColor,);\n\n    return {\n      tintColor\n    };\n  }\n\n  render() {\n    const {label, icon, badge, state, uppercase, activeOpacity, activeBackgroundColor, testID} = this.props;\n\n    return (\n      <TouchableOpacity\n        pressState={state}\n        style={[styles.tabItem, this.getItemStyle()]}\n        onLayout={this.onLayout}\n        feedbackColor={activeBackgroundColor}\n        activeOpacity={activeOpacity}\n        onPress={this.onPress}\n        testID={testID}\n      >\n        {icon && <Reanimated.Image source={icon} style={[styles.tabItemIcon, this.getIconStyle()]}/>}\n        {!_.isEmpty(label) && (\n          <Reanimated.Text style={[styles.tabItemLabel, this.getLabelStyle()]}>\n            {uppercase ? _.toUpper(label) : label}\n          </Reanimated.Text>\n        )}\n        {badge && <Badge backgroundColor={Colors.red30} size={'default'} {...badge} containerStyle={styles.badge}/>}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tabItem: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: Spacings.s4\n  },\n  tabItemLabel: {\n    ...Typography.text80\n  },\n  tabItemIcon: {\n    marginRight: 10\n  },\n  badge: {\n    marginLeft: Spacings.s1\n  }\n});\n"]},"metadata":{},"sourceType":"script"}