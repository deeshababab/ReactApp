{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _commons = require(\"../../commons\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\touchableOpacity\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar TouchableOpacity = function (_PureBaseComponent) {\n  (0, _inherits2.default)(TouchableOpacity, _PureBaseComponent);\n\n  var _super = _createSuper(TouchableOpacity);\n\n  function TouchableOpacity(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TouchableOpacity);\n    _this = _super.call(this, props);\n    _this.state = _objectSpread(_objectSpread({}, _this.state), {}, {\n      active: false\n    });\n\n    var _this$getThemeProps = _this.getThemeProps(),\n        throttleTime = _this$getThemeProps.throttleTime,\n        throttleOptions = _this$getThemeProps.throttleOptions;\n\n    _this.onPress = _lodash.default.throttle(_this.onPress.bind((0, _assertThisInitialized2.default)(_this)), throttleTime, throttleOptions);\n    _this.onPressIn = _this.onPressIn.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onPressOut = _this.onPressOut.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(TouchableOpacity, [{\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var disabled = this.props.disabled;\n      return {\n        accessibilityRole: 'button',\n        accessibilityStates: disabled ? ['disabled'] : undefined\n      };\n    }\n  }, {\n    key: \"onPressIn\",\n    value: function onPressIn() {\n      this.setState({\n        active: true\n      });\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _lodash.default.invoke.apply(_lodash.default, [this.props, 'onPressIn'].concat(args));\n    }\n  }, {\n    key: \"onPressOut\",\n    value: function onPressOut() {\n      this.setState({\n        active: false\n      });\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _lodash.default.invoke.apply(_lodash.default, [this.props, 'onPressOut'].concat(args));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          borderRadius = _this$state.borderRadius,\n          paddings = _this$state.paddings,\n          margins = _this$state.margins,\n          alignments = _this$state.alignments,\n          flexStyle = _this$state.flexStyle;\n\n      var _this$getThemeProps2 = this.getThemeProps(),\n          style = _this$getThemeProps2.style,\n          others = (0, _objectWithoutProperties2.default)(_this$getThemeProps2, [\"style\"]);\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, this.getAccessibilityInfo(), others, {\n        onPress: this.onPress,\n        onPressIn: this.onPressIn,\n        onPressOut: this.onPressOut,\n        style: [this.backgroundColorStyle, borderRadius && {\n          borderRadius: borderRadius\n        }, flexStyle, paddings, margins, alignments, style, this.activeBackgroundStyle],\n        ref: this.setRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"onPress\",\n    value: function onPress() {\n      _lodash.default.invoke(this.props, 'onPress', this.props);\n    }\n  }, {\n    key: \"backgroundColorStyle\",\n    get: function get() {\n      var modifiersBackgroundColor = this.state.backgroundColor;\n\n      var _this$getThemeProps3 = this.getThemeProps(),\n          propsBackgroundColor = _this$getThemeProps3.backgroundColor;\n\n      var backgroundColor = propsBackgroundColor || modifiersBackgroundColor;\n\n      if (backgroundColor) {\n        return {\n          backgroundColor: backgroundColor\n        };\n      }\n    }\n  }, {\n    key: \"activeBackgroundStyle\",\n    get: function get() {\n      var active = this.state.active;\n      var activeBackgroundColor = this.props.activeBackgroundColor;\n\n      if (active && activeBackgroundColor) {\n        return {\n          backgroundColor: activeBackgroundColor\n        };\n      }\n    }\n  }]);\n  return TouchableOpacity;\n}(_commons.PureBaseComponent);\n\nexports.default = TouchableOpacity;\nTouchableOpacity.displayName = 'TouchableOpacity';\nTouchableOpacity.propTypes = {\n  backgroundColor: _propTypes.default.string,\n  throttleTime: _propTypes.default.number,\n  throttleOptions: _propTypes.default.shape({\n    leading: _propTypes.default.bool,\n    trailing: _propTypes.default.bool\n  }),\n  activeBackgroundColor: _propTypes.default.string\n};","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/touchableOpacity/index.js"],"names":["TouchableOpacity","props","state","active","getThemeProps","throttleTime","throttleOptions","onPress","_","throttle","bind","onPressIn","onPressOut","disabled","accessibilityRole","accessibilityStates","undefined","setState","args","invoke","borderRadius","paddings","margins","alignments","flexStyle","style","others","getAccessibilityInfo","backgroundColorStyle","activeBackgroundStyle","setRef","modifiersBackgroundColor","backgroundColor","propsBackgroundColor","activeBackgroundColor","PureBaseComponent","displayName","propTypes","PropTypes","string","number","shape","leading","bool","trailing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {TouchableOpacity as RNTouchableOpacity} from 'react-native';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport {PureBaseComponent} from '../../commons';\n\n/**\n * @description: A wrapper for TouchableOpacity component. Support onPress, throttling and activeBackgroundColor\n * @extends: TouchableOpacity\n * @modifiers: margins, paddings, alignments, background, borderRadius\n * @extendslink: https://facebook.github.io/react-native/docs/touchableopacity.html\n * @gif: https://media.giphy.com/media/xULW8AMIgw7l31zjm8/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/src/components/touchableOpacity/index.js\n */\nexport default class TouchableOpacity extends PureBaseComponent {\n  static displayName = 'TouchableOpacity';\n\n  static propTypes = {\n    /**\n     * background color for TouchableOpacity\n     */\n    backgroundColor: PropTypes.string,\n    /**\n     * throttle time in MS for onPress callback\n     */\n    throttleTime: PropTypes.number,\n    /**\n     * throttle options\n     */\n    throttleOptions: PropTypes.shape({leading: PropTypes.bool, trailing: PropTypes.bool}),\n    /**\n     * Apply background color on TouchableOpacity when active (press is on)\n     */\n    activeBackgroundColor: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    const {throttleTime, throttleOptions} = this.getThemeProps();\n\n    this.onPress = _.throttle(this.onPress.bind(this), throttleTime, throttleOptions);\n    this.onPressIn = this.onPressIn.bind(this);\n    this.onPressOut = this.onPressOut.bind(this);\n  }\n\n  state = {\n    ...this.state,\n    active: false\n  };\n\n  getAccessibilityInfo() {\n    const {disabled} = this.props;\n    return {\n      accessibilityRole: 'button',\n      accessibilityStates: disabled ? ['disabled'] : undefined\n    };\n  }\n\n  onPressIn(...args) {\n    this.setState({\n      active: true\n    });\n    _.invoke(this.props, 'onPressIn', ...args);\n  }\n\n  onPressOut(...args) {\n    this.setState({\n      active: false\n    });\n    _.invoke(this.props, 'onPressOut', ...args);\n  }\n\n  get backgroundColorStyle() {\n    const {backgroundColor: modifiersBackgroundColor} = this.state;\n    const {backgroundColor: propsBackgroundColor} = this.getThemeProps();\n\n    const backgroundColor = propsBackgroundColor || modifiersBackgroundColor;\n\n    if (backgroundColor) {\n      return {backgroundColor};\n    }\n  }\n\n  get activeBackgroundStyle() {\n    const {active} = this.state;\n    const {activeBackgroundColor} = this.props;\n\n    if (active && activeBackgroundColor) {\n      return {backgroundColor: activeBackgroundColor};\n    }\n  }\n\n  render() {\n    const {borderRadius, paddings, margins, alignments, flexStyle} = this.state;\n    const {style, ...others} = this.getThemeProps();\n\n    return (\n      <RNTouchableOpacity\n        {...this.getAccessibilityInfo()}\n        {...others}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        style={[\n          this.backgroundColorStyle,\n          borderRadius && {borderRadius},\n          flexStyle,\n          paddings,\n          margins,\n          alignments,\n          style,\n          this.activeBackgroundStyle\n        ]}\n        ref={this.setRef}\n      />\n    );\n  }\n\n  onPress() {\n    _.invoke(this.props, 'onPress', this.props);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}