{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _panningContext = _interopRequireDefault(require(\"./panningContext\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\panningViews\\\\panningProvider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DIRECTIONS = {\n  UP: 'up',\n  DOWN: 'down',\n  LEFT: 'left',\n  RIGHT: 'right'\n};\n\nvar PanningProvider = function (_Component) {\n  (0, _inherits2.default)(PanningProvider, _Component);\n\n  var _super = _createSuper(PanningProvider);\n\n  function PanningProvider(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PanningProvider);\n    _this = _super.call(this, props);\n\n    _this.getProviderContextValue = function () {\n      var _this$state = _this.state,\n          isPanning = _this$state.isPanning,\n          wasTerminated = _this$state.wasTerminated,\n          dragDirections = _this$state.dragDirections,\n          dragDeltas = _this$state.dragDeltas,\n          swipeDirections = _this$state.swipeDirections,\n          swipeVelocities = _this$state.swipeVelocities,\n          panLocation = _this$state.panLocation;\n      return {\n        onPanStart: _this.onPanStart,\n        onPanRelease: _this.onPanRelease,\n        onPanTerminated: _this.onPanTerminated,\n        isPanning: isPanning,\n        wasTerminated: wasTerminated,\n        onDrag: _this.onDrag,\n        dragDirections: dragDirections,\n        dragDeltas: dragDeltas,\n        onSwipe: _this.onSwipe,\n        swipeDirections: swipeDirections,\n        swipeVelocities: swipeVelocities,\n        onPanLocationChanged: _this.onPanLocationChanged,\n        panLocation: panLocation\n      };\n    };\n\n    _this.onPanStart = function () {\n      _this.setState({\n        isPanning: true,\n        wasTerminated: false\n      });\n    };\n\n    _this.onPanRelease = function () {\n      _this.setState({\n        isPanning: false\n      });\n    };\n\n    _this.onPanTerminated = function () {\n      _this.setState({\n        isPanning: false,\n        wasTerminated: true\n      });\n    };\n\n    _this.onDrag = function (_ref) {\n      var directions = _ref.directions,\n          deltas = _ref.deltas;\n\n      _this.setState({\n        dragDirections: directions,\n        dragDeltas: deltas,\n        swipeDirections: {},\n        swipeVelocities: {}\n      });\n    };\n\n    _this.onSwipe = function (_ref2) {\n      var directions = _ref2.directions,\n          velocities = _ref2.velocities;\n\n      _this.setState({\n        swipeDirections: directions,\n        swipeVelocities: velocities,\n        dragDirections: {},\n        dragDeltas: {}\n      });\n    };\n\n    _this.onPanLocationChanged = function (location) {\n      _this.setState({\n        panLocation: location\n      });\n    };\n\n    _this.state = {\n      isPanning: false,\n      wasTerminated: false,\n      dragDirections: {},\n      dragDeltas: {},\n      swipeDirections: {},\n      swipeVelocities: {},\n      panLocation: {}\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(PanningProvider, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_panningContext.default.Provider, {\n        value: this.getProviderContextValue(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n  return PanningProvider;\n}(_react.Component);\n\nexports.default = PanningProvider;\nPanningProvider.displayName = 'PanningProvider';\nPanningProvider.Directions = DIRECTIONS;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/panningViews/panningProvider.js"],"names":["DIRECTIONS","UP","DOWN","LEFT","RIGHT","PanningProvider","props","getProviderContextValue","state","isPanning","wasTerminated","dragDirections","dragDeltas","swipeDirections","swipeVelocities","panLocation","onPanStart","onPanRelease","onPanTerminated","onDrag","onSwipe","onPanLocationChanged","setState","directions","deltas","velocities","location","children","Component","displayName","Directions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PanningContext from './panningContext';\n\nconst DIRECTIONS = {\n  UP: 'up',\n  DOWN: 'down',\n  LEFT: 'left',\n  RIGHT: 'right'\n};\n\n/**\n * @description: Wraps the panResponderView and panListenerView to provide a shared context\n */\nexport default class PanningProvider extends Component {\n  static displayName = 'PanningProvider';\n  static Directions = DIRECTIONS;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isPanning: false,\n      wasTerminated: false,\n      dragDirections: {},\n      dragDeltas: {},\n      swipeDirections: {},\n      swipeVelocities: {},\n      panLocation: {}\n    };\n  }\n\n  getProviderContextValue = () => {\n    const {\n      isPanning,\n      wasTerminated,\n      dragDirections,\n      dragDeltas,\n      swipeDirections,\n      swipeVelocities,\n      panLocation\n    } = this.state;\n\n    return {\n      onPanStart: this.onPanStart,\n      onPanRelease: this.onPanRelease,\n      onPanTerminated: this.onPanTerminated,\n      isPanning,\n      wasTerminated,\n      onDrag: this.onDrag,\n      dragDirections,\n      dragDeltas,\n      onSwipe: this.onSwipe,\n      swipeDirections,\n      swipeVelocities,\n      onPanLocationChanged: this.onPanLocationChanged,\n      panLocation\n    };\n  };\n\n  onPanStart = () => {\n    this.setState({isPanning: true, wasTerminated: false});\n  };\n\n  onPanRelease = () => {\n    this.setState({isPanning: false});\n  };\n\n  onPanTerminated = () => {\n    this.setState({isPanning: false, wasTerminated: true});\n  };\n\n  onDrag = ({directions, deltas}) => {\n    this.setState({dragDirections: directions, dragDeltas: deltas, swipeDirections: {}, swipeVelocities: {}});\n  };\n\n  onSwipe = ({directions, velocities}) => {\n    this.setState({swipeDirections: directions, swipeVelocities: velocities, dragDirections: {}, dragDeltas: {}});\n  };\n\n  onPanLocationChanged = location => {\n    this.setState({panLocation: location});\n  };\n\n  render() {\n    return (\n      <PanningContext.Provider value={this.getProviderContextValue()}>{this.props.children}</PanningContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}