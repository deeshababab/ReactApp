{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _touchableOpacity = _interopRequireDefault(require(\"../touchableOpacity\"));\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\pageControl\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction getColorStyle(color, inactiveColor, index, currentPage) {\n  var compColor = color || _style.ThemeManager.primaryColor;\n  return {\n    borderColor: index === currentPage ? compColor : inactiveColor || compColor,\n    backgroundColor: index === currentPage ? compColor : inactiveColor || 'transparent'\n  };\n}\n\nfunction getSizeStyle(size, enlargeActive, index, currentPage) {\n  var temp = enlargeActive ? index === currentPage ? size + 2 : size : size;\n  return {\n    width: temp,\n    height: temp,\n    borderRadius: temp / 2\n  };\n}\n\nvar PageControl = function (_BaseComponent) {\n  (0, _inherits2.default)(PageControl, _BaseComponent);\n\n  var _super = _createSuper(PageControl);\n\n  function PageControl() {\n    (0, _classCallCheck2.default)(this, PageControl);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(PageControl, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numOfPages = _this$props.numOfPages,\n          currentPage = _this$props.currentPage,\n          color = _this$props.color,\n          inactiveColor = _this$props.inactiveColor,\n          containerStyle = _this$props.containerStyle,\n          onPagePress = _this$props.onPagePress,\n          size = _this$props.size,\n          spacing = _this$props.spacing,\n          enlargeActive = _this$props.enlargeActive;\n      return _react.default.createElement(_view.default, {\n        style: [styles.container, containerStyle],\n        accessible: true,\n        accessibilityLabel: \"page control page \" + (this.props.currentPage + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, _lodash.default.map((0, _toConsumableArray2.default)(new Array(numOfPages)), function (item, index) {\n        return _react.default.createElement(_touchableOpacity.default, {\n          disabled: _lodash.default.isUndefined(onPagePress),\n          onPress: function onPress() {\n            return onPagePress && onPagePress(index);\n          },\n          key: index,\n          style: [styles.pageIndicator, {\n            marginRight: spacing / 2,\n            marginLeft: spacing / 2\n          }, getColorStyle(color, inactiveColor, index, currentPage), getSizeStyle(size, enlargeActive, index, currentPage)],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        });\n      }));\n    }\n  }]);\n  return PageControl;\n}(_commons.BaseComponent);\n\nexports.default = PageControl;\nPageControl.displayName = 'PageControl';\nPageControl.propTypes = {\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  numOfPages: _propTypes.default.number,\n  currentPage: _propTypes.default.number,\n  onPagePress: _propTypes.default.func,\n  color: _propTypes.default.string,\n  inactiveColor: _propTypes.default.string,\n  size: _propTypes.default.number,\n  enlargeActive: _propTypes.default.bool,\n  spacing: _propTypes.default.number\n};\nPageControl.defaultProps = {\n  size: 10,\n  spacing: 4,\n  enlargeActive: false\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  pageIndicator: {\n    backgroundColor: 'transparent',\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/pageControl/index.js"],"names":["getColorStyle","color","inactiveColor","index","currentPage","compColor","ThemeManager","primaryColor","borderColor","backgroundColor","getSizeStyle","size","enlargeActive","temp","width","height","borderRadius","PageControl","props","numOfPages","containerStyle","onPagePress","spacing","styles","container","_","map","Array","item","isUndefined","pageIndicator","marginRight","marginLeft","BaseComponent","displayName","propTypes","PropTypes","oneOfType","object","number","array","func","string","bool","defaultProps","StyleSheet","create","flexDirection","alignItems","justifyContent","borderWidth"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet} from 'react-native';\nimport {ThemeManager} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport TouchableOpacity from '../touchableOpacity';\nimport View from '../view';\n\nfunction getColorStyle(color, inactiveColor, index, currentPage) {\n  const compColor = color || ThemeManager.primaryColor;\n  return {\n    borderColor: index === currentPage ? compColor : inactiveColor || compColor,\n    backgroundColor: index === currentPage ? compColor : inactiveColor || 'transparent'\n  };\n}\n\nfunction getSizeStyle(size, enlargeActive, index, currentPage) {\n  const temp = enlargeActive ? (index === currentPage ? size + 2 : size) : size;\n  return {width: temp, height: temp, borderRadius: temp / 2};\n}\n\n/**\n * @description: Page indicator, typically used in paged scroll-views\n * @image: https://user-images.githubusercontent.com/33805983/34663655-76698110-f460-11e7-854b-243d27f66fec.png\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PageControlScreen.js\n */\nexport default class PageControl extends BaseComponent {\n  static displayName = 'PageControl';\n  static propTypes = {\n    /**\n     * Additional styles for the top container\n     */\n    containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Total number of pages\n     */\n    numOfPages: PropTypes.number,\n    /**\n     * Zero-based index of the current page\n     */\n    currentPage: PropTypes.number,\n    /**\n     * Action handler for clicking on a page indicator\n     */\n    onPagePress: PropTypes.func,\n    /**\n     * Color of the selected page dot and, if inactiveColor not passed, the border of the not selected pages\n     */\n    color: PropTypes.string,\n    /**\n     * Color of the unselected page dots and the border of the not selected pages\n     */\n    inactiveColor: PropTypes.string,\n    /**\n     * The size of the page indicator\n     */\n    size: PropTypes.number,\n    /**\n     * Whether to enlarge the active page indicator\n     */\n    enlargeActive: PropTypes.bool,\n    /**\n     * The space between the siblings page indicators\n     */\n    spacing: PropTypes.number\n  };\n\n  static defaultProps = {\n    size: 10,\n    spacing: 4,\n    enlargeActive: false\n  };\n\n  render() {\n    const {\n      numOfPages,\n      currentPage,\n      color,\n      inactiveColor,\n      containerStyle,\n      onPagePress,\n      size,\n      spacing,\n      enlargeActive\n    } = this.props;\n\n    return (\n      <View\n        style={[styles.container, containerStyle]}\n        accessible\n        accessibilityLabel={`page control page ${this.props.currentPage + 1}`}\n      >\n        {_.map([...new Array(numOfPages)], (item, index) => (\n          <TouchableOpacity\n            disabled={_.isUndefined(onPagePress)}\n            onPress={() => onPagePress && onPagePress(index)}\n            key={index}\n            style={[\n              styles.pageIndicator,\n              {marginRight: spacing / 2, marginLeft: spacing / 2},\n              getColorStyle(color, inactiveColor, index, currentPage),\n              getSizeStyle(size, enlargeActive, index, currentPage)\n            ]}\n          />\n        ))}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  pageIndicator: {\n    backgroundColor: 'transparent',\n    borderWidth: 1\n  }\n});\n"]},"metadata":{},"sourceType":"script"}