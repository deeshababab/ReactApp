{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = _interopRequireWildcard(require(\"react-native\"));\n\nvar _helpers = require(\"../../helpers\");\n\nvar _style = require(\"../../style\");\n\nvar _assets = _interopRequireDefault(require(\"../../assets\"));\n\nvar _commons = require(\"../../commons\");\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _touchableOpacity = _interopRequireDefault(require(\"../touchableOpacity\"));\n\nvar _inputs = require(\"../inputs\");\n\nvar _text = _interopRequireDefault(require(\"../text\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tagsInput\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar GUTTER_SPACING = 8;\n\nvar TagsInput = function (_BaseComponent) {\n  (0, _inherits2.default)(TagsInput, _BaseComponent);\n\n  var _super = _createSuper(TagsInput);\n\n  function TagsInput(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TagsInput);\n    _this = _super.call(this, props);\n    _this.addTag = _this.addTag.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onChangeText = _this.onChangeText.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderTagWrapper = _this.renderTagWrapper.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderTag = _this.renderTag.bind((0, _assertThisInitialized2.default)(_this));\n    _this.getLabel = _this.getLabel.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onKeyPress = _this.onKeyPress.bind((0, _assertThisInitialized2.default)(_this));\n    _this.markTagIndex = _this.markTagIndex.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      value: props.value,\n      tags: _lodash.default.cloneDeep(props.tags) || [],\n      tagIndexToRemove: undefined\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(TagsInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (_helpers.Constants.isAndroid) {\n        var textInputHandle = _reactNative.default.findNodeHandle(this.input);\n\n        if (textInputHandle && _reactNative.NativeModules.TextInputDelKeyHandler) {\n          _reactNative.NativeModules.TextInputDelKeyHandler.register(textInputHandle);\n\n          _reactNative.DeviceEventEmitter.addListener('onBackspacePress', this.onKeyPress);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (_helpers.Constants.isAndroid) {\n        _reactNative.DeviceEventEmitter.removeListener('onBackspacePress', this.onKeyPress);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.tags !== this.state.tags) {\n        this.setState({\n          tags: nextProps.tags\n        });\n      }\n    }\n  }, {\n    key: \"addTag\",\n    value: function addTag() {\n      var _this$getThemeProps = this.getThemeProps(),\n          onCreateTag = _this$getThemeProps.onCreateTag,\n          disableTagAdding = _this$getThemeProps.disableTagAdding;\n\n      var _this$state = this.state,\n          value = _this$state.value,\n          tags = _this$state.tags;\n\n      if (disableTagAdding) {\n        return;\n      }\n\n      if (_lodash.default.isNil(value) || _lodash.default.isEmpty(value.trim())) {\n        return;\n      }\n\n      var newTag = _lodash.default.isFunction(onCreateTag) ? onCreateTag(value) : value;\n      var newTags = [].concat((0, _toConsumableArray2.default)(tags), [newTag]);\n      this.setState({\n        value: '',\n        tags: newTags\n      });\n\n      _lodash.default.invoke(this.props, 'onChangeTags', newTags, TagsInput.onChangeTagsActions.ADDED, newTag);\n\n      this.clear();\n    }\n  }, {\n    key: \"removeMarkedTag\",\n    value: function removeMarkedTag() {\n      var _this$state2 = this.state,\n          tags = _this$state2.tags,\n          tagIndexToRemove = _this$state2.tagIndexToRemove;\n\n      if (!_lodash.default.isUndefined(tagIndexToRemove)) {\n        var removedTag = tags[tagIndexToRemove];\n        tags.splice(tagIndexToRemove, 1);\n        this.setState({\n          tags: tags,\n          tagIndexToRemove: undefined\n        });\n\n        _lodash.default.invoke(this.props, 'onChangeTags', tags, TagsInput.onChangeTagsActions.REMOVED, removedTag);\n      }\n    }\n  }, {\n    key: \"markTagIndex\",\n    value: function markTagIndex(tagIndex) {\n      this.setState({\n        tagIndexToRemove: tagIndex\n      });\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText(value) {\n      this.setState({\n        value: value,\n        tagIndexToRemove: undefined\n      });\n\n      _lodash.default.invoke(this.props, 'onChangeText', value);\n    }\n  }, {\n    key: \"onTagPress\",\n    value: function onTagPress(index) {\n      var onTagPress = this.props.onTagPress;\n      var tagIndexToRemove = this.state.tagIndexToRemove;\n\n      if (onTagPress) {\n        onTagPress(index, tagIndexToRemove);\n        return;\n      }\n\n      if (tagIndexToRemove === index) {\n        this.removeMarkedTag();\n      } else {\n        this.markTagIndex(index);\n      }\n    }\n  }, {\n    key: \"isLastTagMarked\",\n    value: function isLastTagMarked() {\n      var _this$state3 = this.state,\n          tags = _this$state3.tags,\n          tagIndexToRemove = _this$state3.tagIndexToRemove;\n\n      var tagsCount = _lodash.default.size(tags);\n\n      var isLastTagMarked = tagIndexToRemove === tagsCount - 1;\n      return isLastTagMarked;\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(event) {\n      _lodash.default.invoke(this.props, 'onKeyPress', event);\n\n      var _this$getThemeProps2 = this.getThemeProps(),\n          disableTagRemoval = _this$getThemeProps2.disableTagRemoval;\n\n      if (disableTagRemoval) {\n        return;\n      }\n\n      var _this$state4 = this.state,\n          value = _this$state4.value,\n          tags = _this$state4.tags,\n          tagIndexToRemove = _this$state4.tagIndexToRemove;\n\n      var tagsCount = _lodash.default.size(tags);\n\n      var keyCode = _lodash.default.get(event, 'nativeEvent.key');\n\n      var hasNoValue = _lodash.default.isEmpty(value);\n\n      var pressedBackspace = _helpers.Constants.isAndroid || keyCode === 'Backspace';\n      var hasTags = tagsCount > 0;\n\n      if (pressedBackspace) {\n        if (hasNoValue && hasTags && _lodash.default.isUndefined(tagIndexToRemove)) {\n          this.setState({\n            tagIndexToRemove: tagsCount - 1\n          });\n        } else if (!_lodash.default.isUndefined(tagIndexToRemove)) {\n          this.removeMarkedTag();\n        }\n      }\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(item) {\n      var getLabel = this.props.getLabel;\n\n      if (getLabel) {\n        return getLabel(item);\n      }\n\n      if (_lodash.default.isString(item)) {\n        return item;\n      }\n\n      return _lodash.default.get(item, 'label');\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(tag, shouldMarkTag) {\n      var typography = this.extractTypographyValue();\n      var label = this.getLabel(tag);\n      return _react.default.createElement(_view.default, {\n        row: true,\n        centerV: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 7\n        }\n      }, shouldMarkTag && _react.default.createElement(_reactNative.Image, {\n        style: styles.removeIcon,\n        source: _assets.default.icons.x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 27\n        }\n      }), _react.default.createElement(_text.default, {\n        style: [styles.tagLabel, typography],\n        accessibilityLabel: label + \" tag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, shouldMarkTag ? 'Remove' : label));\n    }\n  }, {\n    key: \"renderTag\",\n    value: function renderTag(tag, index) {\n      var _this$getThemeProps3 = this.getThemeProps(),\n          tagStyle = _this$getThemeProps3.tagStyle,\n          renderTag = _this$getThemeProps3.renderTag;\n\n      var tagIndexToRemove = this.state.tagIndexToRemove;\n      var shouldMarkTag = tagIndexToRemove === index;\n\n      if (_lodash.default.isFunction(renderTag)) {\n        return renderTag(tag, index, shouldMarkTag, this.getLabel(tag));\n      }\n\n      return _react.default.createElement(_view.default, {\n        key: index,\n        style: [styles.tag, tagStyle, shouldMarkTag && styles.tagMarked],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 7\n        }\n      }, this.renderLabel(tag, shouldMarkTag));\n    }\n  }, {\n    key: \"renderTagWrapper\",\n    value: function renderTagWrapper(tag, index) {\n      var _this2 = this;\n\n      return _react.default.createElement(_touchableOpacity.default, {\n        key: index,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return _this2.onTagPress(index);\n        },\n        accessibilityHint: !this.props.disableTagRemoval ? 'tap twice for remove tag mode' : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 7\n        }\n      }, this.renderTag(tag, index));\n    }\n  }, {\n    key: \"renderTextInput\",\n    value: function renderTextInput() {\n      var _this3 = this;\n\n      var _this$getThemeProps4 = this.getThemeProps(),\n          inputStyle = _this$getThemeProps4.inputStyle,\n          selectionColor = _this$getThemeProps4.selectionColor,\n          others = (0, _objectWithoutProperties2.default)(_this$getThemeProps4, [\"inputStyle\", \"selectionColor\"]);\n\n      var value = this.state.value;\n      var isLastTagMarked = this.isLastTagMarked();\n      return _react.default.createElement(_view.default, {\n        style: styles.inputWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_inputs.TextField, (0, _extends2.default)({\n        ref: function ref(r) {\n          return _this3.input = r;\n        },\n        text80: true,\n        blurOnSubmit: false\n      }, others, {\n        value: value,\n        onSubmitEditing: this.addTag,\n        onChangeText: this.onChangeText,\n        onKeyPress: this.onKeyPress,\n        enableErrors: false,\n        hideUnderline: true,\n        selectionColor: isLastTagMarked ? 'transparent' : selectionColor,\n        style: inputStyle,\n        containerStyle: {\n          flexGrow: 0\n        },\n        collapsable: false,\n        accessibilityHint: !this.props.disableTagRemoval ? 'press keyboard delete button to remove last tag' : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          disableTagRemoval = _this$getThemeProps5.disableTagRemoval,\n          containerStyle = _this$getThemeProps5.containerStyle,\n          hideUnderline = _this$getThemeProps5.hideUnderline;\n\n      var tagRenderFn = disableTagRemoval ? this.renderTag : this.renderTagWrapper;\n      var tags = this.state.tags;\n      return _react.default.createElement(_view.default, {\n        style: [!hideUnderline && styles.withUnderline, containerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_view.default, {\n        style: styles.tagsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 9\n        }\n      }, _lodash.default.map(tags, tagRenderFn), this.renderTextInput()));\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n    }\n  }]);\n  return TagsInput;\n}(_commons.BaseComponent);\n\nexports.default = TagsInput;\nTagsInput.displayName = 'TagsInput';\nTagsInput.propTypes = {\n  tags: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string])),\n  getLabel: _propTypes.default.func,\n  renderTag: _propTypes.default.func,\n  onChangeTags: _propTypes.default.func,\n  onCreateTag: _propTypes.default.func,\n  onTagPress: _propTypes.default.func,\n  disableTagRemoval: _propTypes.default.bool,\n  disableTagAdding: _propTypes.default.bool,\n  containerStyle: _reactNative.ViewPropTypes.style,\n  tagStyle: _reactNative.ViewPropTypes.style,\n  inputStyle: _inputs.TextField.propTypes.style,\n  hideUnderline: _propTypes.default.bool\n};\nTagsInput.onChangeTagsActions = {\n  ADDED: 'added',\n  REMOVED: 'removed'\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  withUnderline: {\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderColor: _style.ThemeManager.dividerColor\n  },\n  tagsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  inputWrapper: {\n    flexGrow: 1,\n    minWidth: 120,\n    justifyContent: 'center'\n  },\n  tag: {\n    backgroundColor: _style.Colors.blue30,\n    borderRadius: _style.BorderRadiuses.br100,\n    paddingVertical: 4.5,\n    paddingHorizontal: 12,\n    marginRight: GUTTER_SPACING,\n    marginVertical: GUTTER_SPACING / 2\n  },\n  tagMarked: {\n    backgroundColor: _style.Colors.dark10\n  },\n  removeIcon: {\n    tintColor: _style.Colors.white,\n    width: 10,\n    height: 10,\n    marginRight: 6\n  },\n  tagLabel: _objectSpread(_objectSpread({}, _style.Typography.text80), {}, {\n    color: _style.Colors.white\n  })\n});","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/tagsInput/index.js"],"names":["GUTTER_SPACING","TagsInput","props","addTag","bind","onChangeText","renderTagWrapper","renderTag","getLabel","onKeyPress","markTagIndex","state","value","tags","_","cloneDeep","tagIndexToRemove","undefined","Constants","isAndroid","textInputHandle","ReactNative","findNodeHandle","input","NativeModules","TextInputDelKeyHandler","register","DeviceEventEmitter","addListener","removeListener","nextProps","setState","getThemeProps","onCreateTag","disableTagAdding","isNil","isEmpty","trim","newTag","isFunction","newTags","invoke","onChangeTagsActions","ADDED","clear","isUndefined","removedTag","splice","REMOVED","tagIndex","index","onTagPress","removeMarkedTag","tagsCount","size","isLastTagMarked","event","disableTagRemoval","keyCode","get","hasNoValue","pressedBackspace","hasTags","item","isString","tag","shouldMarkTag","typography","extractTypographyValue","label","styles","removeIcon","Assets","icons","x","tagLabel","tagStyle","tagMarked","renderLabel","inputStyle","selectionColor","others","inputWrapper","r","flexGrow","containerStyle","hideUnderline","tagRenderFn","withUnderline","tagsList","map","renderTextInput","blur","focus","BaseComponent","displayName","propTypes","PropTypes","arrayOf","oneOfType","object","string","func","onChangeTags","bool","ViewPropTypes","style","TextField","StyleSheet","create","borderBottomWidth","hairlineWidth","borderColor","ThemeManager","dividerColor","flexDirection","flexWrap","minWidth","justifyContent","backgroundColor","Colors","blue30","borderRadius","BorderRadiuses","br100","paddingVertical","paddingHorizontal","marginRight","marginVertical","dark10","tintColor","white","width","height","Typography","text80","color"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactNative, {NativeModules, StyleSheet, ViewPropTypes, Image, DeviceEventEmitter} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {Colors, BorderRadiuses, ThemeManager, Typography} from '../../style';\nimport Assets from '../../assets';\nimport {BaseComponent} from '../../commons';\nimport View from '../view';\nimport TouchableOpacity from '../touchableOpacity';\nimport {TextField} from '../inputs';\nimport Text from '../text';\n\n// TODO: support updating tags externally\n// TODO: support char array as tag creators (like comma)\n// TODO: add notes to Docs about the Android fix for onKeyPress\n\nconst GUTTER_SPACING = 8;\n\n/**\n * @description: Tags input component (chips)\n * @modifiers: Typography\n * @gif: https://camo.githubusercontent.com/9c2671024f60566b980638ea01b517f6fb509d0b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f336f45686e374a79685431566658746963452f67697068792e676966\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\n * @extends: TextField\n * @extendsLink: https://github.com/wix/react-native-ui-lib/blob/master/src/components/inputs/TextField.js\n */\nexport default class TagsInput extends BaseComponent {\n  static displayName = 'TagsInput';\n\n  static propTypes = {\n    /**\n     * list of tags. can be string or custom object when implementing getLabel\n     */\n    tags: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.string])),\n    /**\n     * callback for extracting the label out of the tag item\n     */\n    getLabel: PropTypes.func,\n    /**\n     * callback for custom rendering tag item\n     */\n    renderTag: PropTypes.func,\n    /**\n     * callback for onChangeTags event\n     */\n    onChangeTags: PropTypes.func,\n    /**\n     * callback for creating new tag out of input value (good for composing tag object)\n     */\n    onCreateTag: PropTypes.func,\n    /**\n     * callback for when pressing a tag in the following format (tagIndex, markedTagIndex) => {...}\n     */\n    onTagPress: PropTypes.func,\n    /**\n     * if true, tags *removal* Ux won't be available\n     */\n    disableTagRemoval: PropTypes.bool,\n    /**\n     * if true, tags *adding* Ux (i.e. by 'submitting' the input text) won't be available\n     */\n    disableTagAdding: PropTypes.bool,\n    /**\n     * custom styling for the component container\n     */\n    containerStyle: ViewPropTypes.style,\n    /**\n     * custom styling for the tag item\n     */\n    tagStyle: ViewPropTypes.style,\n    /**\n     * custom styling for the text input\n     */\n    inputStyle: TextField.propTypes.style,\n    /**\n     * should hide input underline\n     */\n    hideUnderline: PropTypes.bool\n  };\n\n  static onChangeTagsActions = {\n    ADDED: 'added',\n    REMOVED: 'removed'\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.addTag = this.addTag.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.renderTagWrapper = this.renderTagWrapper.bind(this);\n    this.renderTag = this.renderTag.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.markTagIndex = this.markTagIndex.bind(this);\n\n    this.state = {\n      value: props.value,\n      tags: _.cloneDeep(props.tags) || [],\n      tagIndexToRemove: undefined\n    };\n  }\n\n  componentDidMount() {\n    if (Constants.isAndroid) {\n      const textInputHandle = ReactNative.findNodeHandle(this.input);\n      if (textInputHandle && NativeModules.TextInputDelKeyHandler) {\n        NativeModules.TextInputDelKeyHandler.register(textInputHandle);\n        DeviceEventEmitter.addListener('onBackspacePress', this.onKeyPress);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (Constants.isAndroid) {\n      DeviceEventEmitter.removeListener('onBackspacePress', this.onKeyPress);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.tags !== this.state.tags) {\n      this.setState({\n        tags: nextProps.tags\n      });\n    }\n  }\n\n  addTag() {\n    const {onCreateTag, disableTagAdding} = this.getThemeProps();\n    const {value, tags} = this.state;\n\n    if (disableTagAdding) {\n      return;\n    }\n    if (_.isNil(value) || _.isEmpty(value.trim())) {\n      return;\n    }\n\n    const newTag = _.isFunction(onCreateTag) ? onCreateTag(value) : value;\n    const newTags = [...tags, newTag];\n\n    this.setState({\n      value: '',\n      tags: newTags\n    });\n    _.invoke(this.props, 'onChangeTags', newTags, TagsInput.onChangeTagsActions.ADDED, newTag);\n    this.clear();\n  }\n\n  removeMarkedTag() {\n    const {tags, tagIndexToRemove} = this.state;\n\n    if (!_.isUndefined(tagIndexToRemove)) {\n      const removedTag = tags[tagIndexToRemove];\n\n      tags.splice(tagIndexToRemove, 1);\n      this.setState({\n        tags,\n        tagIndexToRemove: undefined\n      });\n      _.invoke(this.props, 'onChangeTags', tags, TagsInput.onChangeTagsActions.REMOVED, removedTag);\n    }\n  }\n\n  markTagIndex(tagIndex) {\n    this.setState({tagIndexToRemove: tagIndex});\n  }\n\n  onChangeText(value) {\n    this.setState({value, tagIndexToRemove: undefined});\n    _.invoke(this.props, 'onChangeText', value);\n  }\n\n  onTagPress(index) {\n    const {onTagPress} = this.props;\n    const {tagIndexToRemove} = this.state;\n\n    // custom press handler\n    if (onTagPress) {\n      onTagPress(index, tagIndexToRemove);\n      return;\n    }\n\n    // default press handler\n    if (tagIndexToRemove === index) {\n      this.removeMarkedTag();\n    } else {\n      this.markTagIndex(index);\n    }\n  }\n\n  isLastTagMarked() {\n    const {tags, tagIndexToRemove} = this.state;\n    const tagsCount = _.size(tags);\n    const isLastTagMarked = tagIndexToRemove === tagsCount - 1;\n\n    return isLastTagMarked;\n  }\n\n  onKeyPress(event) {\n    _.invoke(this.props, 'onKeyPress', event);\n\n    const {disableTagRemoval} = this.getThemeProps();\n    if (disableTagRemoval) {\n      return;\n    }\n\n    const {value, tags, tagIndexToRemove} = this.state;\n    const tagsCount = _.size(tags);\n    const keyCode = _.get(event, 'nativeEvent.key');\n    const hasNoValue = _.isEmpty(value);\n    const pressedBackspace = Constants.isAndroid || keyCode === 'Backspace';\n    const hasTags = tagsCount > 0;\n\n    if (pressedBackspace) {\n      if (hasNoValue && hasTags && _.isUndefined(tagIndexToRemove)) {\n        this.setState({\n          tagIndexToRemove: tagsCount - 1\n        });\n      } else if (!_.isUndefined(tagIndexToRemove)) {\n        this.removeMarkedTag();\n      }\n    }\n  }\n\n  getLabel(item) {\n    const {getLabel} = this.props;\n\n    if (getLabel) {\n      return getLabel(item);\n    }\n    if (_.isString(item)) {\n      return item;\n    }\n    return _.get(item, 'label');\n  }\n\n  renderLabel(tag, shouldMarkTag) {\n    const typography = this.extractTypographyValue();\n    const label = this.getLabel(tag);\n\n    return (\n      <View row centerV>\n        {shouldMarkTag && <Image style={styles.removeIcon} source={Assets.icons.x}/>}\n        <Text style={[styles.tagLabel, typography]} accessibilityLabel={`${label} tag`}>\n          {shouldMarkTag ? 'Remove' : label}\n        </Text>\n      </View>\n    );\n  }\n\n  renderTag(tag, index) {\n    const {tagStyle, renderTag} = this.getThemeProps();\n    const {tagIndexToRemove} = this.state;\n    const shouldMarkTag = tagIndexToRemove === index;\n\n    if (_.isFunction(renderTag)) {\n      return renderTag(tag, index, shouldMarkTag, this.getLabel(tag));\n    }\n\n    return (\n      <View key={index} style={[styles.tag, tagStyle, shouldMarkTag && styles.tagMarked]}>\n        {this.renderLabel(tag, shouldMarkTag)}\n      </View>\n    );\n  }\n\n  renderTagWrapper(tag, index) {\n    return (\n      <TouchableOpacity\n        key={index}\n        activeOpacity={1}\n        onPress={() => this.onTagPress(index)}\n        accessibilityHint={!this.props.disableTagRemoval ? 'tap twice for remove tag mode' : undefined}\n      >\n        {this.renderTag(tag, index)}\n      </TouchableOpacity>\n    );\n  }\n\n  renderTextInput() {\n    const {inputStyle, selectionColor, ...others} = this.getThemeProps();\n    const {value} = this.state;\n    const isLastTagMarked = this.isLastTagMarked();\n\n    return (\n      <View style={styles.inputWrapper}>\n        <TextField\n          ref={r => (this.input = r)}\n          text80\n          blurOnSubmit={false}\n          {...others}\n          value={value}\n          onSubmitEditing={this.addTag}\n          onChangeText={this.onChangeText}\n          onKeyPress={this.onKeyPress}\n          enableErrors={false}\n          hideUnderline\n          selectionColor={isLastTagMarked ? 'transparent' : selectionColor}\n          style={inputStyle}\n          containerStyle={{flexGrow: 0}}\n          collapsable={false}\n          accessibilityHint={\n            !this.props.disableTagRemoval ? 'press keyboard delete button to remove last tag' : undefined\n          }\n        />\n      </View>\n    );\n  }\n\n  render() {\n    const {disableTagRemoval, containerStyle, hideUnderline} = this.getThemeProps();\n    const tagRenderFn = disableTagRemoval ? this.renderTag : this.renderTagWrapper;\n    const {tags} = this.state;\n\n    return (\n      <View style={[!hideUnderline && styles.withUnderline, containerStyle]}>\n        <View style={styles.tagsList}>\n          {_.map(tags, tagRenderFn)}\n          {this.renderTextInput()}\n        </View>\n      </View>\n    );\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  clear() {\n    this.input.clear();\n  }\n}\n\nconst styles = StyleSheet.create({\n  withUnderline: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: ThemeManager.dividerColor\n  },\n  tagsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  inputWrapper: {\n    flexGrow: 1,\n    minWidth: 120,\n    justifyContent: 'center'\n  },\n  tag: {\n    backgroundColor: Colors.blue30,\n    borderRadius: BorderRadiuses.br100,\n    paddingVertical: 4.5,\n    paddingHorizontal: 12,\n    marginRight: GUTTER_SPACING,\n    marginVertical: GUTTER_SPACING / 2\n  },\n  tagMarked: {\n    backgroundColor: Colors.dark10\n  },\n  removeIcon: {\n    tintColor: Colors.white,\n    width: 10,\n    height: 10,\n    marginRight: 6\n  },\n  tagLabel: {\n    ...Typography.text80,\n    color: Colors.white\n  }\n});\n"]},"metadata":{},"sourceType":"script"}