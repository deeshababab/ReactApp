{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SWATCH_SIZE = exports.SWATCH_MARGIN = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeUiLib = require(\"react-native-ui-lib\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\colorPicker\\\\ColorSwatch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar transparentImage = require('./assets/transparentSwatch/TransparentSwatch.png');\n\nvar DEFAULT_SIZE = 36;\nvar SWATCH_MARGIN = 12;\nexports.SWATCH_MARGIN = SWATCH_MARGIN;\nvar SWATCH_SIZE = DEFAULT_SIZE;\nexports.SWATCH_SIZE = SWATCH_SIZE;\n\nvar ColorSwatch = function (_PureBaseComponent) {\n  (0, _inherits2.default)(ColorSwatch, _PureBaseComponent);\n\n  var _super = _createSuper(ColorSwatch);\n\n  function ColorSwatch(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ColorSwatch);\n    _this = _super.call(this, props);\n\n    _this.onPress = function () {\n      var _this$props = _this.props,\n          color = _this$props.color,\n          value = _this$props.value,\n          index = _this$props.index;\n\n      var tintColor = _this.getTintColor(value);\n\n      _lodash.default.invoke(_this.props, 'onPress', value || color, {\n        tintColor: tintColor,\n        index: index\n      });\n    };\n\n    _this.onLayout = function (event) {\n      _this.layout = event.nativeEvent.layout;\n    };\n\n    _this.renderSwatch = function () {\n      var _this$getThemeProps = _this.getThemeProps(),\n          animated = _this$getThemeProps.animated;\n\n      var _this$state = _this.state,\n          animatedOpacity = _this$state.animatedOpacity,\n          animatedScale = _this$state.animatedScale;\n\n      if (animated) {\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: {\n            opacity: animatedOpacity,\n            transform: [{\n              scaleX: animatedScale\n            }, {\n              scaleY: animatedScale\n            }]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 9\n          }\n        }, _this.renderContent());\n      }\n\n      return _this.renderContent();\n    };\n\n    _this.state = {\n      isSelected: new _reactNative.Animated.Value(0),\n      animatedOpacity: new _reactNative.Animated.Value(0.3),\n      animatedScale: new _reactNative.Animated.Value(0.5)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ColorSwatch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animateCheckmark(this.props.selected);\n      this.animateSwatch(1);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.selected !== this.props.selected) {\n        this.animateCheckmark(this.props.selected);\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps());\n    }\n  }, {\n    key: \"animateSwatch\",\n    value: function animateSwatch(newValue) {\n      var _this$state2 = this.state,\n          animatedOpacity = _this$state2.animatedOpacity,\n          animatedScale = _this$state2.animatedScale;\n\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(animatedOpacity, {\n        duration: 250,\n        toValue: Number(newValue),\n        useNativeDriver: true\n      }), _reactNative.Animated.spring(animatedScale, {\n        toValue: Number(newValue),\n        easing: _reactNative.Easing.bezier(0, 0, 0.58, 1),\n        bounciness: 18,\n        speed: 12,\n        delay: 170,\n        useNativeDriver: true\n      })]).start();\n    }\n  }, {\n    key: \"animateCheckmark\",\n    value: function animateCheckmark(newValue) {\n      var isSelected = this.state.isSelected;\n\n      _reactNative.Animated.timing(isSelected, {\n        duration: 150,\n        easing: _reactNative.Easing.bezier(0.165, 0.84, 0.44, 1.0),\n        toValue: Number(newValue),\n        delay: 50,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"getTintColor\",\n    value: function getTintColor(color) {\n      if (_reactNativeUiLib.Colors.isTransparent(color)) {\n        return _reactNativeUiLib.Colors.black;\n      }\n\n      return _reactNativeUiLib.Colors.isDark(color) ? _reactNativeUiLib.Colors.white : _reactNativeUiLib.Colors.black;\n    }\n  }, {\n    key: \"getLayout\",\n    value: function getLayout() {\n      return this.layout;\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          style = _this$getThemeProps2.style,\n          color = _this$getThemeProps2.color,\n          onPress = _this$getThemeProps2.onPress,\n          onValueChange = _this$getThemeProps2.onValueChange,\n          others = (0, _objectWithoutProperties2.default)(_this$getThemeProps2, [\"style\", \"color\", \"onPress\", \"onValueChange\"]);\n\n      var isSelected = this.state.isSelected;\n      var Container = onPress || onValueChange ? _reactNativeUiLib.TouchableOpacity : _reactNativeUiLib.View;\n      var tintColor = this.getTintColor(color);\n      return _react.default.createElement(Container, (0, _extends2.default)({}, others, {\n        center: true,\n        activeOpacity: 1,\n        throttleTime: 0,\n        hitSlop: {\n          top: 10,\n          bottom: 10,\n          left: 10,\n          right: 10\n        },\n        onPress: this.onPress,\n        style: [this.styles.container, style],\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }), _reactNativeUiLib.Colors.isTransparent(color) && _react.default.createElement(_reactNativeUiLib.Image, {\n        source: transparentImage,\n        style: this.styles.transparentImage,\n        resizeMode: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.Animated.Image, {\n        source: _reactNativeUiLib.Assets.icons.check,\n        style: {\n          tintColor: tintColor,\n          opacity: isSelected,\n          transform: [{\n            scaleX: isSelected\n          }, {\n            scaleY: isSelected\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderSwatch();\n    }\n  }]);\n  return ColorSwatch;\n}(_reactNativeUiLib.PureBaseComponent);\n\nexports.default = ColorSwatch;\nColorSwatch.displayName = 'ColorSwatch';\nColorSwatch.propTypes = {\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  color: _propTypes.default.string,\n  selected: _propTypes.default.bool,\n  animated: _propTypes.default.bool,\n  onPress: _propTypes.default.func\n};\n\nfunction createStyles(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? _reactNativeUiLib.Colors.dark30 : _ref$color;\n  return _reactNative.StyleSheet.create({\n    container: {\n      backgroundColor: color,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      borderRadius: DEFAULT_SIZE / 2,\n      margin: SWATCH_MARGIN,\n      borderWidth: color === 'transparent' ? undefined : 1,\n      borderColor: _reactNativeUiLib.Colors.rgba(_reactNativeUiLib.Colors.dark30, 0.2)\n    },\n    transparentImage: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject)\n  });\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/colorPicker/ColorSwatch.js"],"names":["transparentImage","require","DEFAULT_SIZE","SWATCH_MARGIN","SWATCH_SIZE","ColorSwatch","props","onPress","color","value","index","tintColor","getTintColor","_","invoke","onLayout","event","layout","nativeEvent","renderSwatch","getThemeProps","animated","state","animatedOpacity","animatedScale","opacity","transform","scaleX","scaleY","renderContent","isSelected","Animated","Value","animateCheckmark","selected","animateSwatch","prevProps","styles","createStyles","newValue","parallel","timing","duration","toValue","Number","useNativeDriver","spring","easing","Easing","bezier","bounciness","speed","delay","start","Colors","isTransparent","black","isDark","white","style","onValueChange","others","Container","TouchableOpacity","View","top","bottom","left","right","container","Assets","icons","check","PureBaseComponent","displayName","propTypes","PropTypes","oneOfType","string","bool","func","dark30","StyleSheet","create","backgroundColor","width","height","borderRadius","margin","borderWidth","undefined","borderColor","rgba","absoluteFillObject"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, Animated, Easing} from 'react-native';\nimport {Assets, Colors, PureBaseComponent, View, TouchableOpacity, Image} from 'react-native-ui-lib';\n\n\nconst transparentImage = require('./assets/transparentSwatch/TransparentSwatch.png');\nconst DEFAULT_SIZE = 36;\nexport const SWATCH_MARGIN = 12;\nexport const SWATCH_SIZE = DEFAULT_SIZE;\n\n/**\n * @description: A color swatch component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.js\n * @extends: Animated.View\n * @extendsLink: https://facebook.github.io/react-native/docs/animated\n */\nexport default class ColorSwatch extends PureBaseComponent {\n  static displayName = 'ColorSwatch';\n  \n  static propTypes = {\n    /**\n     * The identifier value of the ColorSwatch in a ColorSwatch palette. \n     * Must be different than other ColorSwatches in the same group\n     */\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    /**\n     * The color of the ColorSwatch\n     */\n    color: PropTypes.string,\n    /**\n     * Is the initial state is selected\n     */\n    selected: PropTypes.bool,\n    /**\n     * Is first render should be animated\n     */\n    animated: PropTypes.bool,\n    /**\n     * onPress callback\n     */\n    onPress: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isSelected: new Animated.Value(0),\n      animatedOpacity: new Animated.Value(0.3),\n      animatedScale: new Animated.Value(0.5)\n    };\n  }\n\n  componentDidMount() {\n    this.animateCheckmark(this.props.selected);\n    this.animateSwatch(1);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected !== this.props.selected) {\n      this.animateCheckmark(this.props.selected);\n    }\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps());\n  }\n\n  animateSwatch(newValue) {\n    const {animatedOpacity, animatedScale} = this.state;\n\n    Animated.parallel([\n      Animated.timing(animatedOpacity, {\n        duration: 250,\n        toValue: Number(newValue),\n        useNativeDriver: true\n      }),\n      Animated.spring(animatedScale, {\n        toValue: Number(newValue),\n        easing: Easing.bezier(0, 0, 0.58, 1), // => easeOut\n        bounciness: 18,\n        speed: 12,\n        delay: 170,\n        useNativeDriver: true\n      })\n    ]).start();\n  }\n\n  animateCheckmark(newValue) {\n    const {isSelected} = this.state;\n\n    Animated.timing(isSelected, {\n      duration: 150,\n      easing: Easing.bezier(0.165, 0.84, 0.44, 1.0), // => easeOutQuart\n      toValue: Number(newValue),\n      delay: 50,\n      useNativeDriver: true\n    }).start();\n  }\n\n  onPress = () => {\n    const {color, value, index} = this.props;\n    const tintColor = this.getTintColor(value);\n    _.invoke(this.props, 'onPress', value || color, {tintColor, index});\n  };\n\n  getTintColor(color) {\n    if (Colors.isTransparent(color)) {\n      return Colors.black;\n    }\n    return Colors.isDark(color) ? Colors.white : Colors.black;\n  }\n\n  getLayout() {\n    return this.layout;\n  }\n\n  onLayout = event => {\n    this.layout = event.nativeEvent.layout;\n  };\n\n  renderContent() {\n    const {style, color, onPress, onValueChange, ...others} = this.getThemeProps();\n    const {isSelected} = this.state;\n    const Container = onPress || onValueChange ? TouchableOpacity : View;\n    const tintColor = this.getTintColor(color);\n\n    return (\n      <Container\n        {...others}\n        center\n        activeOpacity={1}\n        throttleTime={0}\n        hitSlop={{top: 10, bottom: 10, left: 10, right: 10}}\n        onPress={this.onPress}\n        style={[this.styles.container, style]}\n        onLayout={this.onLayout}\n      >\n        {Colors.isTransparent(color) && (\n          <Image source={transparentImage} style={this.styles.transparentImage} resizeMode={'center'}/>\n        )}\n        <Animated.Image\n          source={Assets.icons.check}\n          style={{\n            tintColor,\n            opacity: isSelected,\n            transform: [{scaleX: isSelected}, {scaleY: isSelected}]\n          }}\n        />\n      </Container>\n    );\n  }\n\n  renderSwatch = () => {\n    const {animated} = this.getThemeProps();\n    const {animatedOpacity, animatedScale} = this.state;\n\n    if (animated) {\n      return (\n        <Animated.View\n          style={{\n            opacity: animatedOpacity,\n            transform: [{scaleX: animatedScale}, {scaleY: animatedScale}]\n          }}\n        >\n          {this.renderContent()}\n        </Animated.View>\n      );\n    }\n    return this.renderContent();\n  };\n\n  render() {\n    return this.renderSwatch();\n  }\n}\n\nfunction createStyles({color = Colors.dark30}) {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: color,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      borderRadius: DEFAULT_SIZE / 2,\n      margin: SWATCH_MARGIN,\n      borderWidth: color === 'transparent' ? undefined : 1,\n      borderColor: Colors.rgba(Colors.dark30, 0.2)\n    },\n    transparentImage: {\n      ...StyleSheet.absoluteFillObject\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}