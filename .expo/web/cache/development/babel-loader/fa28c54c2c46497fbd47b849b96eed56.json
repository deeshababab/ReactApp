{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractComponentInfo = extractComponentInfo;\nexports.generateSnippet = generateSnippet;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar TAB = '    ';\nvar LINE_BREAK = '\\n';\n\nfunction extractComponentInfo(instance) {\n  var componentName = instance.constructor.displayName;\n  var defaultProps = instance.constructor.defaultProps || {};\n  var props = instance.props || {};\n  return {\n    componentName: componentName,\n    defaultProps: defaultProps,\n    props: props\n  };\n}\n\nfunction generateSnippet(_ref) {\n  var componentName = _ref.componentName,\n      defaultProps = _ref.defaultProps,\n      props = _ref.props;\n  var snippet = \"<\" + componentName;\n\n  _lodash.default.forEach(props, function (value, key) {\n    if (key === 'children') {\n      return;\n    }\n\n    var formattedValue = \"{\" + value + \"}\";\n\n    if (_lodash.default.isObject(value)) {\n      formattedValue = \"{\" + JSON.stringify(value) + \"}\";\n    } else if (_lodash.default.isString(value)) {\n      formattedValue = \"\\\"\" + value + \"\\\"\";\n    } else if (_lodash.default.isBoolean(value) && value === true) {\n      formattedValue = '';\n    }\n\n    var hasEmptyValue = _lodash.default.isUndefined(value) || _lodash.default.isObject(value) && _lodash.default.isEmpty(value);\n\n    var hasDefaultValue = value == defaultProps[key];\n\n    if (!hasEmptyValue && !hasDefaultValue) {\n      snippet += \"\" + LINE_BREAK + TAB + key;\n\n      if (formattedValue) {\n        snippet += \"=\" + formattedValue;\n      }\n    }\n  });\n\n  if (props.children) {\n    var childrenSnippets = _react.default.Children.map(props.children, function (child) {\n      if (_lodash.default.get(child, 'type.displayName')) {\n        var childSnippet = TAB + generateSnippet({\n          componentName: child.type.displayName,\n          props: child.props || {},\n          defaultProps: child.type.defaultProps || {}\n        });\n        return childSnippet;\n      }\n\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n\n    snippet += \">\" + LINE_BREAK + childrenSnippets.join(LINE_BREAK) + LINE_BREAK + \"</\" + componentName + \">\";\n  } else {\n    snippet += '/>';\n  }\n\n  return snippet;\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/helpers/DocsGenerator.js"],"names":["TAB","LINE_BREAK","extractComponentInfo","instance","componentName","constructor","displayName","defaultProps","props","generateSnippet","snippet","_","forEach","value","key","formattedValue","isObject","JSON","stringify","isString","isBoolean","hasEmptyValue","isUndefined","isEmpty","hasDefaultValue","children","childrenSnippets","React","Children","map","child","get","childSnippet","type","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nconst TAB = '    ';\nconst LINE_BREAK = '\\n';\n\nexport function extractComponentInfo(instance) {\n  const componentName = instance.constructor.displayName;\n  const defaultProps = instance.constructor.defaultProps || {};\n  const props = instance.props || {};\n  return {componentName, defaultProps, props};\n}\n\nexport function generateSnippet({componentName, defaultProps, props}) {\n  let snippet = `<${componentName}`;\n\n  _.forEach(props, (value, key) => {\n    if (key === 'children') {\n      return;\n    }\n    let formattedValue = `{${value}}`;\n    if (_.isObject(value)) {\n      formattedValue = `{${JSON.stringify(value)}}`;\n    } else if (_.isString(value)) {\n      formattedValue = `\"${value}\"`;\n    } else if (_.isBoolean(value) && value === true) {\n      formattedValue = '';\n    }\n\n    const hasEmptyValue = _.isUndefined(value) || (_.isObject(value) && _.isEmpty(value));\n    const hasDefaultValue = value == defaultProps[key]; // eslint-disable-line\n    if (!hasEmptyValue && !hasDefaultValue) {\n      snippet += `${LINE_BREAK}${TAB}${key}`;\n      if (formattedValue) {\n        snippet += `=${formattedValue}`;\n      }\n    }\n  });\n\n  if (props.children) {\n    const childrenSnippets = React.Children.map(props.children, child => {\n      if (_.get(child, 'type.displayName')) {\n        const childSnippet =\n          TAB +\n          generateSnippet({\n            componentName: child.type.displayName,\n            props: child.props || {},\n            defaultProps: child.type.defaultProps || {}\n          });\n        return childSnippet;\n      }\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    snippet += `>${LINE_BREAK}${childrenSnippets.join(LINE_BREAK)}${LINE_BREAK}</${componentName}>`;\n  } else {\n    snippet += '/>';\n  }\n  return snippet;\n}\n"]},"metadata":{},"sourceType":"script"}