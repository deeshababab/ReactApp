{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _commons = require(\"../../commons\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\text\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Text = function (_PureBaseComponent) {\n  (0, _inherits2.default)(Text, _PureBaseComponent);\n\n  var _super = _createSuper(Text);\n\n  function Text() {\n    (0, _classCallCheck2.default)(this, Text);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Text, [{\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.props);\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var color = this.getThemeProps().color || this.extractColorValue();\n      var typography = this.extractTypographyValue();\n\n      var _this$getThemeProps = this.getThemeProps(),\n          style = _this$getThemeProps.style,\n          center = _this$getThemeProps.center,\n          uppercase = _this$getThemeProps.uppercase,\n          others = (0, _objectWithoutProperties2.default)(_this$getThemeProps, [\"style\", \"center\", \"uppercase\"]);\n\n      var margins = this.state.margins;\n      var textStyle = [this.styles.container, typography, color && {\n        color: color\n      }, margins, center && {\n        textAlign: 'center'\n      }, style];\n      var children = uppercase ? this.transformToUppercase(this.props.children) : this.props.children;\n      return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({}, others, {\n        style: textStyle,\n        ref: this.setRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }), children);\n    }\n  }, {\n    key: \"transformToUppercase\",\n    value: function transformToUppercase(items) {\n      if (typeof items === 'string') {\n        return items.toUpperCase();\n      }\n\n      return items;\n    }\n  }]);\n  return Text;\n}(_commons.PureBaseComponent);\n\nexports.default = Text;\nText.displayName = 'Text';\nText.propTypes = _objectSpread(_objectSpread({}, _reactNative.Text.propTypes), {}, {\n  color: _propTypes.default.string,\n  center: _propTypes.default.bool,\n  uppercase: _propTypes.default.bool\n});\n\nfunction createStyles() {\n  return _reactNative.StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      textAlign: 'left'\n    }\n  });\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/text/index.js"],"names":["Text","styles","createStyles","props","nativeProps","_root","setNativeProps","color","getThemeProps","extractColorValue","typography","extractTypographyValue","style","center","uppercase","others","margins","state","textStyle","container","textAlign","children","transformToUppercase","setRef","items","toUpperCase","PureBaseComponent","displayName","propTypes","RNText","PropTypes","string","bool","StyleSheet","create","backgroundColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;IAQqBA,I;;;;;;;;;;;;qCAuBF;AACf,WAAKC,MAAL,GAAcC,YAAY,CAAC,KAAKC,KAAN,CAA1B;AACD;;;mCAEcC,W,EAAa;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;6BAEQ;AACP,UAAMG,KAAK,GAAG,KAAKC,aAAL,GAAqBD,KAArB,IAA8B,KAAKE,iBAAL,EAA5C;AACA,UAAMC,UAAU,GAAG,KAAKC,sBAAL,EAAnB;;AAFO,gCAGuC,KAAKH,aAAL,EAHvC;AAAA,UAGAI,KAHA,uBAGAA,KAHA;AAAA,UAGOC,MAHP,uBAGOA,MAHP;AAAA,UAGeC,SAHf,uBAGeA,SAHf;AAAA,UAG6BC,MAH7B;;AAAA,UAIAC,OAJA,GAIW,KAAKC,KAJhB,CAIAD,OAJA;AAKP,UAAME,SAAS,GAAG,CAChB,KAAKjB,MAAL,CAAYkB,SADI,EAEhBT,UAFgB,EAGhBH,KAAK,IAAI;AAACA,QAAAA,KAAK,EAALA;AAAD,OAHO,EAIhBS,OAJgB,EAKhBH,MAAM,IAAI;AAACO,QAAAA,SAAS,EAAE;AAAZ,OALM,EAMhBR,KANgB,CAAlB;AAQA,UAAMS,QAAQ,GAAGP,SAAS,GAAG,KAAKQ,oBAAL,CAA0B,KAAKnB,KAAL,CAAWkB,QAArC,CAAH,GAAoD,KAAKlB,KAAL,CAAWkB,QAAzF;AAEA,aACE,6BAAC,iBAAD,6BAAYN,MAAZ;AAAoB,QAAA,KAAK,EAAEG,SAA3B;AAAsC,QAAA,GAAG,EAAE,KAAKK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGF,QADH,CADF;AAKD;;;yCAEoBG,K,EAAO;AAC1B,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAOA,KAAK,CAACC,WAAN,EAAP;AACD;;AACD,aAAOD,KAAP;AACD;;;EA1D+BE,0B;;;AAAb1B,I,CACZ2B,W,GAAc,M;AADF3B,I,CAEZ4B,S,mCACFC,kBAAOD,S;AAKVrB,EAAAA,KAAK,EAAEuB,mBAAUC,M;AAIjBlB,EAAAA,MAAM,EAAEiB,mBAAUE,I;AAIlBlB,EAAAA,SAAS,EAAEgB,mBAAUE;;;AA6CzB,SAAS9B,YAAT,GAAwB;AACtB,SAAO+B,wBAAWC,MAAX,CAAkB;AACvBf,IAAAA,SAAS,EAAE;AACTgB,MAAAA,eAAe,EAAE,aADR;AAETf,MAAAA,SAAS,EAAE;AAFF;AADY,GAAlB,CAAP;AAMD","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Text as RNText, StyleSheet} from 'react-native';\nimport {PureBaseComponent} from '../../commons';\n\n/**\n * @description: A wrapper for Text component with extra functionality like modifiers support\n * @extends: Text\n * @extendslink: https://facebook.github.io/react-native/docs/text.html\n * @modifiers: margins, color, typography\n */\nexport default class Text extends PureBaseComponent {\n  static displayName = 'Text';\n  static propTypes = {\n    ...RNText.propTypes,\n    // ...PureBaseComponent.propTypes,\n    /**\n     * color of the text\n     */\n    color: PropTypes.string,\n    /**\n     * whether to center the text (using textAlign)\n     */\n    center: PropTypes.bool,\n    /**\n     * whether to change the text to uppercase\n     */\n    uppercase: PropTypes.bool\n  };\n\n  // static defaultProps = {\n  //   color: Colors.dark10,\n  // }\n\n  generateStyles() {\n    this.styles = createStyles(this.props);\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps); // eslint-disable-line\n  }\n\n  render() {\n    const color = this.getThemeProps().color || this.extractColorValue();\n    const typography = this.extractTypographyValue();\n    const {style, center, uppercase, ...others} = this.getThemeProps();\n    const {margins} = this.state;\n    const textStyle = [\n      this.styles.container,\n      typography,\n      color && {color},\n      margins,\n      center && {textAlign: 'center'},\n      style\n    ];\n    const children = uppercase ? this.transformToUppercase(this.props.children) : this.props.children;\n\n    return (\n      <RNText {...others} style={textStyle} ref={this.setRef}>\n        {children}\n      </RNText>\n    );\n  }\n\n  transformToUppercase(items) {\n    if (typeof items === 'string') {\n      return items.toUpperCase();\n    }\n    return items;\n  }\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      textAlign: 'left'\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}