{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _commons = require(\"../../commons\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\panningViews\\\\panGestureView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DIRECTIONS = {\n  UP: 'up',\n  DOWN: 'down'\n};\nvar SWIPE_VELOCITY = 1.8;\nvar SPEED = 20;\nvar BOUNCINESS = 6;\n\nvar PanGestureView = function (_BaseComponent) {\n  (0, _inherits2.default)(PanGestureView, _BaseComponent);\n\n  var _super = _createSuper(PanGestureView);\n\n  function PanGestureView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PanGestureView);\n    _this = _super.call(this, props);\n\n    _this.handleMoveShouldSetPanResponder = function (e, gestureState) {\n      var dy = gestureState.dy;\n      return dy > 5 || dy < -5;\n    };\n\n    _this.handlePanResponderGrant = function () {\n      _this.swipe = false;\n    };\n\n    _this.handlePanResponderMove = function (e, gestureState) {\n      var _this$getThemeProps = _this.getThemeProps(),\n          direction = _this$getThemeProps.direction;\n\n      var newValue = 0;\n      var up = direction === DIRECTIONS.UP;\n      var panDeltaY = gestureState.dy;\n      var panVelocityY = gestureState.vy;\n\n      if (Math.abs(panVelocityY) >= SWIPE_VELOCITY) {\n        if (up && panVelocityY < 0 || !up && panVelocityY > 0) {\n          _this.swipe = true;\n        }\n      } else if (up && panDeltaY < 0 || !up && panDeltaY > 0) {\n        newValue = panDeltaY;\n\n        _this.animateDeltaY(Math.round(newValue));\n      }\n    };\n\n    _this.handlePanResponderEnd = function () {\n      if (!_this.swipe) {\n        var _this$getThemeProps2 = _this.getThemeProps(),\n            direction = _this$getThemeProps2.direction;\n\n        var up = direction === DIRECTIONS.UP;\n        var deltaY = _this.state.deltaY;\n        var threshold = _this.layout.height / 2;\n        var endValue = Math.round(deltaY._value);\n\n        if (up && endValue <= -threshold || !up && endValue >= threshold) {\n          _this.animateDismiss();\n        } else {\n          _this.animateDeltaY(0);\n        }\n      } else {\n        _this.animateDismiss();\n      }\n    };\n\n    _this.onAnimatedFinished = function (_ref) {\n      var finished = _ref.finished;\n\n      if (finished) {\n        _this.onDismiss();\n      }\n    };\n\n    _this.onDismiss = function () {\n      _this.initPositions();\n\n      _lodash.default.invoke(_this.props, 'onDismiss');\n    };\n\n    _this.onLayout = function (event) {\n      _this.layout = event.nativeEvent.layout;\n    };\n\n    _this.state = {\n      deltaY: new _reactNative.Animated.Value(0)\n    };\n    _this.panResponder = _reactNative.PanResponder.create({\n      onMoveShouldSetPanResponder: _this.handleMoveShouldSetPanResponder,\n      onPanResponderGrant: _this.handlePanResponderGrant,\n      onPanResponderMove: _this.handlePanResponderMove,\n      onPanResponderRelease: _this.handlePanResponderEnd,\n      onPanResponderTerminate: _this.handlePanResponderEnd\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(PanGestureView, [{\n    key: \"animateDeltaY\",\n    value: function animateDeltaY(toValue) {\n      var deltaY = this.state.deltaY;\n\n      _reactNative.Animated.spring(deltaY, {\n        toValue: toValue,\n        speed: SPEED,\n        bounciness: BOUNCINESS\n      }).start();\n    }\n  }, {\n    key: \"animateDismiss\",\n    value: function animateDismiss() {\n      var _this$getThemeProps3 = this.getThemeProps(),\n          direction = _this$getThemeProps3.direction;\n\n      var up = direction === DIRECTIONS.UP;\n      var deltaY = this.state.deltaY;\n      var newValue = up ? -this.layout.height - _helpers.Constants.statusBarHeight : deltaY._value + _helpers.Constants.screenHeight;\n\n      _reactNative.Animated.timing(deltaY, {\n        toValue: Math.round(newValue),\n        duration: 280\n      }).start(this.onAnimatedFinished);\n    }\n  }, {\n    key: \"initPositions\",\n    value: function initPositions() {\n      this.setState({\n        deltaY: new _reactNative.Animated.Value(0)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          style = _this$getThemeProps4.style;\n\n      var deltaY = this.state.deltaY;\n      return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({\n        style: [style, {\n          transform: [{\n            translateY: deltaY\n          }]\n        }]\n      }, this.panResponder.panHandlers, {\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }\n      }), this.props.children);\n    }\n  }]);\n  return PanGestureView;\n}(_commons.BaseComponent);\n\nexports.default = PanGestureView;\nPanGestureView.displayName = 'PanGestureView';\nPanGestureView.propTypes = {\n  onDismiss: _propTypes.default.func,\n  direction: _propTypes.default.oneOf(Object.values(DIRECTIONS))\n};\nPanGestureView.defaultProps = {\n  direction: DIRECTIONS.DOWN\n};\nPanGestureView.directions = DIRECTIONS;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/panningViews/panGestureView.js"],"names":["DIRECTIONS","UP","DOWN","SWIPE_VELOCITY","SPEED","BOUNCINESS","PanGestureView","props","handleMoveShouldSetPanResponder","e","gestureState","dy","handlePanResponderGrant","swipe","handlePanResponderMove","getThemeProps","direction","newValue","up","panDeltaY","panVelocityY","vy","Math","abs","animateDeltaY","round","handlePanResponderEnd","deltaY","state","threshold","layout","height","endValue","_value","animateDismiss","onAnimatedFinished","finished","onDismiss","initPositions","_","invoke","onLayout","event","nativeEvent","Animated","Value","panResponder","PanResponder","create","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","toValue","spring","speed","bounciness","start","Constants","statusBarHeight","screenHeight","timing","duration","setState","style","transform","translateY","panHandlers","children","BaseComponent","displayName","propTypes","PropTypes","func","oneOf","Object","values","defaultProps","directions"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {PanResponder, Animated} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {BaseComponent} from '../../commons';\n\n\nconst DIRECTIONS = {\n  // VERTICAL\n  UP: 'up',\n  DOWN: 'down'\n};\nconst SWIPE_VELOCITY = 1.8;\nconst SPEED = 20;\nconst BOUNCINESS = 6;\n\n/**\n * @description: PanGestureView component for drag and swipe gestures (supports only vertical gestures at the moment)\n */\nexport default class PanGestureView extends BaseComponent {\n  static displayName = 'PanGestureView'\n  static propTypes = {\n    /**\n     * onDismiss callback\n     */\n    onDismiss: PropTypes.func,\n    /**\n     * The direction of the allowed pan (default is down)\n     */\n    direction: PropTypes.oneOf(Object.values(DIRECTIONS))\n  };\n\n  static defaultProps = {\n    direction: DIRECTIONS.DOWN\n  };\n  \n  static directions = DIRECTIONS;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      deltaY: new Animated.Value(0)\n    };\n\n    this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this.handlePanResponderGrant,\n      onPanResponderMove: this.handlePanResponderMove,\n      onPanResponderRelease: this.handlePanResponderEnd,\n      onPanResponderTerminate: this.handlePanResponderEnd\n    });\n  }\n\n  handleMoveShouldSetPanResponder = (e, gestureState) => {\n    // return true if user is swiping, return false if it's a single click\n    const {dy} = gestureState;\n    return dy > 5 || dy < -5;\n  };\n  handlePanResponderGrant = () => {\n    this.swipe = false;\n  };\n  handlePanResponderMove = (e, gestureState) => {\n    const {direction} = this.getThemeProps();\n    let newValue = 0;\n    \n    // VERTICAL\n    const up = (direction === DIRECTIONS.UP);\n    const panDeltaY = gestureState.dy;\n    const panVelocityY = gestureState.vy;\n\n    if (Math.abs(panVelocityY) >= SWIPE_VELOCITY) {\n      if ((up && panVelocityY < 0) || (!up && panVelocityY > 0)) {\n        // Swipe\n        this.swipe = true;\n      }\n    } else if ((up && panDeltaY < 0) || (!up && panDeltaY > 0)) {\n      // Drag\n      newValue = panDeltaY;\n      this.animateDeltaY(Math.round(newValue));\n    }\n  };\n  handlePanResponderEnd = () => {\n    if (!this.swipe) {\n      const {direction} = this.getThemeProps();\n\n      // VERTICAL\n      const up = (direction === DIRECTIONS.UP);\n      const {deltaY} = this.state;\n      const threshold = this.layout.height / 2;\n      const endValue = Math.round(deltaY._value); // eslint-disable-line\n      \n      if ((up && endValue <= -threshold) || (!up && endValue >= threshold)) {\n        this.animateDismiss();\n      } else {\n        // back to initial position\n        this.animateDeltaY(0);\n      }\n    } else {\n      this.animateDismiss();\n    }\n  };\n\n  animateDeltaY(toValue) {\n    const {deltaY} = this.state;\n\n    Animated.spring(deltaY, {\n      toValue,\n      speed: SPEED,\n      bounciness: BOUNCINESS\n    }).start();\n  }\n\n  animateDismiss() {\n    const {direction} = this.getThemeProps();\n\n    // VERTICAL\n    const up = (direction === DIRECTIONS.UP);\n    const {deltaY} = this.state;\n    const newValue = up ? -this.layout.height -Constants.statusBarHeight : deltaY._value + Constants.screenHeight; // eslint-disable-line\n\n    Animated.timing(deltaY, {\n      toValue: Math.round(newValue),\n      duration: 280\n    }).start(this.onAnimatedFinished);\n  }\n\n  onAnimatedFinished = ({finished}) => {\n    if (finished) {\n      this.onDismiss();\n    }\n  }\n\n  onDismiss = () => {\n    this.initPositions();\n    _.invoke(this.props, 'onDismiss');\n  }\n\n  initPositions() {\n    this.setState({\n      deltaY: new Animated.Value(0)\n    });\n  }\n\n  onLayout = (event) => {\n    this.layout = event.nativeEvent.layout;\n  }\n\n  render() {\n    const {style} = this.getThemeProps();\n\n    // VERTICAL\n    const {deltaY} = this.state;\n\n    return (\n      <Animated.View\n        style={[\n          style,\n          {\n            transform: [{\n              translateY: deltaY\n            }]\n          }\n        ]} \n        {...this.panResponder.panHandlers}\n        onLayout={this.onLayout}\n      >\n        {this.props.children}\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}