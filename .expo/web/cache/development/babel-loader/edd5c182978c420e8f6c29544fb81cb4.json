{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeCalendars = require(\"react-native-calendars\");\n\nvar _styles = require(\"../../styles\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\src\\\\modules\\\\calendar\\\\CalendarView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CalendarScreen = function (_React$Component) {\n  (0, _inherits2.default)(CalendarScreen, _React$Component);\n\n  var _super = _createSuper(CalendarScreen);\n\n  function CalendarScreen() {\n    (0, _classCallCheck2.default)(this, CalendarScreen);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(CalendarScreen, [{\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.emptyDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var labels = item.labels && item.labels.map(function (label) {\n        return _react.default.createElement(_reactNative.View, {\n          key: \"label-\" + label,\n          style: {\n            padding: 5,\n            backgroundColor: label === 'Urgent' ? _styles.colors.primary : _styles.colors.secondary,\n            borderRadius: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: {\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, label));\n      });\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: '#48506B',\n          fontFamily: _styles.fonts.primaryRegular,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, item.name), _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: '#9B9B9B',\n          fontFamily: _styles.fonts.primaryRegular\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, item.time)), _react.default.createElement(_reactNative.View, {\n        styleName: \"horizontal h-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, labels));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          loadItems = _this$props.loadItems;\n      return _react.default.createElement(_reactNativeCalendars.Agenda, {\n        items: items,\n        loadItemsForMonth: loadItems,\n        renderItem: this.renderItem,\n        renderEmptyDate: this.renderEmptyDate,\n        rowHasChanged: this.rowHasChanged,\n        theme: {\n          dotColor: _styles.colors.primaryLight,\n          selectedDayBackgroundColor: _styles.colors.primaryLight,\n          agendaDayTextColor: _styles.colors.primaryLight,\n          agendaDayNumColor: _styles.colors.primaryLight,\n          agendaTodayColor: '#4F44B6',\n          backgroundColor: '#F1F1F8'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n  return CalendarScreen;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: _styles.colors.whiteTwo,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 10\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});\n\nvar _default = CalendarScreen;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/src/modules/calendar/CalendarView.js"],"names":["CalendarScreen","r1","r2","name","styles","emptyDate","item","labels","map","label","padding","backgroundColor","colors","primary","secondary","borderRadius","color","fontFamily","fonts","primaryRegular","marginBottom","time","props","items","loadItems","renderItem","renderEmptyDate","rowHasChanged","dotColor","primaryLight","selectedDayBackgroundColor","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","React","Component","StyleSheet","create","container","flex","whiteTwo","alignItems","justifyContent","flexDirection","marginRight","marginTop","height","paddingTop"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport React from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { Agenda } from 'react-native-calendars';\n\nimport { colors, fonts } from '../../styles';\n\nclass CalendarScreen extends React.Component {\n  rowHasChanged(r1, r2) {\n    return r1.name !== r2.name;\n  }\n\n  renderEmptyDate() {\n    return (\n      <View style={styles.emptyDate}>\n        <Text>This is empty date!</Text>\n      </View>\n    );\n  }\n\n  renderItem(item) {\n    const labels =\n      item.labels &&\n      item.labels.map(label => (\n        <View\n          key={`label-${label}`}\n          style={{\n            padding: 5,\n            backgroundColor:\n              label === 'Urgent' ? colors.primary : colors.secondary,\n            borderRadius: 3,\n          }}\n        >\n          <Text style={{ color: 'white' }}>{label}</Text>\n        </View>\n      ));\n\n    return (\n      <View style={styles.item}>\n        <View>\n          <Text\n            style={{\n              color: '#48506B',\n              fontFamily: fonts.primaryRegular,\n              marginBottom: 10,\n            }}\n          >\n            {item.name}\n          </Text>\n          <Text style={{ color: '#9B9B9B', fontFamily: fonts.primaryRegular }}>\n            {item.time}\n          </Text>\n        </View>\n\n        <View styleName=\"horizontal h-start\">{labels}</View>\n      </View>\n    );\n  }\n\n  render() {\n    const { items, loadItems } = this.props;\n    return (\n      <Agenda\n        items={items}\n        loadItemsForMonth={loadItems}\n        renderItem={this.renderItem}\n        renderEmptyDate={this.renderEmptyDate}\n        rowHasChanged={this.rowHasChanged}\n        theme={{\n          dotColor: colors.primaryLight,\n          selectedDayBackgroundColor: colors.primaryLight,\n          agendaDayTextColor: colors.primaryLight,\n          agendaDayNumColor: colors.primaryLight,\n          agendaTodayColor: '#4F44B6',\n          backgroundColor: '#F1F1F8',\n        }}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.whiteTwo,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  item: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 10,\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30,\n  },\n});\n\nexport default CalendarScreen;\n"]},"metadata":{},"sourceType":"script"}