{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Clock = _reactNativeReanimated.default.Clock,\n    Value = _reactNativeReanimated.default.Value,\n    cond = _reactNativeReanimated.default.cond,\n    stopClock = _reactNativeReanimated.default.stopClock,\n    startClock = _reactNativeReanimated.default.startClock,\n    clockRunning = _reactNativeReanimated.default.clockRunning,\n    timing = _reactNativeReanimated.default.timing,\n    block = _reactNativeReanimated.default.block,\n    set = _reactNativeReanimated.default.set;\n\nvar ReanimatedObject = function () {\n  function ReanimatedObject(config) {\n    (0, _classCallCheck2.default)(this, ReanimatedObject);\n    this.clock = new Clock();\n    this.state = {\n      finished: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n      frameTime: new Value(0)\n    };\n    this.config = _objectSpread({\n      duration: 300,\n      toValue: new Value(0),\n      easing: _reactNativeReanimated.Easing.bezier(0.23, 1, 0.32, 1)\n    }, config);\n    this.prevValue = new Value(0);\n    this.value = new Value(0);\n    this.nextValue = new Value(0);\n  }\n\n  (0, _createClass2.default)(ReanimatedObject, [{\n    key: \"getTransitionBlock\",\n    value: function getTransitionBlock() {\n      return block([cond(clockRunning(this.clock), [set(this.config.toValue, this.nextValue), set(this.value, this.state.position)], [set(this.state.finished, 0), set(this.state.time, 0), set(this.state.frameTime, 0), set(this.config.toValue, this.nextValue), startClock(this.clock)]), timing(this.clock, this.state, this.config), cond(this.state.finished, [stopClock(this.clock), set(this.prevValue, this.state.position)])]);\n    }\n  }]);\n  return ReanimatedObject;\n}();\n\nexports.default = ReanimatedObject;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/incubator/TabController/ReanimatedObject.js"],"names":["Clock","Reanimated","Value","cond","stopClock","startClock","clockRunning","timing","block","set","ReanimatedObject","config","clock","state","finished","position","time","frameTime","duration","toValue","easing","Easing","bezier","prevValue","value","nextValue"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;IAEOA,K,GAA+EC,8B,CAA/ED,K;IAAOE,K,GAAwED,8B,CAAxEC,K;IAAOC,I,GAAiEF,8B,CAAjEE,I;IAAMC,S,GAA2DH,8B,CAA3DG,S;IAAWC,U,GAAgDJ,8B,CAAhDI,U;IAAYC,Y,GAAoCL,8B,CAApCK,Y;IAAcC,M,GAAsBN,8B,CAAtBM,M;IAAQC,K,GAAcP,8B,CAAdO,K;IAAOC,G,GAAOR,8B,CAAPQ,G;;IAE1DC,gB;AACnB,4BAAYC,MAAZ,EAAoB;AAAA;AAClB,SAAKC,KAAL,GAAa,IAAIZ,KAAJ,EAAb;AACA,SAAKa,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IAAIZ,KAAJ,CAAU,CAAV,CADC;AAEXa,MAAAA,QAAQ,EAAE,IAAIb,KAAJ,CAAU,CAAV,CAFC;AAGXc,MAAAA,IAAI,EAAE,IAAId,KAAJ,CAAU,CAAV,CAHK;AAIXe,MAAAA,SAAS,EAAE,IAAIf,KAAJ,CAAU,CAAV;AAJA,KAAb;AAMA,SAAKS,MAAL;AACEO,MAAAA,QAAQ,EAAE,GADZ;AAEEC,MAAAA,OAAO,EAAE,IAAIjB,KAAJ,CAAU,CAAV,CAFX;AAGEkB,MAAAA,MAAM,EAAEC,8BAAOC,MAAP,CAAc,IAAd,EAAoB,CAApB,EAAuB,IAAvB,EAA6B,CAA7B;AAHV,OAIKX,MAJL;AAMA,SAAKY,SAAL,GAAiB,IAAIrB,KAAJ,CAAU,CAAV,CAAjB;AACA,SAAKsB,KAAL,GAAa,IAAItB,KAAJ,CAAU,CAAV,CAAb;AACA,SAAKuB,SAAL,GAAiB,IAAIvB,KAAJ,CAAU,CAAV,CAAjB;AACD;;;;yCAEoB;AACnB,aAAOM,KAAK,CAAC,CACXL,IAAI,CAACG,YAAY,CAAC,KAAKM,KAAN,CAAb,EACF,CAACH,GAAG,CAAC,KAAKE,MAAL,CAAYQ,OAAb,EAAsB,KAAKM,SAA3B,CAAJ,EAA2ChB,GAAG,CAAC,KAAKe,KAAN,EAAa,KAAKX,KAAL,CAAWE,QAAxB,CAA9C,CADE,EAEF,CACEN,GAAG,CAAC,KAAKI,KAAL,CAAWC,QAAZ,EAAsB,CAAtB,CADL,EAEEL,GAAG,CAAC,KAAKI,KAAL,CAAWG,IAAZ,EAAkB,CAAlB,CAFL,EAGEP,GAAG,CAAC,KAAKI,KAAL,CAAWI,SAAZ,EAAuB,CAAvB,CAHL,EAIER,GAAG,CAAC,KAAKE,MAAL,CAAYQ,OAAb,EAAsB,KAAKM,SAA3B,CAJL,EAKEpB,UAAU,CAAC,KAAKO,KAAN,CALZ,CAFE,CADO,EAUXL,MAAM,CAAC,KAAKK,KAAN,EAAa,KAAKC,KAAlB,EAAyB,KAAKF,MAA9B,CAVK,EAWXR,IAAI,CAAC,KAAKU,KAAL,CAAWC,QAAZ,EAAsB,CAACV,SAAS,CAAC,KAAKQ,KAAN,CAAV,EAAwBH,GAAG,CAAC,KAAKc,SAAN,EAAiB,KAAKV,KAAL,CAAWE,QAA5B,CAA3B,CAAtB,CAXO,CAAD,CAAZ;AAaD","sourcesContent":["import Reanimated, {Easing} from 'react-native-reanimated';\n\nconst {Clock, Value, cond, stopClock, startClock, clockRunning, timing, block, set} = Reanimated;\n\nexport default class ReanimatedObject {\n  constructor(config) {\n    this.clock = new Clock();\n    this.state = {\n      finished: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n      frameTime: new Value(0)\n    };\n    this.config = {\n      duration: 300,\n      toValue: new Value(0),\n      easing: Easing.bezier(0.23, 1, 0.32, 1),\n      ...config\n    };\n    this.prevValue = new Value(0);\n    this.value = new Value(0);\n    this.nextValue = new Value(0);\n  }\n\n  getTransitionBlock() {\n    return block([\n      cond(clockRunning(this.clock),\n        [set(this.config.toValue, this.nextValue), set(this.value, this.state.position)],\n        [\n          set(this.state.finished, 0),\n          set(this.state.time, 0),\n          set(this.state.frameTime, 0),\n          set(this.config.toValue, this.nextValue),\n          startClock(this.clock)\n        ],),\n      timing(this.clock, this.state, this.config),\n      cond(this.state.finished, [stopClock(this.clock), set(this.prevValue, this.state.position)])\n    ]);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}