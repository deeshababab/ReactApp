{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDirectionOffset = getDirectionOffset;\nexports.getChildrenLength = getChildrenLength;\nexports.calcOffset = calcOffset;\nexports.calcPageIndex = calcPageIndex;\nexports.isOutOfBounds = isOutOfBounds;\nexports.calcCarouselWidth = calcCarouselWidth;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _helpers = require(\"../../helpers\");\n\nfunction getDirectionOffset(offset, props) {\n  var fixedOffset = offset;\n\n  if (_helpers.Constants.isRTL && _helpers.Constants.isAndroid) {\n    var loop = props.loop,\n        _props$pageWidth = props.pageWidth,\n        pageWidth = _props$pageWidth === void 0 ? _helpers.Constants.screenWidth : _props$pageWidth;\n    var totalWidth = (getChildrenLength(props) - 1 + (loop ? 2 : 0)) * pageWidth;\n    fixedOffset = Math.abs(totalWidth - offset);\n  }\n\n  return fixedOffset;\n}\n\nfunction getChildrenLength(props) {\n  var length = _lodash.default.get(props, 'children.length') || 0;\n  return length;\n}\n\nfunction calcOffset(props, state) {\n  var currentPage = state.currentPage;\n  var _props$pageWidth2 = props.pageWidth,\n      pageWidth = _props$pageWidth2 === void 0 ? _helpers.Constants.screenWidth : _props$pageWidth2,\n      loop = props.loop;\n  var actualCurrentPage = loop ? currentPage + 1 : currentPage;\n  var offset = pageWidth * actualCurrentPage;\n  offset = getDirectionOffset(offset, props);\n  return offset;\n}\n\nfunction calcPageIndex(offset, props) {\n  var pagesCount = getChildrenLength(props);\n  var _props$pageWidth3 = props.pageWidth,\n      pageWidth = _props$pageWidth3 === void 0 ? _helpers.Constants.screenWidth : _props$pageWidth3,\n      loop = props.loop;\n  var pageIndexIncludingClonedPages = Math.round(offset / pageWidth);\n  var actualPageIndex;\n\n  if (loop) {\n    actualPageIndex = (pageIndexIncludingClonedPages + (pagesCount - 1)) % pagesCount;\n  } else {\n    actualPageIndex = Math.min(pagesCount - 1, pageIndexIncludingClonedPages);\n  }\n\n  return actualPageIndex;\n}\n\nfunction isOutOfBounds(offset, props) {\n  var _props$pageWidth4 = props.pageWidth,\n      pageWidth = _props$pageWidth4 === void 0 ? _helpers.Constants.screenWidth : _props$pageWidth4;\n  var length = getChildrenLength(props);\n  var minLimit = 1;\n  var maxLimit = (length + 1) * pageWidth - 1;\n  return !_lodash.default.inRange(offset, minLimit, maxLimit);\n}\n\nfunction calcCarouselWidth(props) {\n  var _props$pageWidth5 = props.pageWidth,\n      pageWidth = _props$pageWidth5 === void 0 ? _helpers.Constants.screenWidth : _props$pageWidth5,\n      loop = props.loop;\n  var length = getChildrenLength(props);\n  length = loop ? length + 2 : length;\n  return pageWidth * length;\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/carousel/CarouselPresenter-Deprecated.js"],"names":["getDirectionOffset","offset","props","fixedOffset","Constants","isRTL","isAndroid","loop","pageWidth","screenWidth","totalWidth","getChildrenLength","Math","abs","length","_","get","calcOffset","state","currentPage","actualCurrentPage","calcPageIndex","pagesCount","pageIndexIncludingClonedPages","round","actualPageIndex","min","isOutOfBounds","minLimit","maxLimit","inRange","calcCarouselWidth"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport {Constants} from '../../helpers';\n\n\nexport function getDirectionOffset(offset, props) {\n  let fixedOffset = offset;\n\n  if (Constants.isRTL && Constants.isAndroid) {\n    const {loop, pageWidth = Constants.screenWidth} = props;\n    const totalWidth = ((getChildrenLength(props) - 1) + (loop ? 2 : 0)) * pageWidth;\n    fixedOffset = Math.abs(totalWidth - offset);\n  }\n\n  return fixedOffset;\n}\n\nexport function getChildrenLength(props) {\n  const length = _.get(props, 'children.length') || 0;\n  return length;\n}\n\nexport function calcOffset(props, state) {\n  const {currentPage} = state;\n  const {pageWidth = Constants.screenWidth, loop} = props;\n\n  const actualCurrentPage = loop ? currentPage + 1 : currentPage;\n\n  let offset = pageWidth * actualCurrentPage;\n  offset = getDirectionOffset(offset, props);\n\n  return offset;\n}\n\nexport function calcPageIndex(offset, props) {\n  const pagesCount = getChildrenLength(props);\n  const {pageWidth = Constants.screenWidth, loop} = props;\n  const pageIndexIncludingClonedPages = Math.round(offset / pageWidth);\n\n  let actualPageIndex;\n  if (loop) {\n    actualPageIndex = (pageIndexIncludingClonedPages + (pagesCount - 1)) % pagesCount;\n  } else {\n    actualPageIndex = Math.min(pagesCount - 1, pageIndexIncludingClonedPages);\n  }\n\n  return actualPageIndex;\n}\n\nexport function isOutOfBounds(offset, props) {\n  const {pageWidth = Constants.screenWidth} = props;\n  const length = getChildrenLength(props);\n  const minLimit = 1;\n  const maxLimit = ((length + 1) * pageWidth) - 1;\n\n  return !_.inRange(offset, minLimit, maxLimit);\n}\n\n// todo: need to support more cases of page width in loop mode\nexport function calcCarouselWidth(props) {\n  const {pageWidth = Constants.screenWidth, loop} = props;\n  let length = getChildrenLength(props);\n  length = loop ? length + 2 : length;\n  return pageWidth * length;\n}\n"]},"metadata":{},"sourceType":"script"}