{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _asPanViewConsumer = _interopRequireDefault(require(\"./asPanViewConsumer\"));\n\nvar _panningProvider = _interopRequireDefault(require(\"./panningProvider\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\panningViews\\\\panDismissibleView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DEFAULT_SPEED = 20;\nvar DEFAULT_BOUNCINESS = 6;\nvar DEFAULT_DISMISS_ANIMATION_DURATION = 280;\nvar MAXIMUM_DRAGS_AFTER_SWIPE = 2;\n\nvar PanDismissibleView = function (_PureComponent) {\n  (0, _inherits2.default)(PanDismissibleView, _PureComponent);\n\n  var _super = _createSuper(PanDismissibleView);\n\n  function PanDismissibleView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PanDismissibleView);\n    _this = _super.call(this, props);\n\n    _this.onLayout = function (event) {\n      if (_lodash.default.isUndefined(_this.height)) {\n        var layout = event.nativeEvent.layout;\n        _this.height = layout.height;\n        _this.thresholdY = layout.height / 2;\n        _this.width = layout.width;\n        _this.thresholdX = layout.width / 2;\n\n        _this.initPositions();\n      }\n    };\n\n    _this.initPositions = function (extraDataForSetState, runAfterSetState) {\n      _this.setNativeProps(0, 0);\n\n      _this.setState(_objectSpread({\n        animTranslateX: new _reactNative.Animated.Value(0),\n        animTranslateY: new _reactNative.Animated.Value(0)\n      }, extraDataForSetState), runAfterSetState);\n    };\n\n    _this.onPanStart = function () {\n      _this.swipe = {};\n      _this.counter = 0;\n    };\n\n    _this.onDrag = function (deltas) {\n      var left = deltas.x ? Math.round(deltas.x) : 0;\n      var top = deltas.y ? Math.round(deltas.y) : 0;\n\n      _this.setNativeProps(left, top);\n\n      if (_this.swipe.x || _this.swipe.y) {\n        if (_this.counter < MAXIMUM_DRAGS_AFTER_SWIPE) {\n          _this.counter += 1;\n        } else {\n          _this.swipe = {};\n        }\n      }\n    };\n\n    _this.setNativeProps = function (left, top) {\n      if (_this.ref.current) {\n        _this.ref.current.setNativeProps({\n          style: {\n            left: left,\n            top: top\n          }\n        });\n\n        _this.left = left;\n        _this.top = top;\n      }\n    };\n\n    _this.onSwipe = function (swipeDirections) {\n      _this.swipe = swipeDirections;\n    };\n\n    _this.onPanEnd = function () {\n      var directions = _this.props.directions;\n\n      if (_this.swipe.x || _this.swipe.y) {\n        var _this$getDismissAnima = _this.getDismissAnimationDirection(),\n            isRight = _this$getDismissAnima.isRight,\n            isDown = _this$getDismissAnima.isDown;\n\n        _this._animateDismiss(isRight, isDown);\n      } else {\n        var endValue = {\n          x: Math.round(_this.left),\n          y: Math.round(_this.top)\n        };\n\n        if (directions.includes(_panningProvider.default.Directions.LEFT) && endValue.x <= -_this.thresholdX || directions.includes(_panningProvider.default.Directions.RIGHT) && endValue.x >= _this.thresholdX || directions.includes(_panningProvider.default.Directions.UP) && endValue.y <= -_this.thresholdY || directions.includes(_panningProvider.default.Directions.DOWN) && endValue.y >= _this.thresholdY) {\n          var _this$getDismissAnima2 = _this.getDismissAnimationDirection(),\n              _isRight = _this$getDismissAnima2.isRight,\n              _isDown = _this$getDismissAnima2.isDown;\n\n          _this._animateDismiss(_isRight, _isDown);\n        } else {\n          _this.resetPosition();\n        }\n      }\n    };\n\n    _this.resetPosition = function () {\n      var _this$state = _this.state,\n          animTranslateX = _this$state.animTranslateX,\n          animTranslateY = _this$state.animTranslateY;\n      var _this$props$animation = _this.props.animationOptions,\n          speed = _this$props$animation.speed,\n          bounciness = _this$props$animation.bounciness;\n      var toX = -_this.left;\n      var toY = -_this.top;\n      var animations = [];\n\n      if (!_lodash.default.isUndefined(toX)) {\n        animations.push(_reactNative.Animated.spring(animTranslateX, {\n          toValue: Math.round(toX),\n          speed: speed,\n          bounciness: bounciness\n        }));\n      }\n\n      if (!_lodash.default.isUndefined(toY)) {\n        animations.push(_reactNative.Animated.spring(animTranslateY, {\n          toValue: Math.round(toY),\n          speed: speed,\n          bounciness: bounciness\n        }));\n      }\n\n      _this.setState({\n        isAnimating: true\n      }, function () {\n        _reactNative.Animated.parallel(animations).start(_this.onResetPositionFinished);\n      });\n    };\n\n    _this.onResetPositionFinished = function () {\n      var runAfterSetState = _this.shouldDismissAfterReset ? _this.animateDismiss : undefined;\n      _this.shouldDismissAfterReset = false;\n\n      _this.initPositions({\n        isAnimating: false\n      }, runAfterSetState);\n    };\n\n    _this.getDismissAnimationDirection = function () {\n      var _this$props$context = _this.props.context,\n          swipeDirections = _this$props$context.swipeDirections,\n          dragDirections = _this$props$context.dragDirections;\n      var hasHorizontalSwipe = !_lodash.default.isUndefined(swipeDirections.x);\n      var hasVerticalSwipe = !_lodash.default.isUndefined(swipeDirections.y);\n      var isRight;\n      var isDown;\n\n      if (hasHorizontalSwipe || hasVerticalSwipe) {\n        if (hasHorizontalSwipe) {\n          isRight = swipeDirections.x === _panningProvider.default.Directions.RIGHT;\n        }\n\n        if (hasVerticalSwipe) {\n          isDown = swipeDirections.y === _panningProvider.default.Directions.DOWN;\n        }\n      } else {\n        if (!_lodash.default.isUndefined(dragDirections.x)) {\n          isRight = dragDirections.x === _panningProvider.default.Directions.RIGHT;\n        }\n\n        if (!_lodash.default.isUndefined(dragDirections.y)) {\n          isDown = dragDirections.y === _panningProvider.default.Directions.DOWN;\n        }\n      }\n\n      return {\n        isRight: isRight,\n        isDown: isDown\n      };\n    };\n\n    _this.animateDismiss = function () {\n      var isAnimating = _this.state.isAnimating;\n\n      if (isAnimating) {\n        _this.shouldDismissAfterReset = true;\n      } else {\n        var _this$props$direction = _this.props.directions,\n            directions = _this$props$direction === void 0 ? [] : _this$props$direction;\n        var hasUp = directions.includes(_panningProvider.default.Directions.UP);\n        var hasRight = directions.includes(_panningProvider.default.Directions.RIGHT);\n        var hasLeft = directions.includes(_panningProvider.default.Directions.LEFT);\n        var hasDown = !hasUp && !hasLeft && !hasRight;\n        var verticalDismiss = hasDown ? true : hasUp ? false : undefined;\n        var horizontalDismiss = hasRight ? true : hasLeft ? false : undefined;\n\n        _this._animateDismiss(horizontalDismiss, verticalDismiss);\n      }\n    };\n\n    _this._animateDismiss = function (isRight, isDown) {\n      var _this$state2 = _this.state,\n          animTranslateX = _this$state2.animTranslateX,\n          animTranslateY = _this$state2.animTranslateY;\n      var duration = _this.props.animationOptions.duration;\n      var animations = [];\n      var toX;\n      var toY;\n\n      if (!_lodash.default.isUndefined(isRight)) {\n        var maxSize = _helpers.Constants.screenWidth + _this.width;\n        toX = isRight ? maxSize : -maxSize;\n      }\n\n      if (!_lodash.default.isUndefined(isDown)) {\n        var _maxSize = _helpers.Constants.screenHeight + _this.height;\n\n        toY = isDown ? _maxSize : -_maxSize;\n      }\n\n      if (!_lodash.default.isUndefined(toX)) {\n        animations.push(_reactNative.Animated.timing(animTranslateX, {\n          toValue: Math.round(toX),\n          duration: duration\n        }));\n      }\n\n      if (!_lodash.default.isUndefined(toY)) {\n        animations.push(_reactNative.Animated.timing(animTranslateY, {\n          toValue: Math.round(toY),\n          duration: duration\n        }));\n      }\n\n      _this.setState({\n        isAnimating: true\n      }, function () {\n        _reactNative.Animated.parallel(animations).start(_this.onDismissAnimationFinished);\n      });\n    };\n\n    _this.onDismissAnimationFinished = function (_ref) {\n      var finished = _ref.finished;\n\n      if (finished) {\n        var onDismiss = _this.props.onDismiss;\n        onDismiss();\n      }\n    };\n\n    _this.state = {\n      animTranslateX: new _reactNative.Animated.Value(0),\n      animTranslateY: new _reactNative.Animated.Value(0),\n      isAnimating: false\n    };\n    _this.shouldDismissAfterReset = false;\n    _this.ref = _react.default.createRef();\n    return _this;\n  }\n\n  (0, _createClass2.default)(PanDismissibleView, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var isAnimating = this.state.isAnimating;\n      var _this$props$context2 = this.props.context,\n          isPanning = _this$props$context2.isPanning,\n          dragDeltas = _this$props$context2.dragDeltas,\n          swipeDirections = _this$props$context2.swipeDirections;\n      var _prevProps$context = prevProps.context,\n          prevIsPanning = _prevProps$context.isPanning,\n          prevDragDeltas = _prevProps$context.dragDeltas,\n          prevSwipeDirections = _prevProps$context.swipeDirections;\n\n      if (isPanning !== prevIsPanning) {\n        if (isPanning && !isAnimating) {\n          this.onPanStart();\n        } else {\n          this.onPanEnd();\n        }\n      }\n\n      if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n        this.onDrag(dragDeltas);\n      }\n\n      if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== prevSwipeDirections.x || swipeDirections.y !== prevSwipeDirections.y)) {\n        this.onSwipe(swipeDirections);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.props.style;\n      var _this$state3 = this.state,\n          isAnimating = _this$state3.isAnimating,\n          animTranslateX = _this$state3.animTranslateX,\n          animTranslateY = _this$state3.animTranslateY;\n      var transform = isAnimating ? [{\n        translateX: animTranslateX\n      }, {\n        translateY: animTranslateY\n      }] : [];\n      return _react.default.createElement(_reactNative.Animated.View, {\n        ref: this.ref,\n        style: [style, {\n          transform: transform\n        }],\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n  return PanDismissibleView;\n}(_react.PureComponent);\n\nPanDismissibleView.displayName = 'PanDismissibleView';\nPanDismissibleView.propTypes = {\n  directions: _propTypes.default.arrayOf(_propTypes.default.oneOf(Object.values(_panningProvider.default.Directions))),\n  onDismiss: _propTypes.default.func,\n  animationOptions: _propTypes.default.shape({\n    speed: _propTypes.default.number,\n    bounciness: _propTypes.default.number,\n    duration: _propTypes.default.number\n  })\n};\nPanDismissibleView.defaultProps = {\n  directions: [_panningProvider.default.Directions.UP, _panningProvider.default.Directions.DOWN, _panningProvider.default.Directions.LEFT, _panningProvider.default.Directions.RIGHT],\n  animationOptions: {\n    speed: DEFAULT_SPEED,\n    bounciness: DEFAULT_BOUNCINESS,\n    duration: DEFAULT_DISMISS_ANIMATION_DURATION\n  },\n  onDismiss: _lodash.default.noop\n};\n\nvar _default = (0, _asPanViewConsumer.default)(PanDismissibleView);\n\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/panningViews/panDismissibleView.js"],"names":["DEFAULT_SPEED","DEFAULT_BOUNCINESS","DEFAULT_DISMISS_ANIMATION_DURATION","MAXIMUM_DRAGS_AFTER_SWIPE","PanDismissibleView","props","onLayout","event","_","isUndefined","height","layout","nativeEvent","thresholdY","width","thresholdX","initPositions","extraDataForSetState","runAfterSetState","setNativeProps","setState","animTranslateX","Animated","Value","animTranslateY","onPanStart","swipe","counter","onDrag","deltas","left","x","Math","round","top","y","ref","current","style","onSwipe","swipeDirections","onPanEnd","directions","getDismissAnimationDirection","isRight","isDown","_animateDismiss","endValue","includes","PanningProvider","Directions","LEFT","RIGHT","UP","DOWN","resetPosition","state","animationOptions","speed","bounciness","toX","toY","animations","push","spring","toValue","isAnimating","parallel","start","onResetPositionFinished","shouldDismissAfterReset","animateDismiss","undefined","context","dragDirections","hasHorizontalSwipe","hasVerticalSwipe","hasUp","hasRight","hasLeft","hasDown","verticalDismiss","horizontalDismiss","duration","maxSize","Constants","screenWidth","screenHeight","timing","onDismissAnimationFinished","finished","onDismiss","React","createRef","prevProps","isPanning","dragDeltas","prevIsPanning","prevDragDeltas","prevSwipeDirections","transform","translateX","translateY","children","PureComponent","displayName","propTypes","PropTypes","arrayOf","oneOf","Object","values","func","shape","number","defaultProps","noop"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\nimport {Animated} from 'react-native';\nimport {Constants} from '../../helpers';\nimport asPanViewConsumer from './asPanViewConsumer';\nimport PanningProvider from './panningProvider';\n\nconst DEFAULT_SPEED = 20;\nconst DEFAULT_BOUNCINESS = 6;\nconst DEFAULT_DISMISS_ANIMATION_DURATION = 280;\nconst MAXIMUM_DRAGS_AFTER_SWIPE = 2;\n\n/**\n * @description: PanDismissibleView component created to making listening to swipe and drag events easier,\n * @notes: Has to be used as a child of a PanningProvider that also has a PanListenerView.\n *         The PanListenerView is the one that sends the drag\\swipe events.\n * @important: This component is deprecated and should not be used.  \n */\nclass PanDismissibleView extends PureComponent {\n  static displayName = 'PanDismissibleView';\n  static propTypes = {\n    /**\n     * The directions of the allowed pan (default allows all directions)\n     * Types: UP, DOWN, LEFT and RIGHT (using PanningProvider.Directions.###)\n     */\n    directions: PropTypes.arrayOf(PropTypes.oneOf(Object.values(PanningProvider.Directions))),\n    /**\n     * onDismiss callback\n     */\n    onDismiss: PropTypes.func,\n    /**\n     * Some animation options to choose from:\n     * speed - the animation speed (default is 20)\n     * bounciness - the animation bounciness (default is 6)\n     * duration - the dismiss animation duration (default is 280)\n     */\n    animationOptions: PropTypes.shape({\n      speed: PropTypes.number,\n      bounciness: PropTypes.number,\n      duration: PropTypes.number\n    })\n  };\n\n  static defaultProps = {\n    directions: [\n      PanningProvider.Directions.UP,\n      PanningProvider.Directions.DOWN,\n      PanningProvider.Directions.LEFT,\n      PanningProvider.Directions.RIGHT\n    ],\n    animationOptions: {\n      speed: DEFAULT_SPEED,\n      bounciness: DEFAULT_BOUNCINESS,\n      duration: DEFAULT_DISMISS_ANIMATION_DURATION\n    },\n    onDismiss: _.noop\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animTranslateX: new Animated.Value(0),\n      animTranslateY: new Animated.Value(0),\n      isAnimating: false\n    };\n    this.shouldDismissAfterReset = false;\n    this.ref = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {isAnimating} = this.state;\n    const {isPanning, dragDeltas, swipeDirections} = this.props.context; // eslint-disable-line\n    const {\n      isPanning: prevIsPanning,\n      dragDeltas: prevDragDeltas,\n      swipeDirections: prevSwipeDirections\n    } = prevProps.context; // eslint-disable-line\n    if (isPanning !== prevIsPanning) {\n      if (isPanning && !isAnimating) {\n        // do not start a new pan if we're still animating\n        this.onPanStart();\n      } else {\n        this.onPanEnd();\n      }\n    }\n\n    if (\n      isPanning &&\n      (dragDeltas.x || dragDeltas.y) &&\n      (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)\n    ) {\n      this.onDrag(dragDeltas);\n    }\n\n    if (\n      isPanning &&\n      (swipeDirections.x || swipeDirections.y) &&\n      (swipeDirections.x !== prevSwipeDirections.x || swipeDirections.y !== prevSwipeDirections.y)\n    ) {\n      this.onSwipe(swipeDirections);\n    }\n  }\n\n  onLayout = event => {\n    if (_.isUndefined(this.height)) {\n      const layout = event.nativeEvent.layout;\n      this.height = layout.height;\n      this.thresholdY = layout.height / 2;\n      this.width = layout.width;\n      this.thresholdX = layout.width / 2;\n      this.initPositions();\n    }\n  };\n\n  initPositions = (extraDataForSetState, runAfterSetState) => {\n    this.setNativeProps(0, 0);\n    this.setState({\n      animTranslateX: new Animated.Value(0),\n      animTranslateY: new Animated.Value(0),\n      ...extraDataForSetState\n    },\n    runAfterSetState,);\n  };\n\n  onPanStart = () => {\n    this.swipe = {};\n    this.counter = 0;\n  };\n\n  onDrag = deltas => {\n    const left = deltas.x ? Math.round(deltas.x) : 0;\n    const top = deltas.y ? Math.round(deltas.y) : 0;\n    this.setNativeProps(left, top);\n    if (this.swipe.x || this.swipe.y) {\n      if (this.counter < MAXIMUM_DRAGS_AFTER_SWIPE) {\n        this.counter += 1;\n      } else {\n        this.swipe = {};\n      }\n    }\n  };\n\n  setNativeProps = (left, top) => {\n    if (this.ref.current) {\n      this.ref.current.setNativeProps({style: {left, top}});\n      this.left = left;\n      this.top = top;\n    }\n  };\n\n  onSwipe = swipeDirections => {\n    this.swipe = swipeDirections;\n  };\n\n  onPanEnd = () => {\n    const {directions} = this.props;\n    if (this.swipe.x || this.swipe.y) {\n      const {isRight, isDown} = this.getDismissAnimationDirection();\n      this._animateDismiss(isRight, isDown);\n    } else {\n      const endValue = {x: Math.round(this.left), y: Math.round(this.top)};\n      if (\n        (directions.includes(PanningProvider.Directions.LEFT) && endValue.x <= -this.thresholdX) ||\n        (directions.includes(PanningProvider.Directions.RIGHT) && endValue.x >= this.thresholdX) ||\n        (directions.includes(PanningProvider.Directions.UP) && endValue.y <= -this.thresholdY) ||\n        (directions.includes(PanningProvider.Directions.DOWN) && endValue.y >= this.thresholdY)\n      ) {\n        const {isRight, isDown} = this.getDismissAnimationDirection();\n        this._animateDismiss(isRight, isDown);\n      } else {\n        this.resetPosition();\n      }\n    }\n  };\n\n  resetPosition = () => {\n    const {animTranslateX, animTranslateY} = this.state;\n    const {speed, bounciness} = this.props.animationOptions;\n    const toX = -this.left;\n    const toY = -this.top;\n    const animations = [];\n    if (!_.isUndefined(toX)) {\n      animations.push(Animated.spring(animTranslateX, {\n        toValue: Math.round(toX),\n        speed,\n        bounciness\n      }),);\n    }\n\n    if (!_.isUndefined(toY)) {\n      animations.push(Animated.spring(animTranslateY, {\n        toValue: Math.round(toY),\n        speed,\n        bounciness\n      }),);\n    }\n\n    this.setState({isAnimating: true}, () => {\n      Animated.parallel(animations).start(this.onResetPositionFinished);\n    });\n  };\n\n  onResetPositionFinished = () => {\n    const runAfterSetState = this.shouldDismissAfterReset ? this.animateDismiss : undefined;\n    this.shouldDismissAfterReset = false;\n    this.initPositions({isAnimating: false}, runAfterSetState);\n  };\n\n  getDismissAnimationDirection = () => {\n    const {swipeDirections, dragDirections} = this.props.context; // eslint-disable-line\n    const hasHorizontalSwipe = !_.isUndefined(swipeDirections.x);\n    const hasVerticalSwipe = !_.isUndefined(swipeDirections.y);\n    let isRight;\n    let isDown;\n\n    if (hasHorizontalSwipe || hasVerticalSwipe) {\n      if (hasHorizontalSwipe) {\n        isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n      }\n\n      if (hasVerticalSwipe) {\n        isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n      }\n    } else {\n      // got here from a drag beyond threshold\n      if (!_.isUndefined(dragDirections.x)) {\n        isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n      }\n\n      if (!_.isUndefined(dragDirections.y)) {\n        isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n      }\n    }\n\n    return {isRight, isDown};\n  };\n\n  // Send undefined to not animate in the horizontal\\vertical direction\n  // isRight === true --> animate to the right\n  // isRight === false --> animate to the left\n  // isDown === true --> animate to the bottom\n  // isDown === false --> animate to the top\n  animateDismiss = () => {\n    const {isAnimating} = this.state;\n    if (isAnimating) {\n      this.shouldDismissAfterReset = true;\n    } else {\n      const {directions = []} = this.props;\n      const hasUp = directions.includes(PanningProvider.Directions.UP);\n      const hasRight = directions.includes(PanningProvider.Directions.RIGHT);\n      const hasLeft = directions.includes(PanningProvider.Directions.LEFT);\n      const hasDown = !hasUp && !hasLeft && !hasRight; // default\n      const verticalDismiss = hasDown ? true : hasUp ? false : undefined;\n      const horizontalDismiss = hasRight ? true : hasLeft ? false : undefined;\n      this._animateDismiss(horizontalDismiss, verticalDismiss);\n    }\n  };\n\n  _animateDismiss = (isRight, isDown) => {\n    const {animTranslateX, animTranslateY} = this.state;\n    const {duration} = this.props.animationOptions;\n    const animations = [];\n    let toX;\n    let toY;\n\n    if (!_.isUndefined(isRight)) {\n      const maxSize = Constants.screenWidth + this.width;\n      toX = isRight ? maxSize : -maxSize;\n    }\n\n    if (!_.isUndefined(isDown)) {\n      const maxSize = Constants.screenHeight + this.height;\n      toY = isDown ? maxSize : -maxSize;\n    }\n\n    if (!_.isUndefined(toX)) {\n      animations.push(Animated.timing(animTranslateX, {\n        toValue: Math.round(toX),\n        duration\n      }),);\n    }\n\n    if (!_.isUndefined(toY)) {\n      animations.push(Animated.timing(animTranslateY, {\n        toValue: Math.round(toY),\n        duration\n      }),);\n    }\n\n    this.setState({isAnimating: true}, () => {\n      Animated.parallel(animations).start(this.onDismissAnimationFinished);\n    });\n  };\n\n  onDismissAnimationFinished = ({finished}) => {\n    if (finished) {\n      const {onDismiss} = this.props;\n      onDismiss();\n    }\n  };\n\n  render() {\n    const {style} = this.props;\n    const {isAnimating, animTranslateX, animTranslateY} = this.state;\n    const transform = isAnimating ? [{translateX: animTranslateX}, {translateY: animTranslateY}] : [];\n\n    return (\n      <Animated.View\n        ref={this.ref}\n        style={[\n          style,\n          {\n            transform\n          }\n        ]}\n        onLayout={this.onLayout}\n      >\n        {this.props.children}\n      </Animated.View>\n    );\n  }\n}\n\nexport default asPanViewConsumer(PanDismissibleView);\n"]},"metadata":{},"sourceType":"script"}