{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _image = _interopRequireDefault(require(\"../image\"));\n\nvar _assets = _interopRequireDefault(require(\"../../assets\"));\n\nvar _TabBarItem = _interopRequireDefault(require(\"./TabBarItem\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabBar\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar LAYOUT_MODES = {\n  FIT: 'FIT',\n  SCROLL: 'SCROLL'\n};\n\nvar TabBar = function (_BaseComponent) {\n  (0, _inherits2.default)(TabBar, _BaseComponent);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TabBar);\n    _this = _super.call(this, props);\n\n    _this.isIgnoredTab = function (index) {\n      var _this$getThemeProps = _this.getThemeProps(),\n          ignoreLastTab = _this$getThemeProps.ignoreLastTab;\n\n      return ignoreLastTab && index === _this.childrenCount - 1;\n    };\n\n    _this.updateIndicatorPosition = function () {\n      if (_this.hasMeasurements() && _this.contentWidth) {\n        _this.setState({\n          selectedIndicatorPosition: new _reactNative.Animated.Value(_this.calcIndicatorPosition(_this.state.selectedIndex))\n        });\n      }\n    };\n\n    _this.animateIndicatorPosition = function (index) {\n      var _this$getThemeProps2 = _this.getThemeProps(),\n          disableAnimatedTransition = _this$getThemeProps2.disableAnimatedTransition;\n\n      var selectedIndicatorPosition = _this.state.selectedIndicatorPosition;\n\n      var newPosition = _this.calcIndicatorPosition(index);\n\n      if (disableAnimatedTransition) {\n        selectedIndicatorPosition.setValue(newPosition);\n      } else {\n        _reactNative.Animated.spring(selectedIndicatorPosition, {\n          toValue: newPosition,\n          tension: 30,\n          friction: 8\n        }).start();\n      }\n    };\n\n    _this.onItemLayout = function (index, width) {\n      if (_lodash.default.isUndefined(_this.itemsWidths[index])) {\n        if (_this.isIgnoredTab(index)) {\n          _this.itemsWidths[index] = 0;\n        } else {\n          _this.itemsWidths[index] = width;\n        }\n      } else if (_this.scrollLayout) {\n        _this.itemsWidths[index + 1] = _this.itemsWidths[index];\n        _this.itemsWidths[index] = width;\n      }\n\n      _this.updateIndicatorPosition();\n    };\n\n    _this.onLayout = function (event) {\n      _this.containerWidth = event.nativeEvent.layout.width;\n\n      switch (_this.state.currentMode) {\n        case LAYOUT_MODES.FIT:\n          _this.contentWidth = _this.containerWidth;\n\n          _this.updateIndicatorPosition();\n\n          break;\n\n        case LAYOUT_MODES.SCROLL:\n          _this.calcLayoutMode();\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.onContentSizeChange = function (width) {\n      _this.contentWidth = width;\n\n      _this.calcLayoutMode();\n    };\n\n    _this.onScroll = function (event) {\n      var _this$getThemeProps3 = _this.getThemeProps(),\n          useGradientFinish = _this$getThemeProps3.useGradientFinish;\n\n      if (useGradientFinish) {\n        var x = event.nativeEvent.contentOffset.x;\n\n        _this.animateGradientOpacity(x);\n      }\n    };\n\n    _this.animateGradientOpacity = function (x) {\n      var overflow = _this.contentWidth - _this.containerWidth;\n      var newValue = x > 0 && x >= overflow - 1 ? 0 : 1;\n\n      _reactNative.Animated.spring(_this.state.gradientValue, {\n        toValue: newValue,\n        speed: 20\n      }).start();\n    };\n\n    _this.itemsWidths = {};\n    _this.contentWidth = undefined;\n    _this.containerWidth = undefined;\n    _this.childrenCount = _react.default.Children.count(props.children);\n    _this.itemContentSpacing = _this.getThemeProps().isContentIndicator ? _style.Spacings.s4 : 0;\n    _this.state = {\n      selectedIndex: props.selectedIndex,\n      selectedIndicatorPosition: new _reactNative.Animated.Value(0),\n      gradientValue: new _reactNative.Animated.Value(1),\n      fadeAnim: 0,\n      currentMode: props.mode\n    };\n\n    _this.checkPropsMatch();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(TabBar, [{\n    key: \"getLabels\",\n    value: function getLabels(items) {\n      if (Array.isArray(items)) {\n        var lbls = [];\n        items.forEach(function (element) {\n          lbls.push(element.props.label);\n        });\n        return lbls;\n      }\n    }\n  }, {\n    key: \"getDifferences\",\n    value: function getDifferences(array, array2) {\n      var dif = [];\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i] !== array2[i]) {\n          if (dif.indexOf(i) === -1) {\n            dif.push(i);\n          }\n        }\n      }\n\n      return dif;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.labels = this.getLabels(this.props.children);\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (_react.default.Children.count(nextProps.children) !== this.childrenCount) {\n        this.initializeValues(nextProps);\n      } else if (this.scrollLayout) {\n        var labels = this.getLabels(nextProps.children);\n\n        if (!_lodash.default.isEqual(this.labels, labels)) {\n          var differences = this.getDifferences(this.labels, labels);\n          differences.forEach(function (element) {\n            _this2.itemsWidths[element] = undefined;\n          });\n          this.labels = labels;\n        }\n      }\n\n      if (nextProps.selectedIndex !== this.state.selectedIndex && this.props.selectedIndex !== nextProps.selectedIndex) {\n        this.animateIndicatorPosition(nextProps.selectedIndex);\n        this.setState({\n          selectedIndex: nextProps.selectedIndex\n        });\n      }\n    }\n  }, {\n    key: \"initializeValues\",\n    value: function initializeValues(props) {\n      if (!this.scrollLayout) {\n        this.itemsWidths = {};\n      }\n\n      this.contentWidth = undefined;\n      this.childrenCount = _react.default.Children.count(props.children);\n      this.setState({\n        currentMode: props.mode\n      });\n    }\n  }, {\n    key: \"checkPropsMatch\",\n    value: function checkPropsMatch() {\n      var selectedIndex = this.state.selectedIndex;\n\n      if (this.isIgnoredTab(selectedIndex)) {\n        console.warn('Your selectedIndex is the last tab. Please change it or remove the ignoreLastTab prop');\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps());\n    }\n  }, {\n    key: \"hasMeasurements\",\n    value: function hasMeasurements() {\n      return _lodash.default.keys(this.itemsWidths).length === this.childrenCount;\n    }\n  }, {\n    key: \"calcIndicatorWidth\",\n    value: function calcIndicatorWidth() {\n      if (this.childrenCount === 0) {\n        return '0%';\n      }\n\n      var itemWidth = this.itemsWidths[this.state.selectedIndex] - this.itemContentSpacing * 2;\n      var width = itemWidth / this.contentWidth * 100;\n      return width + \"%\";\n    }\n  }, {\n    key: \"calcIndicatorPosition\",\n    value: function calcIndicatorPosition(index) {\n      var position = 0;\n\n      if (!_lodash.default.isEmpty(this.itemsWidths)) {\n        var itemPosition = 0;\n\n        for (var i = 0; i < index; i++) {\n          itemPosition += this.itemsWidths[i];\n        }\n\n        itemPosition += this.itemContentSpacing;\n        position = itemPosition / this.contentWidth * 100;\n      } else {\n        position = index * (100 / this.childrenCount) + this.itemContentSpacing;\n      }\n\n      return position;\n    }\n  }, {\n    key: \"onChangeIndex\",\n    value: function onChangeIndex(index) {\n      if (this.isIgnoredTab(index)) {} else {\n        this.animateIndicatorPosition(index);\n        this.setState({\n          selectedIndex: index\n        });\n\n        _lodash.default.invoke(this.props, 'onChangeIndex', index);\n      }\n    }\n  }, {\n    key: \"onTabSelected\",\n    value: function onTabSelected(index) {\n      _lodash.default.invoke(this.props, 'onTabSelected', index);\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this3 = this;\n\n      var selectedIndex = this.state.selectedIndex;\n\n      var children = _react.default.Children.map(this.props.children, function (child, index) {\n        return _react.default.cloneElement(child, {\n          selected: selectedIndex === index,\n          width: _this3.itemsWidths[index],\n          onPress: function onPress() {\n            _this3.onChangeIndex(index);\n\n            _this3.onTabSelected(index);\n\n            _lodash.default.invoke(child.props, 'onPress');\n          },\n          onLayout: function onLayout(width) {\n            _this3.onItemLayout(index, width);\n          }\n        });\n      });\n\n      return children;\n    }\n  }, {\n    key: \"renderSelectedIndicator\",\n    value: function renderSelectedIndicator() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          indicatorStyle = _this$getThemeProps4.indicatorStyle;\n\n      var selectedIndicatorPosition = this.state.selectedIndicatorPosition;\n\n      if (this.childrenCount - 1 === 0) {\n        return;\n      }\n\n      var width = this.calcIndicatorWidth();\n      var left = selectedIndicatorPosition.interpolate({\n        inputRange: [0, 100],\n        outputRange: ['0%', '100%']\n      });\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [this.styles.selectedIndicator, this.styles.absoluteContainer, {\n          left: left,\n          width: width\n        }, indicatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderBar\",\n    value: function renderBar() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          height = _this$getThemeProps5.height,\n          style = _this$getThemeProps5.style,\n          enableShadow = _this$getThemeProps5.enableShadow;\n\n      return _react.default.createElement(_view.default, {\n        style: [this.styles.container, enableShadow && this.styles.containerShadow, style],\n        \"bg-white\": true,\n        row: true,\n        height: height,\n        onLayout: this.onLayout,\n        useSafeArea: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 7\n        }\n      }, this.renderChildren(), this.hasMeasurements() && this.renderSelectedIndicator());\n    }\n  }, {\n    key: \"renderScrollBar\",\n    value: function renderScrollBar() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n          height = _this$getThemeProps6.height,\n          style = _this$getThemeProps6.style,\n          enableShadow = _this$getThemeProps6.enableShadow,\n          useGradientFinish = _this$getThemeProps6.useGradientFinish;\n\n      var backgroundColor;\n      var sizeStyle;\n      var otherStyle;\n\n      var flatten = _reactNative.StyleSheet.flatten(style);\n\n      if (flatten) {\n        backgroundColor = flatten.backgroundColor;\n        sizeStyle = _lodash.default.pick(flatten, ['width', 'height']);\n        otherStyle = _lodash.default.omit(flatten, ['width', 'height']);\n      }\n\n      var gradientColor = backgroundColor || _style.Colors.white;\n      return _react.default.createElement(_view.default, {\n        row: true,\n        style: {\n          opacity: this.state.fadeAnim,\n          height: height\n        },\n        useSafeArea: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        onLayout: this.onLayout,\n        onContentSizeChange: this.onContentSizeChange,\n        onScroll: this.onScroll,\n        style: [sizeStyle, _helpers.Constants.isIOS && {\n          overflow: 'visible'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_view.default, {\n        style: [this.styles.container, enableShadow && this.styles.containerShadow, otherStyle],\n        \"bg-white\": true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, this.renderChildren(), this.hasMeasurements() && this.renderSelectedIndicator())), useGradientFinish && this.renderGradient(height, gradientColor));\n    }\n  }, {\n    key: \"renderGradient\",\n    value: function renderGradient(height, tintColor) {\n      var gradientWidth = 28;\n      return _react.default.createElement(_reactNative.Animated.View, {\n        pointerEvents: \"none\",\n        style: {\n          width: gradientWidth,\n          height: height - 2,\n          position: 'absolute',\n          right: 0,\n          opacity: this.state.gradientValue\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_image.default, {\n        source: _assets.default.images.gradient,\n        style: {\n          width: gradientWidth,\n          height: height - 3,\n          tintColor: tintColor\n        },\n        supportRTL: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      switch (this.state.currentMode) {\n        case LAYOUT_MODES.FIT:\n          return this.renderBar();\n\n        case LAYOUT_MODES.SCROLL:\n          return this.renderScrollBar();\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"calcLayoutMode\",\n    value: function calcLayoutMode() {\n      if (this.contentWidth && this.containerWidth) {\n        if (this.contentWidth < this.containerWidth) {\n          this.contentWidth = this.containerWidth;\n          this.itemsWidths = {};\n          this.scrollLayout = false;\n          this.setState({\n            currentMode: LAYOUT_MODES.FIT\n          });\n        } else {\n          this.scrollLayout = true;\n          this.updateIndicatorPosition();\n\n          if (this.state.fadeAnim === 0) {\n            this.setState({\n              fadeAnim: 1\n            });\n          }\n        }\n      }\n    }\n  }]);\n  return TabBar;\n}(_commons.BaseComponent);\n\nexports.default = TabBar;\nTabBar.displayName = 'TabBar';\nTabBar.propTypes = _objectSpread(_objectSpread({}, _reactNative.ViewPropTypes.height), {}, {\n  selectedIndex: _propTypes.default.number,\n  style: _reactNative.ViewPropTypes.style,\n  indicatorStyle: _reactNative.ViewPropTypes.style,\n  isContentIndicator: _propTypes.default.bool,\n  ignoreLastTab: _propTypes.default.bool,\n  disableAnimatedTransition: _propTypes.default.bool,\n  onChangeIndex: _propTypes.default.func,\n  onTabSelected: _propTypes.default.func,\n  mode: _propTypes.default.oneOf(Object.keys(LAYOUT_MODES)),\n  useGradientFinish: _propTypes.default.bool,\n  enableShadow: _propTypes.default.bool\n});\nTabBar.defaultProps = {\n  mode: LAYOUT_MODES.FIT,\n  selectedIndex: 0,\n  height: 51\n};\nTabBar.modes = LAYOUT_MODES;\n\nfunction createStyles() {\n  return _reactNative.StyleSheet.create({\n    container: {\n      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n      borderColor: _style.Colors.dark70\n    },\n    containerShadow: {\n      shadowColor: _style.Colors.dark10,\n      shadowOpacity: 0.09,\n      shadowRadius: 2,\n      shadowOffset: {\n        height: 2,\n        width: 0\n      }\n    },\n    selectedIndicator: {\n      borderBottomWidth: 1.5,\n      borderColor: _style.Colors.blue30\n    },\n    absoluteContainer: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0\n    },\n    linearGradient: {\n      flex: 1\n    }\n  });\n}\n\nTabBar.Item = _TabBarItem.default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/tabBar/index.js"],"names":["LAYOUT_MODES","FIT","SCROLL","TabBar","props","isIgnoredTab","index","getThemeProps","ignoreLastTab","childrenCount","updateIndicatorPosition","hasMeasurements","contentWidth","setState","selectedIndicatorPosition","Animated","Value","calcIndicatorPosition","state","selectedIndex","animateIndicatorPosition","disableAnimatedTransition","newPosition","setValue","spring","toValue","tension","friction","start","onItemLayout","width","_","isUndefined","itemsWidths","scrollLayout","onLayout","event","containerWidth","nativeEvent","layout","currentMode","calcLayoutMode","onContentSizeChange","onScroll","useGradientFinish","x","contentOffset","animateGradientOpacity","overflow","newValue","gradientValue","speed","undefined","React","Children","count","children","itemContentSpacing","isContentIndicator","Spacings","s4","fadeAnim","mode","checkPropsMatch","items","Array","isArray","lbls","forEach","element","push","label","array","array2","dif","i","length","indexOf","labels","getLabels","nextProps","initializeValues","isEqual","differences","getDifferences","console","warn","styles","createStyles","keys","itemWidth","position","isEmpty","itemPosition","invoke","map","child","cloneElement","selected","onPress","onChangeIndex","onTabSelected","indicatorStyle","calcIndicatorWidth","left","interpolate","inputRange","outputRange","selectedIndicator","absoluteContainer","height","style","enableShadow","container","containerShadow","renderChildren","renderSelectedIndicator","backgroundColor","sizeStyle","otherStyle","flatten","StyleSheet","pick","omit","gradientColor","Colors","white","opacity","Constants","isIOS","renderGradient","tintColor","gradientWidth","right","Assets","images","gradient","renderBar","renderScrollBar","BaseComponent","displayName","propTypes","ViewPropTypes","PropTypes","number","bool","func","oneOf","Object","defaultProps","modes","create","borderBottomWidth","hairlineWidth","borderColor","dark70","shadowColor","dark10","shadowOpacity","shadowRadius","shadowOffset","blue30","bottom","linearGradient","flex","Item","TabBarItem"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, ViewPropTypes, Animated, ScrollView} from 'react-native';\nimport {Colors, Spacings} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport {Constants} from '../../helpers';\nimport View from '../view';\nimport Image from '../image';\nimport Assets from '../../assets';\nimport TabBarItem from './TabBarItem';\n\nconst LAYOUT_MODES = {\n  FIT: 'FIT',\n  SCROLL: 'SCROLL'\n};\n\n/**\n * @description: Basic TabBar component\n * @gif: https://media.giphy.com/media/3o751YHFZVlv3Ay4k8/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js\n */\nexport default class TabBar extends BaseComponent {\n  static displayName = 'TabBar';\n  static propTypes = {\n    ...ViewPropTypes.height,\n    /**\n     * current selected tab index\n     */\n    selectedIndex: PropTypes.number,\n    /**\n     * custom style for the tab bar\n     */\n    style: ViewPropTypes.style,\n    /**\n     * custom style for the selected indicator\n     */\n    indicatorStyle: ViewPropTypes.style,\n    /**\n     * whethere the indicator should mark item's content instead of the whole item's width\n     */\n    isContentIndicator: PropTypes.bool,\n    /**\n     * whethere the indicator should mark the last tab or not (onTabSelected will return tab's index when selected)\n     */\n    ignoreLastTab: PropTypes.bool,\n    /**\n     * disable the animated transition of the tab indicator\n     */\n    disableAnimatedTransition: PropTypes.bool,\n    /**\n     * callback for when index has change (will not be called on last tab when passing ignoreLastTab)\n     */\n    onChangeIndex: PropTypes.func,\n    /**\n     * callback for when tab selected\n     */\n    onTabSelected: PropTypes.func,\n    /**\n     * FIT to force the content to fit to screen, or SCROLL to allow content overflow\n     */\n    mode: PropTypes.oneOf(Object.keys(LAYOUT_MODES)),\n    /**\n     * Add gradiant effect for scroll overflow. IMPORTANT: must have a native module available!\n     */\n    useGradientFinish: PropTypes.bool,\n    /**\n     * Show Tab Bar bottom shadow (iOS only)\n     */\n    enableShadow: PropTypes.bool\n  };\n\n  static defaultProps = {\n    mode: LAYOUT_MODES.FIT,\n    selectedIndex: 0,\n    height: 51\n  };\n\n  static modes = LAYOUT_MODES;\n\n  constructor(props) {\n    super(props);\n\n    this.itemsWidths = {};\n    this.contentWidth = undefined;\n    this.containerWidth = undefined;\n    this.childrenCount = React.Children.count(props.children);\n    this.itemContentSpacing = this.getThemeProps().isContentIndicator ? Spacings.s4 : 0;\n\n    this.state = {\n      selectedIndex: props.selectedIndex,\n      selectedIndicatorPosition: new Animated.Value(0),\n      gradientValue: new Animated.Value(1),\n      fadeAnim: 0,\n      currentMode: props.mode\n    };\n\n    this.checkPropsMatch();\n  }\n\n  getLabels(items) {\n    if (Array.isArray(items)) {\n      const lbls = [];\n      items.forEach(element => {\n        lbls.push(element.props.label);\n      });\n      return lbls;\n    }\n  }\n\n  getDifferences(array, array2) {\n    const dif = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i] !== array2[i]) {\n        if (dif.indexOf(i) === -1) {\n          dif.push(i);\n        }\n      }\n    }\n    return dif;\n  }\n\n  componentDidMount() {\n    this.labels = this.getLabels(this.props.children);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (React.Children.count(nextProps.children) !== this.childrenCount) {\n      /** dynamic children count */\n      this.initializeValues(nextProps);\n    } else if (this.scrollLayout) {\n      const labels = this.getLabels(nextProps.children);\n      if (!_.isEqual(this.labels, labels)) {\n        /** dynamic items' labels */\n        const differences = this.getDifferences(this.labels, labels);\n        differences.forEach(element => {\n          this.itemsWidths[element] = undefined;\n        });\n        this.labels = labels;\n      }\n    }\n\n    if (nextProps.selectedIndex !== this.state.selectedIndex && this.props.selectedIndex !== nextProps.selectedIndex) {\n      this.animateIndicatorPosition(nextProps.selectedIndex);\n      this.setState({selectedIndex: nextProps.selectedIndex});\n    }\n  }\n\n  initializeValues(props) {\n    if (!this.scrollLayout) {\n      this.itemsWidths = {};\n    }\n    this.contentWidth = undefined;\n    this.childrenCount = React.Children.count(props.children);\n\n    this.setState({currentMode: props.mode});\n  }\n\n  checkPropsMatch() {\n    const {selectedIndex} = this.state;\n    if (this.isIgnoredTab(selectedIndex)) {\n      console.warn('Your selectedIndex is the last tab. Please change it or remove the ignoreLastTab prop');\n    }\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps());\n  }\n\n  isIgnoredTab = index => {\n    const {ignoreLastTab} = this.getThemeProps();\n    return ignoreLastTab && index === this.childrenCount - 1;\n  };\n\n  /** Indicator */\n\n  hasMeasurements() {\n    return _.keys(this.itemsWidths).length === this.childrenCount;\n  }\n\n  updateIndicatorPosition = () => {\n    if (this.hasMeasurements() && this.contentWidth) {\n      this.setState({\n        selectedIndicatorPosition: new Animated.Value(this.calcIndicatorPosition(this.state.selectedIndex))\n      });\n    }\n  };\n\n  calcIndicatorWidth() {\n    if (this.childrenCount === 0) {\n      return '0%';\n    }\n    const itemWidth = this.itemsWidths[this.state.selectedIndex] - this.itemContentSpacing * 2;\n    const width = (itemWidth / this.contentWidth) * 100;\n    return `${width}%`;\n  }\n\n  calcIndicatorPosition(index) {\n    let position = 0;\n    if (!_.isEmpty(this.itemsWidths)) {\n      let itemPosition = 0;\n      for (let i = 0; i < index; i++) {\n        itemPosition += this.itemsWidths[i];\n      }\n      itemPosition += this.itemContentSpacing;\n      position = (itemPosition / this.contentWidth) * 100;\n    } else {\n      position = index * (100 / this.childrenCount) + this.itemContentSpacing;\n    }\n    return position;\n  }\n\n  animateIndicatorPosition = index => {\n    const {disableAnimatedTransition} = this.getThemeProps();\n    const {selectedIndicatorPosition} = this.state;\n\n    const newPosition = this.calcIndicatorPosition(index);\n\n    if (disableAnimatedTransition) {\n      selectedIndicatorPosition.setValue(newPosition);\n    } else {\n      Animated.spring(selectedIndicatorPosition, {\n        toValue: newPosition,\n        tension: 30,\n        friction: 8\n      }).start();\n    }\n  };\n\n  onChangeIndex(index) {\n    if (this.isIgnoredTab(index)) {\n      // ignoring the last tab selection\n    } else {\n      this.animateIndicatorPosition(index);\n      this.setState({selectedIndex: index});\n      _.invoke(this.props, 'onChangeIndex', index);\n    }\n  }\n\n  onTabSelected(index) {\n    _.invoke(this.props, 'onTabSelected', index);\n  }\n\n  onItemLayout = (index, width) => {\n    if (_.isUndefined(this.itemsWidths[index])) {\n      if (this.isIgnoredTab(index)) {\n        this.itemsWidths[index] = 0;\n      } else {\n        this.itemsWidths[index] = width;\n      }\n    } else if (this.scrollLayout) {\n      this.itemsWidths[index + 1] = this.itemsWidths[index];\n      this.itemsWidths[index] = width;\n    }\n    this.updateIndicatorPosition();\n  };\n\n  /** Renders */\n\n  renderChildren() {\n    const {selectedIndex} = this.state;\n    const children = React.Children.map(this.props.children, (child, index) => {\n      return React.cloneElement(child, {\n        selected: selectedIndex === index,\n        width: this.itemsWidths[index], // HACK: keep initial item's width for indicator's width\n        onPress: () => {\n          this.onChangeIndex(index);\n          this.onTabSelected(index);\n          _.invoke(child.props, 'onPress');\n        },\n        onLayout: width => {\n          this.onItemLayout(index, width);\n        }\n      });\n    });\n    return children;\n  }\n\n  renderSelectedIndicator() {\n    const {indicatorStyle} = this.getThemeProps();\n    const {selectedIndicatorPosition} = this.state;\n\n    // if only one tab - don't render indicator at all\n    if (this.childrenCount - 1 === 0) {\n      return;\n    }\n\n    const width = this.calcIndicatorWidth();\n    const left = selectedIndicatorPosition.interpolate({\n      inputRange: [0, 100],\n      outputRange: ['0%', '100%']\n    });\n    return (\n      <Animated.View\n        style={[this.styles.selectedIndicator, this.styles.absoluteContainer, {left, width}, indicatorStyle]}\n      />\n    );\n  }\n\n  renderBar() {\n    const {height, style, enableShadow} = this.getThemeProps();\n    return (\n      <View\n        style={[this.styles.container, enableShadow && this.styles.containerShadow, style]}\n        bg-white\n        row\n        height={height}\n        onLayout={this.onLayout}\n        useSafeArea\n      >\n        {this.renderChildren()}\n        {this.hasMeasurements() && this.renderSelectedIndicator()}\n      </View>\n    );\n  }\n\n  renderScrollBar() {\n    const {height, style, enableShadow, useGradientFinish} = this.getThemeProps();\n    let backgroundColor;\n    let sizeStyle;\n    let otherStyle;\n    const flatten = StyleSheet.flatten(style);\n    if (flatten) {\n      backgroundColor = flatten.backgroundColor;\n      sizeStyle = _.pick(flatten, ['width', 'height']);\n      otherStyle = _.omit(flatten, ['width', 'height']);\n    }\n    const gradientColor = backgroundColor || Colors.white;\n\n    return (\n      <View row style={{opacity: this.state.fadeAnim, height}} useSafeArea>\n        <ScrollView\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          onLayout={this.onLayout}\n          onContentSizeChange={this.onContentSizeChange}\n          onScroll={this.onScroll}\n          style={[sizeStyle, Constants.isIOS && {overflow: 'visible'}]}\n        >\n          <View style={[this.styles.container, enableShadow && this.styles.containerShadow, otherStyle]} bg-white row>\n            {this.renderChildren()}\n            {this.hasMeasurements() && this.renderSelectedIndicator()}\n          </View>\n        </ScrollView>\n        {useGradientFinish && this.renderGradient(height, gradientColor)}\n      </View>\n    );\n  }\n\n  renderGradient(height, tintColor) {\n    const gradientWidth = 28;\n    return (\n      <Animated.View\n        pointerEvents=\"none\"\n        style={{\n          width: gradientWidth,\n          height: height - 2,\n          position: 'absolute',\n          right: 0,\n          opacity: this.state.gradientValue\n        }}\n      >\n        <Image\n          source={Assets.images.gradient}\n          style={{width: gradientWidth, height: height - 3, tintColor}}\n          supportRTL\n        />\n      </Animated.View>\n    );\n  }\n\n  render() {\n    switch (this.state.currentMode) {\n      case LAYOUT_MODES.FIT:\n        return this.renderBar();\n      case LAYOUT_MODES.SCROLL:\n        return this.renderScrollBar();\n      default:\n        break;\n    }\n  }\n\n  /** Render Events */\n\n  onLayout = event => {\n    this.containerWidth = event.nativeEvent.layout.width;\n\n    switch (this.state.currentMode) {\n      case LAYOUT_MODES.FIT:\n        this.contentWidth = this.containerWidth;\n        this.updateIndicatorPosition();\n        break;\n      case LAYOUT_MODES.SCROLL:\n        this.calcLayoutMode();\n        break;\n      default:\n        break;\n    }\n  };\n\n  onContentSizeChange = width => {\n    this.contentWidth = width;\n    this.calcLayoutMode();\n  };\n\n  calcLayoutMode() {\n    if (this.contentWidth && this.containerWidth) {\n      if (this.contentWidth < this.containerWidth) {\n        // clean and change to FIT layout\n        this.contentWidth = this.containerWidth;\n        this.itemsWidths = {};\n        this.scrollLayout = false;\n        this.setState({currentMode: LAYOUT_MODES.FIT});\n      } else {\n        // display SCROLL layout\n        this.scrollLayout = true;\n        this.updateIndicatorPosition();\n        if (this.state.fadeAnim === 0) {\n          this.setState({fadeAnim: 1});\n        }\n      }\n    }\n  }\n\n  onScroll = event => {\n    const {useGradientFinish} = this.getThemeProps();\n    if (useGradientFinish) {\n      const x = event.nativeEvent.contentOffset.x;\n      this.animateGradientOpacity(x);\n    }\n  };\n\n  animateGradientOpacity = x => {\n    const overflow = this.contentWidth - this.containerWidth;\n    const newValue = x > 0 && x >= overflow - 1 ? 0 : 1;\n\n    Animated.spring(this.state.gradientValue, {\n      toValue: newValue,\n      speed: 20\n    }).start();\n  };\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      borderBottomWidth: StyleSheet.hairlineWidth,\n      borderColor: Colors.dark70\n    },\n    containerShadow: {\n      shadowColor: Colors.dark10,\n      shadowOpacity: 0.09,\n      shadowRadius: 2,\n      shadowOffset: {height: 2, width: 0}\n    },\n    selectedIndicator: {\n      borderBottomWidth: 1.5,\n      borderColor: Colors.blue30\n    },\n    absoluteContainer: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0\n    },\n    linearGradient: {\n      flex: 1\n    }\n  });\n}\n\nTabBar.Item = TabBarItem;\n"]},"metadata":{},"sourceType":"script"}