{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _text = _interopRequireDefault(require(\"../text\"));\n\nvar _pageControl = _interopRequireDefault(require(\"../pageControl\"));\n\nvar presenter = _interopRequireWildcard(require(\"./CarouselPresenter\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\carousel\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PAGE_CONTROL_POSITIONS = {\n  OVER: 'over',\n  UNDER: 'under'\n};\n\nvar Carousel = function (_BaseComponent) {\n  (0, _inherits2.default)(Carousel, _BaseComponent);\n\n  var _super = _createSuper(Carousel);\n\n  function Carousel(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Carousel);\n    _this = _super.call(this, props);\n\n    _this.onOrientationChanged = function () {\n      if (!_this.props.pageWidth || _this.props.loop) {\n        _this.setState({\n          pageWidth: _helpers.Constants.screenWidth\n        });\n\n        _this.goToPage(_this.state.currentPage, true);\n      }\n    };\n\n    _this.updateOffset = function () {\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var centerOffset = _helpers.Constants.isIOS && _this.shouldUsePageWidth() ? (_helpers.Constants.screenWidth - _this.state.pageWidth) / 2 : 0;\n      var x = presenter.calcOffset(_this.props, _this.state) - centerOffset;\n\n      if (_this.carousel) {\n        _this.carousel.current.scrollTo({\n          x: x,\n          animated: animated\n        });\n\n        if (_helpers.Constants.isAndroid) {\n          _this.onMomentumScrollEnd();\n        }\n      }\n    };\n\n    _this.getSnapToOffsets = function () {\n      var itemSpacings = _this.props.itemSpacings;\n      var _this$state = _this.state,\n          containerWidth = _this$state.containerWidth,\n          pageWidth = _this$state.pageWidth;\n\n      if (containerWidth) {\n        var spacings = pageWidth === containerWidth ? 0 : itemSpacings;\n        var initialBreak = pageWidth - (containerWidth - pageWidth - spacings) / 2;\n\n        var snapToOffsets = _lodash.default.times(presenter.getChildrenLength(_this.props), function (index) {\n          return initialBreak + index * pageWidth;\n        });\n\n        return snapToOffsets;\n      }\n    };\n\n    _this.onContainerLayout = function (_ref) {\n      var containerWidth = _ref.nativeEvent.layout.width;\n      var _this$props = _this.props,\n          initialPage = _this$props.initialPage,\n          pageWidth = _this$props.pageWidth;\n      var update = {\n        containerWidth: containerWidth\n      };\n\n      if (!pageWidth) {\n        update.pageWidth = containerWidth;\n        update.initialOffset = {\n          x: presenter.calcOffset(_this.props, {\n            currentPage: initialPage,\n            pageWidth: containerWidth\n          })\n        };\n      }\n\n      _this.setState(update);\n    };\n\n    _this.onContentSizeChange = function () {\n      if (_helpers.Constants.isAndroid) {\n        _this.updateOffset();\n      }\n    };\n\n    _this.onMomentumScrollEnd = function () {\n      var _this$state2 = _this.state,\n          currentStandingPage = _this$state2.currentStandingPage,\n          currentPage = _this$state2.currentPage;\n\n      var index = _this.getCalcIndex(currentPage);\n\n      _this.setState({\n        currentStandingPage: index\n      });\n\n      if (currentStandingPage !== index) {\n        _lodash.default.invoke(_this.props, 'onChangePage', index, currentStandingPage);\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (!_this.skippedInitialScroll) {\n        _this.skippedInitialScroll = true;\n        return;\n      }\n\n      var loop = _this.props.loop;\n      var pageWidth = _this.state.pageWidth;\n      var offsetX = event.nativeEvent.contentOffset.x;\n\n      if (offsetX >= 0) {\n        var newPage = presenter.calcPageIndex(offsetX, _this.props, pageWidth);\n\n        _this.setState({\n          currentPage: newPage\n        });\n      }\n\n      if (loop && presenter.isOutOfBounds(offsetX, _this.props, pageWidth)) {\n        _this.updateOffset();\n      }\n\n      _lodash.default.invoke(_this.props, 'onScroll', event);\n    };\n\n    _this.renderChild = function (child, key) {\n      var paddingLeft = _this.shouldUsePageWidth() ? _this.props.itemSpacings : undefined;\n      return _react.default.createElement(_view.default, {\n        style: {\n          width: _this.state.pageWidth,\n          paddingLeft: paddingLeft\n        },\n        key: key,\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }\n      }, child);\n    };\n\n    _this.carousel = _react.default.createRef();\n    var defaultPageWidth = props.loop ? _helpers.Constants.screenWidth : props.pageWidth + props.itemSpacings || _helpers.Constants.screenWidth;\n    _this.state = {\n      containerWidth: undefined,\n      currentPage: _this.shouldUsePageWidth() ? _this.getCalcIndex(props.initialPage) : props.initialPage,\n      currentStandingPage: props.initialPage,\n      pageWidth: defaultPageWidth,\n      initialOffset: {\n        x: presenter.calcOffset(props, {\n          currentPage: props.initialPage,\n          pageWidth: defaultPageWidth\n        })\n      }\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _helpers.Constants.addDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _helpers.Constants.removeDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.props);\n    }\n  }, {\n    key: \"goToPage\",\n    value: function goToPage(pageIndex) {\n      var _this2 = this;\n\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.setState({\n        currentPage: this.getCalcIndex(pageIndex)\n      }, function () {\n        return _this2.updateOffset(animated);\n      });\n    }\n  }, {\n    key: \"getCalcIndex\",\n    value: function getCalcIndex(index) {\n      if (_helpers.Constants.isRTL && _helpers.Constants.isAndroid) {\n        var length = presenter.getChildrenLength(this.props) - 1;\n        return length - index;\n      }\n\n      return index;\n    }\n  }, {\n    key: \"shouldUsePageWidth\",\n    value: function shouldUsePageWidth() {\n      var _this$props2 = this.props,\n          loop = _this$props2.loop,\n          pageWidth = _this$props2.pageWidth;\n      return !loop && pageWidth;\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this3 = this;\n\n      var containerWidth = this.state.containerWidth;\n\n      if (!containerWidth && !this.shouldUsePageWidth()) {\n        return null;\n      }\n\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          loop = _this$props3.loop;\n      var length = presenter.getChildrenLength(this.props);\n\n      var childrenArray = _react.default.Children.map(children, function (child, index) {\n        return _this3.renderChild(child, \"\" + index);\n      });\n\n      if (loop) {\n        childrenArray.unshift(this.renderChild(children[length - 1], length - 1 + \"-clone\"));\n        childrenArray.push(this.renderChild(children[0], 0 + \"-clone\"));\n      }\n\n      return childrenArray;\n    }\n  }, {\n    key: \"renderPageControl\",\n    value: function renderPageControl() {\n      var _this$props4 = this.props,\n          pageControlPosition = _this$props4.pageControlPosition,\n          pageControlProps = _this$props4.pageControlProps;\n\n      if (pageControlPosition) {\n        var pagesCount = presenter.getChildrenLength(this.props);\n        var containerStyle = pageControlPosition === PAGE_CONTROL_POSITIONS.UNDER ? {\n          marginVertical: 16\n        } : {\n          position: 'absolute',\n          bottom: 16,\n          alignSelf: 'center'\n        };\n        return _react.default.createElement(_pageControl.default, (0, _extends2.default)({\n          size: 6,\n          containerStyle: containerStyle,\n          inactiveColor: _style.Colors.dark60,\n          color: _style.Colors.dark20\n        }, pageControlProps, {\n          numOfPages: pagesCount,\n          currentPage: this.getCalcIndex(this.state.currentPage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"renderCounter\",\n    value: function renderCounter() {\n      var _this$props5 = this.props,\n          pageWidth = _this$props5.pageWidth,\n          showCounter = _this$props5.showCounter,\n          counterTextStyle = _this$props5.counterTextStyle;\n      var currentPage = this.state.currentPage;\n      var pagesCount = presenter.getChildrenLength(this.props);\n\n      if (showCounter && !pageWidth) {\n        return _react.default.createElement(_view.default, {\n          center: true,\n          style: this.styles.counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(_text.default, {\n          dark80: true,\n          text90: true,\n          style: [{\n            fontWeight: 'bold'\n          }, counterTextStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }\n        }, currentPage + 1, \"/\", pagesCount));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          containerStyle = _this$props6.containerStyle,\n          itemSpacings = _this$props6.itemSpacings,\n          others = (0, _objectWithoutProperties2.default)(_this$props6, [\"containerStyle\", \"itemSpacings\"]);\n      var initialOffset = this.state.initialOffset;\n      var scrollContainerStyle = this.shouldUsePageWidth() ? {\n        paddingRight: itemSpacings\n      } : undefined;\n      var snapToOffsets = this.getSnapToOffsets();\n      return _react.default.createElement(_view.default, {\n        style: containerStyle,\n        onLayout: this.onContainerLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, (0, _extends2.default)({}, others, {\n        ref: this.carousel,\n        contentContainerStyle: scrollContainerStyle,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        snapToOffsets: snapToOffsets,\n        decelerationRate: \"fast\",\n        contentOffset: initialOffset,\n        scrollEventThrottle: 200,\n        onContentSizeChange: this.onContentSizeChange,\n        onScroll: this.onScroll,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }), this.renderChildren()), this.renderPageControl(), this.renderCounter());\n    }\n  }]);\n  return Carousel;\n}(_commons.BaseComponent);\n\nexports.default = Carousel;\nCarousel.displayName = 'Carousel';\nCarousel.propTypes = {\n  initialPage: _propTypes.default.number,\n  pageWidth: _propTypes.default.number,\n  itemSpacings: _propTypes.default.number,\n  loop: _propTypes.default.bool,\n  onChangePage: _propTypes.default.func,\n  onScroll: _propTypes.default.func,\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  pageControlProps: _propTypes.default.shape(_pageControl.default.propTypes),\n  pageControlPosition: _propTypes.default.oneOf(Object.values(PAGE_CONTROL_POSITIONS)),\n  showCounter: _propTypes.default.bool,\n  counterTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array])\n};\nCarousel.defaultProps = {\n  initialPage: 0,\n  itemSpacings: 12\n};\nCarousel.pageControlPositions = PAGE_CONTROL_POSITIONS;\n\nfunction createStyles() {\n  return _reactNative.StyleSheet.create({\n    counter: {\n      paddingHorizontal: 8,\n      paddingVertical: 3,\n      borderRadius: 20,\n      backgroundColor: _style.Colors.rgba(_style.Colors.black, 0.6),\n      position: 'absolute',\n      top: 12,\n      right: 12\n    }\n  });\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/carousel/index.js"],"names":["PAGE_CONTROL_POSITIONS","OVER","UNDER","Carousel","props","onOrientationChanged","pageWidth","loop","setState","Constants","screenWidth","goToPage","state","currentPage","updateOffset","animated","centerOffset","isIOS","shouldUsePageWidth","x","presenter","calcOffset","carousel","current","scrollTo","isAndroid","onMomentumScrollEnd","getSnapToOffsets","itemSpacings","containerWidth","spacings","initialBreak","snapToOffsets","_","times","getChildrenLength","index","onContainerLayout","nativeEvent","layout","width","initialPage","update","initialOffset","onContentSizeChange","currentStandingPage","getCalcIndex","invoke","onScroll","event","skippedInitialScroll","offsetX","contentOffset","newPage","calcPageIndex","isOutOfBounds","renderChild","child","key","paddingLeft","undefined","React","createRef","defaultPageWidth","addDimensionsEventListener","removeDimensionsEventListener","styles","createStyles","pageIndex","isRTL","length","children","childrenArray","Children","map","unshift","push","pageControlPosition","pageControlProps","pagesCount","containerStyle","marginVertical","position","bottom","alignSelf","Colors","dark60","dark20","showCounter","counterTextStyle","counter","fontWeight","others","scrollContainerStyle","paddingRight","renderChildren","renderPageControl","renderCounter","BaseComponent","displayName","propTypes","PropTypes","number","bool","onChangePage","func","oneOfType","object","array","shape","PageControl","oneOf","Object","values","defaultProps","pageControlPositions","StyleSheet","create","paddingHorizontal","paddingVertical","borderRadius","backgroundColor","rgba","black","top","right"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {ScrollView, StyleSheet} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {Colors} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport View from '../view';\nimport Text from '../text';\nimport PageControl from '../pageControl';\nimport * as presenter from './CarouselPresenter';\n\nconst PAGE_CONTROL_POSITIONS = {\n  OVER: 'over',\n  UNDER: 'under'\n};\n\n/**\n * @description: Carousel for scrolling pages horizontally\n * @gif: https://media.giphy.com/media/l0HU7f8gjpRlMRhKw/giphy.gif, https://media.giphy.com/media/3oFzmcjX9OhpyckhcQ/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.js\n * @extends: ScrollView\n * @extendsLink: https://facebook.github.io/react-native/docs/scrollview\n * @notes: This is screed width Component\n */\nexport default class Carousel extends BaseComponent {\n  static displayName = 'Carousel';\n\n  static propTypes = {\n    /**\n     * the first page to start with\n     */\n    initialPage: PropTypes.number,\n    /**\n     * the page width (all pages should have the same width). Does not work if passing 'loop' prop\n     */\n    pageWidth: PropTypes.number,\n    /**\n     * the spacing between the items\n     */\n    itemSpacings: PropTypes.number,\n    /**\n     * if true, will have infinite scroll\n     */\n    loop: PropTypes.bool,\n    /**\n     * callback for when page has changed\n     */\n    onChangePage: PropTypes.func,\n    /**\n     * callback for onScroll event of the internal ScrollView\n     */\n    onScroll: PropTypes.func,\n    /**\n     * the carousel style\n     */\n    containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * PageControl component props\n     */\n    pageControlProps: PropTypes.shape(PageControl.propTypes),\n    /**\n     * The position of the PageControl component ['over', 'under'], otherwise it won't display\n     */\n    pageControlPosition: PropTypes.oneOf(Object.values(PAGE_CONTROL_POSITIONS)),\n    /**\n     * whether to show a page counter (will not work with pageWidths)\n     */\n    showCounter: PropTypes.bool,\n    /**\n     * the counter's text style\n     */\n    counterTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n  };\n\n  static defaultProps = {\n    initialPage: 0,\n    itemSpacings: 12\n  };\n\n  static pageControlPositions = PAGE_CONTROL_POSITIONS;\n\n  constructor(props) {\n    super(props);\n\n    this.carousel = React.createRef();\n    const defaultPageWidth = props.loop\n      ? Constants.screenWidth\n      : props.pageWidth + props.itemSpacings || Constants.screenWidth;\n\n    this.state = {\n      containerWidth: undefined,\n      currentPage: this.shouldUsePageWidth() ? this.getCalcIndex(props.initialPage) : props.initialPage,\n      currentStandingPage: props.initialPage,\n      pageWidth: defaultPageWidth,\n      initialOffset: {x: presenter.calcOffset(props, {currentPage: props.initialPage, pageWidth: defaultPageWidth})}\n    };\n  }\n\n  componentDidMount() {\n    Constants.addDimensionsEventListener(this.onOrientationChanged);\n  }\n\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.onOrientationChanged);\n  }\n\n  onOrientationChanged = () => {\n    if (!this.props.pageWidth || this.props.loop) {\n      this.setState({pageWidth: Constants.screenWidth});\n      this.goToPage(this.state.currentPage, true);\n    }\n  };\n\n  generateStyles() {\n    this.styles = createStyles(this.props);\n  }\n\n  updateOffset = (animated = false) => {\n    const centerOffset =\n      Constants.isIOS && this.shouldUsePageWidth() ? (Constants.screenWidth - this.state.pageWidth) / 2 : 0;\n    const x = presenter.calcOffset(this.props, this.state) - centerOffset;\n\n    if (this.carousel) {\n      this.carousel.current.scrollTo({x, animated});\n\n      if (Constants.isAndroid) {\n        // this is done to handle onMomentumScrollEnd not being called in Android:\n        // https://github.com/facebook/react-native/issues/11693\n        // https://github.com/facebook/react-native/issues/19246\n        this.onMomentumScrollEnd();\n      }\n    }\n  };\n\n  goToPage(pageIndex, animated = true) {\n    this.setState({currentPage: this.getCalcIndex(pageIndex)}, () => this.updateOffset(animated));\n  }\n\n  getCalcIndex(index) {\n    // to handle scrollView index issue in Android's RTL layout\n    if (Constants.isRTL && Constants.isAndroid) {\n      const length = presenter.getChildrenLength(this.props) - 1;\n      return length - index;\n    }\n    return index;\n  }\n\n  getSnapToOffsets = () => {\n    const {itemSpacings} = this.props;\n    const {containerWidth, pageWidth} = this.state;\n\n    if (containerWidth) {\n      const spacings = pageWidth === containerWidth ? 0 : itemSpacings;\n      const initialBreak = pageWidth - (containerWidth - pageWidth - spacings) / 2;\n      const snapToOffsets = _.times(presenter.getChildrenLength(this.props), index => initialBreak + index * pageWidth);\n      return snapToOffsets;\n    }\n  };\n\n  shouldUsePageWidth() {\n    const {loop, pageWidth} = this.props;\n    return !loop && pageWidth;\n  }\n\n  onContainerLayout = ({\n    nativeEvent: {\n      layout: {width: containerWidth}\n    }\n  }) => {\n    const {initialPage, pageWidth} = this.props;\n    const update = {containerWidth};\n    if (!pageWidth) {\n      update.pageWidth = containerWidth;\n      update.initialOffset = {\n        x: presenter.calcOffset(this.props, {currentPage: initialPage, pageWidth: containerWidth})\n      };\n    }\n    this.setState(update);\n  };\n\n  onContentSizeChange = () => {\n    // this is to handle initial scroll position (content offset)\n    if (Constants.isAndroid) {\n      this.updateOffset();\n    }\n  };\n\n  onMomentumScrollEnd = () => {\n    // finished full page scroll\n    const {currentStandingPage, currentPage} = this.state;\n    const index = this.getCalcIndex(currentPage);\n    this.setState({currentStandingPage: index});\n    if (currentStandingPage !== index) {\n      _.invoke(this.props, 'onChangePage', index, currentStandingPage);\n    }\n  };\n\n  onScroll = event => {\n    if (!this.skippedInitialScroll) {\n      this.skippedInitialScroll = true;\n      return;\n    }\n\n    const {loop} = this.props;\n    const {pageWidth} = this.state;\n    const offsetX = event.nativeEvent.contentOffset.x;\n\n    if (offsetX >= 0) {\n      const newPage = presenter.calcPageIndex(offsetX, this.props, pageWidth);\n      this.setState({currentPage: newPage});\n    }\n\n    if (loop && presenter.isOutOfBounds(offsetX, this.props, pageWidth)) {\n      this.updateOffset();\n    }\n\n    _.invoke(this.props, 'onScroll', event);\n  };\n\n  renderChild = (child, key) => {\n    const paddingLeft = this.shouldUsePageWidth() ? this.props.itemSpacings : undefined;\n\n    return (\n      <View style={{width: this.state.pageWidth, paddingLeft}} key={key} collapsable={false}>\n        {child}\n      </View>\n    );\n  };\n\n  renderChildren() {\n    const {containerWidth} = this.state;\n    if (!containerWidth && !this.shouldUsePageWidth()) {\n      return null;\n    }\n\n    const {children, loop} = this.props;\n    const length = presenter.getChildrenLength(this.props);\n\n    const childrenArray = React.Children.map(children, (child, index) => {\n      return this.renderChild(child, `${index}`);\n    });\n\n    if (loop) {\n      childrenArray.unshift(this.renderChild(children[length - 1], `${length - 1}-clone`));\n      childrenArray.push(this.renderChild(children[0], `${0}-clone`));\n    }\n\n    return childrenArray;\n  }\n\n  renderPageControl() {\n    const {pageControlPosition, pageControlProps} = this.props;\n\n    if (pageControlPosition) {\n      const pagesCount = presenter.getChildrenLength(this.props);\n      const containerStyle =\n        pageControlPosition === PAGE_CONTROL_POSITIONS.UNDER\n          ? {marginVertical: 16}\n          : {position: 'absolute', bottom: 16, alignSelf: 'center'};\n\n      return (\n        <PageControl\n          size={6}\n          containerStyle={containerStyle}\n          inactiveColor={Colors.dark60}\n          color={Colors.dark20}\n          {...pageControlProps}\n          numOfPages={pagesCount}\n          currentPage={this.getCalcIndex(this.state.currentPage)}\n        />\n      );\n    }\n  }\n\n  renderCounter() {\n    const {pageWidth, showCounter, counterTextStyle} = this.props;\n    const {currentPage} = this.state;\n    const pagesCount = presenter.getChildrenLength(this.props);\n\n    if (showCounter && !pageWidth) {\n      return (\n        <View center style={this.styles.counter}>\n          <Text dark80 text90 style={[{fontWeight: 'bold'}, counterTextStyle]}>\n            {currentPage + 1}/{pagesCount}\n          </Text>\n        </View>\n      );\n    }\n  }\n\n  render() {\n    const {containerStyle, itemSpacings, ...others} = this.props;\n    const {initialOffset} = this.state;\n\n    const scrollContainerStyle = this.shouldUsePageWidth() ? {paddingRight: itemSpacings} : undefined;\n    const snapToOffsets = this.getSnapToOffsets();\n\n    return (\n      <View style={containerStyle} onLayout={this.onContainerLayout}>\n        <ScrollView\n          {...others}\n          ref={this.carousel}\n          contentContainerStyle={scrollContainerStyle}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          snapToOffsets={snapToOffsets}\n          decelerationRate=\"fast\"\n          contentOffset={initialOffset} // iOS only\n          scrollEventThrottle={200}\n          onContentSizeChange={this.onContentSizeChange}\n          onScroll={this.onScroll}\n          onMomentumScrollEnd={this.onMomentumScrollEnd}\n        >\n          {this.renderChildren()}\n        </ScrollView>\n        {this.renderPageControl()}\n        {this.renderCounter()}\n      </View>\n    );\n  }\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    counter: {\n      paddingHorizontal: 8,\n      paddingVertical: 3, // height: 24,\n      borderRadius: 20,\n      backgroundColor: Colors.rgba(Colors.black, 0.6),\n      position: 'absolute',\n      top: 12,\n      right: 12\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}