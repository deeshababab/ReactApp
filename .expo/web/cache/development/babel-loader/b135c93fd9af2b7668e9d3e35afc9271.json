{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nrequire(\"react\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _Validators = _interopRequireDefault(require(\"./Validators\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar VALIDATORS = {\n  REQUIRED: 'required',\n  EMAIL: 'email',\n  URL: 'url',\n  NUMBER: 'number'\n};\n\nvar BaseInput = function (_BaseComponent) {\n  (0, _inherits2.default)(BaseInput, _BaseComponent);\n\n  var _super = _createSuper(BaseInput);\n\n  function BaseInput(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BaseInput);\n    _this = _super.call(this, props);\n\n    _this.onFocus = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _lodash.default.invoke.apply(_lodash.default, [_this.props, 'onFocus'].concat(args));\n\n      _this.setState({\n        focused: true\n      });\n    };\n\n    _this.onBlur = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _lodash.default.invoke.apply(_lodash.default, [_this.props, 'onBlur'].concat(args));\n\n      _this.setState({\n        focused: false\n      });\n\n      var validateOnBlur = _this.props.validateOnBlur;\n\n      if (validateOnBlur) {\n        _this.validate();\n      }\n    };\n\n    _this.onChange = function (event) {\n      _lodash.default.invoke(_this.props, 'onChange', event);\n    };\n\n    _this.onChangeText = function (text) {\n      _lodash.default.invoke(_this.props, 'onChangeText', text);\n\n      _this.setState({\n        value: text\n      });\n\n      var validateOnChange = _this.props.validateOnChange;\n\n      if (validateOnChange) {\n        setImmediate(_this.validate);\n      }\n    };\n\n    _this.validate = function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _lodash.default.get((0, _assertThisInitialized2.default)(_this), 'state.value');\n      var dryRun = arguments.length > 1 ? arguments[1] : undefined;\n      var validate = _this.props.validate;\n\n      if (!validate) {\n        return;\n      }\n\n      var isValid = true;\n      var inputValidators = _lodash.default.isArray(validate) ? validate : [validate];\n      var failingValidatorIndex;\n\n      for (var index = 0; index < inputValidators.length; index++) {\n        var validator = inputValidators[index];\n        var validatorFunction = void 0;\n\n        if (_lodash.default.isFunction(validator)) {\n          validatorFunction = validator;\n        } else if (_lodash.default.isString(validator) && !!_Validators.default[validator]) {\n          validatorFunction = _Validators.default[validator];\n        }\n\n        if (!validatorFunction(value)) {\n          isValid = false;\n          failingValidatorIndex = index;\n          break;\n        }\n      }\n\n      var error;\n\n      if (!isValid) {\n        var errorMessage = _this.props.errorMessage;\n\n        if (_lodash.default.isArray(errorMessage)) {\n          error = errorMessage[failingValidatorIndex];\n        } else {\n          error = errorMessage;\n        }\n      } else {\n        error = undefined;\n      }\n\n      if (!dryRun) {\n        if (_this.state.valid !== isValid) {\n          _lodash.default.invoke(_this.props, 'onChangeValidity', isValid);\n        }\n\n        _this.setState({\n          error: error,\n          valid: isValid\n        });\n      }\n\n      return isValid;\n    };\n\n    _this.state = _objectSpread(_objectSpread({}, _this.state), {}, {\n      value: props.value,\n      focused: false,\n      valid: false,\n      error: undefined\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(BaseInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var validateOnStart = this.props.validateOnStart;\n\n      if (validateOnStart) {\n        this.validate();\n      }\n    }\n  }, {\n    key: \"getTypography\",\n    value: function getTypography() {\n      return this.extractTypographyValue() || _style.Typography.text70;\n    }\n  }, {\n    key: \"hasText\",\n    value: function hasText() {\n      var value = this.state.value;\n      return value && value.length > 0;\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.input.isFocused();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n    }\n  }, {\n    key: \"isRequiredField\",\n    value: function isRequiredField() {\n      var validate = this.props.validate;\n\n      if (_lodash.default.isArray(validate)) {\n        return validate.indexOf[VALIDATORS.REQUIRED] !== -1;\n      }\n\n      return validate === VALIDATORS.REQUIRED;\n    }\n  }, {\n    key: \"getRequiredPlaceholder\",\n    value: function getRequiredPlaceholder(placeholder) {\n      if (this.isRequiredField()) {\n        return placeholder + \" *\";\n      }\n\n      return placeholder;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage() {\n      var propsError = this.props.error;\n      var stateError = this.state.error;\n      return propsError || stateError;\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor(value) {\n      if (this.state.focused) {\n        return _style.Colors.dark10;\n      } else {\n        return _lodash.default.isEmpty(value) ? _style.Colors.dark40 : _style.Colors.dark10;\n      }\n    }\n  }, {\n    key: \"toggleExpandableModal\",\n    value: function toggleExpandableModal() {\n      var _this$input;\n\n      return (_this$input = this.input).toggleExpandableModal.apply(_this$input, arguments);\n    }\n  }]);\n  return BaseInput;\n}(_commons.BaseComponent);\n\nexports.default = BaseInput;\nBaseInput.displayName = 'BaseInput';\nBaseInput.propTypes = _objectSpread(_objectSpread({}, _reactNative.TextInput.propTypes), {}, {\n  color: _propTypes.default.string,\n  containerStyle: _reactNative.ViewPropTypes.style,\n  validate: _propTypes.default.oneOfType([_propTypes.default.oneOf(_lodash.default.values(VALIDATORS)), _propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.oneOf(_lodash.default.values(VALIDATORS)), _propTypes.default.func]))]),\n  errorMessage: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),\n  validateOnStart: _propTypes.default.bool,\n  validateOnChange: _propTypes.default.bool,\n  validateOnBlur: _propTypes.default.bool,\n  onChangeValidity: _propTypes.default.func\n});\nBaseInput.defaultProps = {\n  placeholderTextColor: _style.Colors.dark60,\n  validateOnBlur: true\n};","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/inputs/BaseInput.js"],"names":["VALIDATORS","REQUIRED","EMAIL","URL","NUMBER","BaseInput","props","onFocus","args","_","invoke","setState","focused","onBlur","validateOnBlur","validate","onChange","event","onChangeText","text","value","validateOnChange","setImmediate","get","dryRun","isValid","inputValidators","isArray","failingValidatorIndex","index","length","validator","validatorFunction","isFunction","isString","Validators","error","errorMessage","undefined","state","valid","validateOnStart","extractTypographyValue","Typography","text70","input","isFocused","focus","blur","clear","indexOf","placeholder","isRequiredField","propsError","stateError","Colors","dark10","isEmpty","dark40","toggleExpandableModal","BaseComponent","displayName","propTypes","RNTextInput","color","PropTypes","string","containerStyle","ViewPropTypes","style","oneOfType","oneOf","values","func","arrayOf","bool","onChangeValidity","defaultProps","placeholderTextColor","dark60"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport 'react';\nimport {ViewPropTypes, TextInput as RNTextInput} from 'react-native';\nimport {Colors, Typography} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport Validators from './Validators';\n\n\nconst VALIDATORS = {\n  REQUIRED: 'required',\n  EMAIL: 'email',\n  URL: 'url',\n  NUMBER: 'number'\n};\n\nexport default class BaseInput extends BaseComponent {\n  static displayName = 'BaseInput';\n\n  static propTypes = {\n    ...RNTextInput.propTypes,\n    // ...BaseComponent.propTypes,\n    /**\n     * text color\n     */\n    color: PropTypes.string,\n    /**\n     * text input container style\n     */\n    containerStyle: ViewPropTypes.style,\n    /**\n     * validator type or custom validator function\n     */\n    validate: PropTypes.oneOfType([\n      PropTypes.oneOf(_.values(VALIDATORS)), // enum\n      PropTypes.func, // custom\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(_.values(VALIDATORS)), PropTypes.func])) // array of validators\n    ]),\n    /**\n     * the message to be displayed when the validation fails\n     */\n    errorMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    /**\n     * whether to run the validation on mount\n     */\n    validateOnStart: PropTypes.bool,\n    /**\n     * whether to run the validation on text changed\n     */\n    validateOnChange: PropTypes.bool,\n    /**\n     * whether to run the validation on blur\n     */\n    validateOnBlur: PropTypes.bool,\n    /**\n     * callback for validity change\n     */\n    onChangeValidity: PropTypes.func\n  };\n\n  static defaultProps = {\n    placeholderTextColor: Colors.dark60,\n    validateOnBlur: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...this.state,\n      value: props.value,\n      focused: false,\n      valid: false,\n      error: undefined\n    };\n  }\n\n  componentDidMount() {\n    const {validateOnStart} = this.props;\n    if (validateOnStart) {\n      this.validate();\n    }\n  }\n\n  /** Events */\n  onFocus = (...args) => {\n    _.invoke(this.props, 'onFocus', ...args);\n    this.setState({focused: true});\n  }\n\n  onBlur = (...args) => {\n    _.invoke(this.props, 'onBlur', ...args);\n    this.setState({focused: false});\n\n    const {validateOnBlur} = this.props;\n    if (validateOnBlur) {\n      this.validate();\n    }\n  }\n\n  onChange = (event) => {\n    _.invoke(this.props, 'onChange', event);\n  }\n\n  onChangeText = (text) => {\n    _.invoke(this.props, 'onChangeText', text);\n    this.setState({value: text});\n\n    const {validateOnChange} = this.props;\n    if (validateOnChange) {\n      setImmediate(this.validate);\n    }\n  }\n\n  /** Actions */\n  getTypography() {\n    return this.extractTypographyValue() || Typography.text70;\n  }\n\n  hasText() {\n    const {value} = this.state;\n    return value && value.length > 0;\n  }\n\n  isFocused() {\n    return this.input.isFocused();\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  clear() {\n    this.input.clear();\n  }\n\n  validate = (value = _.get(this, 'state.value'), dryRun) => { // 'input.state.value'\n    const {validate} = this.props;\n    if (!validate) {\n      return;\n    }\n\n    let isValid = true;\n    const inputValidators = _.isArray(validate) ? validate : [validate];\n    let failingValidatorIndex;\n\n    // get validators\n    for (let index = 0; index < inputValidators.length; index++) {\n      const validator = inputValidators[index];\n      let validatorFunction;\n      if (_.isFunction(validator)) {\n        validatorFunction = validator;\n      } else if (_.isString(validator) && !!Validators[validator]) {\n        validatorFunction = Validators[validator];\n      }\n\n      // validate\n      if (!validatorFunction(value)) {\n        isValid = false;\n        failingValidatorIndex = index;\n        break;\n      }\n    }\n\n    // get error message\n    let error;\n    if (!isValid) {\n      const {errorMessage} = this.props;\n      if (_.isArray(errorMessage)) {\n        error = errorMessage[failingValidatorIndex];\n      } else {\n        error = errorMessage;\n      }\n    } else {\n      error = undefined;\n    }\n\n    if (!dryRun) {\n      // invoke caller's implementation\n      if (this.state.valid !== isValid) {\n        _.invoke(this.props, 'onChangeValidity', isValid);\n      }\n\n      // set values\n      this.setState({error, valid: isValid});\n    }\n    return isValid;\n  };\n\n  isRequiredField() {\n    const {validate} = this.props;\n    if (_.isArray(validate)) {\n      return validate.indexOf[VALIDATORS.REQUIRED] !== -1;\n    }\n    return validate === VALIDATORS.REQUIRED;\n  }\n\n  getRequiredPlaceholder(placeholder) {\n    if (this.isRequiredField()) {\n      return `${placeholder} *`;\n    }\n    return placeholder;\n  }\n\n  getErrorMessage() {\n    const {error: propsError} = this.props;\n    const {error: stateError} = this.state;\n\n    return propsError || stateError;\n  }\n\n  getColor(value) {\n    if (this.state.focused) {\n      return Colors.dark10;\n    } else {\n      return _.isEmpty(value) ? Colors.dark40 : Colors.dark10;\n    }\n  }\n\n  toggleExpandableModal(...args) {\n    return this.input.toggleExpandableModal(...args);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}