{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeInteractable = _interopRequireDefault(require(\"react-native-interactable\"));\n\nvar _commons = require(\"../../commons\");\n\nvar _Constants = require(\"../../helpers/Constants\");\n\nvar _style = require(\"../../style\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\interactableComponents\\\\drawer\\\\drawer.deprecated.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SCALE_POINT = 72;\nvar MIN_LEFT_MARGIN = 56;\nvar DEFAULT_ICON_SIZE = 24;\nvar MIN_ITEM_WIDTH = 43;\nvar ITEM_BG = _style.Colors.blue30;\nvar ITEM_PADDING = 12;\nvar BLEED = 15;\nvar ITEM_PROP_TYPES = {\n  width: _propTypes.default.number,\n  background: _propTypes.default.string,\n  text: _propTypes.default.string,\n  icon: _propTypes.default.number,\n  onPress: _propTypes.default.func\n};\n\nvar Drawer = function (_PureBaseComponent) {\n  (0, _inherits2.default)(Drawer, _PureBaseComponent);\n\n  var _super = _createSuper(Drawer);\n\n  function Drawer(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Drawer);\n    _this = _super.call(this, props);\n\n    _this.onAlert = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var event = JSON.stringify(nativeEvent);\n\n      if (event.includes('\"first\":\"leave\"')) {\n        _this.interactableElem.snapTo({\n          index: 2\n        });\n      }\n\n      if (event.includes('\"second\":\"enter\"')) {\n        _this.interactableElem.snapTo({\n          index: 1\n        });\n      }\n    };\n\n    _this.onSnap = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      var index = nativeEvent.index;\n      var position = _this.state.position;\n\n      if (index !== position) {\n        _this.setState({\n          position: index\n        });\n      }\n    };\n\n    _this.onDrag = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n      var state = nativeEvent.state;\n\n      if (state === 'start') {\n        _this.setState({\n          inMotion: true\n        });\n\n        _lodash.default.invoke(_this.props, 'onDragStart');\n      }\n    };\n\n    _this.onStop = function () {\n      var inMotion = _this.state.inMotion;\n\n      if (inMotion) {\n        _this.setState({\n          inMotion: false\n        });\n      }\n    };\n\n    _this.onPress = function () {\n      _this.closeDrawer();\n\n      setTimeout(function () {\n        _lodash.default.invoke(_this.props, 'onPress');\n      }, 0);\n    };\n\n    _this.closeDrawer = function () {\n      _this.interactableElem.snapTo({\n        index: 1\n      });\n    };\n\n    _this.onLayout = function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      var typography = height >= SCALE_POINT ? _style.Typography.text70 : _style.Typography.text80;\n      var textTopMargin = height > SCALE_POINT ? 8 : 0;\n      var itemPadding = height >= SCALE_POINT ? ITEM_PADDING : 8;\n\n      _this.setState({\n        width: width,\n        height: height,\n        typography: typography,\n        textTopMargin: textTopMargin,\n        itemPadding: itemPadding\n      });\n    };\n\n    _this.renderGhostButton = function (item, index) {\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        key: index,\n        style: [_this.styles.item, {\n          width: _this.getItemWidth(item),\n          backgroundColor: _style.Colors.rgba(_style.Colors.white, 0)\n        }],\n        onPress: item.onPress,\n        underlayColor: _style.Colors.rgba(_style.Colors.white, 0.3),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.deltaX = new _reactNative.Animated.Value(0);\n    _this.drawer = _react.default.createRef();\n    _this.state = {\n      inMotion: false,\n      position: 1,\n      width: _Constants.screenWidth\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Drawer, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (JSON.stringify(this.props.leftItem) !== JSON.stringify(nextProps.leftItem) || JSON.stringify(this.props.rightItems) !== JSON.stringify(nextProps.rightItems)) {\n        this.closeDrawer();\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps());\n    }\n  }, {\n    key: \"getAnimationConfig\",\n    value: function getAnimationConfig() {\n      var _this$getThemeProps = this.getThemeProps(),\n          animationConfig = _this$getThemeProps.animationConfig;\n\n      return _objectSpread({\n        useNativeDriver: true\n      }, animationConfig);\n    }\n  }, {\n    key: \"getMaxItemWidth\",\n    value: function getMaxItemWidth() {\n      var rightItems = this.props.rightItems;\n      var width = this.state.width;\n      return rightItems ? (width - MIN_LEFT_MARGIN) / rightItems.length : width - MIN_LEFT_MARGIN;\n    }\n  }, {\n    key: \"getMinItemWidth\",\n    value: function getMinItemWidth() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          equalWidths = _this$getThemeProps2.equalWidths;\n\n      var maxWidth = this.getMaxItemWidth();\n      var minWidth = equalWidths ? maxWidth : MIN_ITEM_WIDTH;\n      return minWidth > maxWidth ? maxWidth : minWidth;\n    }\n  }, {\n    key: \"getRightItemsTotalWidth\",\n    value: function getRightItemsTotalWidth(numberOfItems) {\n      var _this$getThemeProps3 = this.getThemeProps(),\n          rightItems = _this$getThemeProps3.rightItems;\n\n      var total = 0;\n\n      if (_lodash.default.size(rightItems) > 0) {\n        var items = rightItems.reverse();\n        var size = numberOfItems && numberOfItems >= 0 ? numberOfItems : items.length;\n\n        for (var i = 0; i < size; i++) {\n          total += this.getItemWidth(items[i]);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"getItemWidth\",\n    value: function getItemWidth(item) {\n      var width = this.getMinItemWidth();\n\n      if (item && item.width) {\n        width = Math.max(item.width, width);\n        width = Math.min(width, this.getMaxItemWidth());\n      }\n\n      return width;\n    }\n  }, {\n    key: \"getBoundaries\",\n    value: function getBoundaries() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          leftItem = _this$getThemeProps4.leftItem,\n          rightItems = _this$getThemeProps4.rightItems,\n          equalWidths = _this$getThemeProps4.equalWidths;\n\n      var leftSpring = 80;\n      var leftBound = this.getItemWidth(leftItem) + leftSpring;\n      var rightSpring = equalWidths ? 0 : 30;\n      var rightWidth = this.getRightItemsTotalWidth();\n      var rightBound = rightWidth > 0 ? -rightWidth - rightSpring : 0;\n      return {\n        right: _lodash.default.isEmpty(leftItem) ? 0 : leftBound,\n        left: _lodash.default.isEmpty(rightItems) ? 0 : rightBound\n      };\n    }\n  }, {\n    key: \"getSnapPoints\",\n    value: function getSnapPoints() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          leftItem = _this$getThemeProps5.leftItem,\n          rightItems = _this$getThemeProps5.rightItems,\n          damping = _this$getThemeProps5.damping,\n          tension = _this$getThemeProps5.tension;\n\n      var size = rightItems ? rightItems.length : 0;\n      var left = !_lodash.default.isEmpty(leftItem) ? {\n        x: this.getItemWidth(leftItem),\n        damping: damping,\n        tension: tension\n      } : {};\n      var initial = {\n        x: 0,\n        damping: damping,\n        tension: tension\n      };\n      var last = rightItems && !_lodash.default.isEmpty(rightItems[0]) ? {\n        x: -this.getRightItemsTotalWidth(),\n        damping: damping,\n        tension: tension\n      } : {};\n\n      switch (size) {\n        case 0:\n          return [left, initial];\n\n        default:\n          return [left, initial, last];\n      }\n    }\n  }, {\n    key: \"getAlertAreas\",\n    value: function getAlertAreas() {\n      var rightItems = this.props.rightItems;\n      var size = rightItems ? rightItems.length : 0;\n      var first = {\n        id: 'first',\n        influenceArea: {\n          left: -this.getRightItemsTotalWidth(1)\n        }\n      };\n      var second = {\n        id: 'second',\n        influenceArea: {\n          left: -this.getRightItemsTotalWidth(size - 1)\n        }\n      };\n\n      switch (size) {\n        case 0:\n        case 1:\n          return [];\n\n        case 2:\n          return [first];\n\n        default:\n          return [first, second];\n      }\n    }\n  }, {\n    key: \"getInputRanges\",\n    value: function getInputRanges() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n          rightItems = _this$getThemeProps6.rightItems;\n\n      var size = rightItems ? rightItems.length : 0;\n      var interval = 65;\n      var inputRanges = [];\n\n      for (var i = 0; i < size; i++) {\n        var itemWidth = this.getItemWidth(rightItems[i]);\n        var end = itemWidth - size * BLEED;\n        var max = -(end + interval * i);\n        var min = -(itemWidth * (i + 1));\n        inputRanges.push([min, max]);\n      }\n\n      return inputRanges.reverse();\n    }\n  }, {\n    key: \"renderLeftItem\",\n    value: function renderLeftItem() {\n      var _this$getThemeProps7 = this.getThemeProps(),\n          leftItem = _this$getThemeProps7.leftItem,\n          itemsTintColor = _this$getThemeProps7.itemsTintColor,\n          itemsIconSize = _this$getThemeProps7.itemsIconSize,\n          itemsTextStyle = _this$getThemeProps7.itemsTextStyle;\n\n      var _this$state = this.state,\n          height = _this$state.height,\n          typography = _this$state.typography,\n          textTopMargin = _this$state.textTopMargin;\n      var leftItemWidth = this.getItemWidth(leftItem);\n      var background = (leftItem ? leftItem.background : undefined) || ITEM_BG;\n      var onLeftPress = leftItem ? leftItem.onPress : undefined;\n      return _react.default.createElement(_reactNative.View, {\n        style: this.styles.leftItemContainer,\n        pointerEvents: 'box-none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({\n        style: {\n          backgroundColor: background,\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          transform: [{\n            translateX: this.deltaX.interpolate({\n              inputRange: [0, leftItemWidth],\n              outputRange: [-leftItemWidth, 0],\n              extrapolateRight: 'clamp'\n            })\n          }]\n        }\n      }, this.getAnimationConfig(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.TouchableHighlight, {\n        onPress: onLeftPress,\n        underlayColor: _style.Colors.rgba(_style.Colors.white, 0.3),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          height: height,\n          width: leftItemWidth,\n          padding: ITEM_PADDING,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }\n      }, leftItem && leftItem.icon && _react.default.createElement(_reactNative.Animated.Image, (0, _extends2.default)({\n        source: leftItem.icon,\n        style: [{\n          tintColor: itemsTintColor,\n          width: itemsIconSize,\n          height: itemsIconSize,\n          opacity: this.deltaX.interpolate({\n            inputRange: [leftItemWidth - BLEED, leftItemWidth],\n            outputRange: [0, 1],\n            extrapolateLeft: 'clamp',\n            extrapolateRight: 'clamp'\n          }),\n          transform: [{\n            scale: this.deltaX.interpolate({\n              inputRange: [leftItemWidth - BLEED, leftItemWidth],\n              outputRange: [0.7, 1],\n              extrapolateLeft: 'clamp',\n              extrapolateRight: 'clamp'\n            })\n          }]\n        }]\n      }, this.getAnimationConfig(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      })), leftItem && leftItem.text && _react.default.createElement(_reactNative.Animated.Text, (0, _extends2.default)({\n        numberOfLines: 1,\n        style: [_objectSpread(_objectSpread(_objectSpread({\n          color: itemsTintColor\n        }, typography), itemsTextStyle), {}, {\n          marginTop: textTopMargin,\n          opacity: this.deltaX.interpolate({\n            inputRange: [leftItemWidth - BLEED, leftItemWidth],\n            outputRange: [0, 1],\n            extrapolateLeft: 'clamp',\n            extrapolateRight: 'clamp'\n          }),\n          transform: [{\n            scale: this.deltaX.interpolate({\n              inputRange: [leftItemWidth - BLEED, leftItemWidth],\n              outputRange: [0.7, 1],\n              extrapolateLeft: 'clamp',\n              extrapolateRight: 'clamp'\n            })\n          }]\n        })]\n      }, this.getAnimationConfig(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }), leftItem.text)))));\n    }\n  }, {\n    key: \"renderRightItem\",\n    value: function renderRightItem(item, index) {\n      if (!item) {\n        return;\n      }\n\n      var _this$getThemeProps8 = this.getThemeProps(),\n          itemsTintColor = _this$getThemeProps8.itemsTintColor,\n          itemsIconSize = _this$getThemeProps8.itemsIconSize,\n          itemsTextStyle = _this$getThemeProps8.itemsTextStyle;\n\n      var _this$state2 = this.state,\n          itemPadding = _this$state2.itemPadding,\n          typography = _this$state2.typography,\n          textTopMargin = _this$state2.textTopMargin;\n      var inputRanges = this.getInputRanges();\n      return _react.default.createElement(_reactNative.View, {\n        key: index,\n        style: [this.styles.item, {\n          width: this.getItemWidth(item),\n          backgroundColor: item.background || ITEM_BG,\n          padding: itemPadding\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 7\n        }\n      }, item.icon && _react.default.createElement(_reactNative.Animated.Image, (0, _extends2.default)({\n        source: item.icon,\n        style: [{\n          tintColor: itemsTintColor,\n          width: itemsIconSize,\n          height: itemsIconSize,\n          opacity: this.deltaX.interpolate({\n            inputRange: inputRanges[index],\n            outputRange: [1, 0],\n            extrapolateLeft: 'clamp',\n            extrapolateRight: 'clamp'\n          }),\n          transform: [{\n            scale: this.deltaX.interpolate({\n              inputRange: inputRanges[index],\n              outputRange: [1, 0.7],\n              extrapolateLeft: 'clamp',\n              extrapolateRight: 'clamp'\n            })\n          }]\n        }]\n      }, this.getAnimationConfig(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }\n      })), item.text && _react.default.createElement(_reactNative.Animated.Text, (0, _extends2.default)({\n        numberOfLines: 1,\n        style: [_objectSpread(_objectSpread(_objectSpread({\n          color: itemsTintColor\n        }, typography), itemsTextStyle), {}, {\n          marginTop: textTopMargin,\n          opacity: this.deltaX.interpolate({\n            inputRange: inputRanges[index],\n            outputRange: [1, 0],\n            extrapolateLeft: 'clamp',\n            extrapolateRight: 'clamp'\n          }),\n          transform: [{\n            scale: this.deltaX.interpolate({\n              inputRange: inputRanges[index],\n              outputRange: [1, 0.7],\n              extrapolateLeft: 'clamp',\n              extrapolateRight: 'clamp'\n            })\n          }]\n        })]\n      }, this.getAnimationConfig(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }\n      }), item.text));\n    }\n  }, {\n    key: \"renderRightItems\",\n    value: function renderRightItems() {\n      var _this2 = this;\n\n      var _this$getThemeProps9 = this.getThemeProps(),\n          rightItems = _this$getThemeProps9.rightItems;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: this.styles.rightItemsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 7\n        }\n      }, _lodash.default.map(rightItems, function (item, index) {\n        return _this2.renderRightItem(item, index);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$getThemeProps10 = this.getThemeProps(),\n          style = _this$getThemeProps10.style,\n          onPress = _this$getThemeProps10.onPress,\n          rightItems = _this$getThemeProps10.rightItems;\n\n      var Container = onPress ? _reactNative.TouchableOpacity : _reactNative.View;\n\n      var backgroundColor = _lodash.default.get(rightItems, '[0].background', ITEM_BG);\n\n      var containerWidth = this.state.width || _Constants.screenWidth;\n      return _react.default.createElement(_reactNative.View, {\n        style: [style, this.styles.container, {\n          backgroundColor: backgroundColor\n        }],\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 7\n        }\n      }, rightItems && this.renderRightItems(), this.renderLeftItem(), _react.default.createElement(_reactNativeInteractable.default.View, {\n        ref: function ref(el) {\n          return _this3.interactableElem = el;\n        },\n        horizontalOnly: true,\n        boundaries: this.getBoundaries(),\n        snapPoints: this.getSnapPoints(),\n        alertAreas: this.getAlertAreas(),\n        onAlert: this.onAlert,\n        onSnap: this.onSnap,\n        onDrag: this.onDrag,\n        onStop: this.onStop,\n        dragToss: 0.01,\n        animatedValueX: this.deltaX,\n        style: [this.styles.interactable, {\n          width: containerWidth * 2\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          backgroundColor: _style.Colors.white\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(Container, {\n        style: [this.styles.childrenContainer, {\n          width: containerWidth\n        }],\n        activeOpacity: 0.7,\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }\n      }, this.props.children)), rightItems && _react.default.createElement(_reactNative.View, {\n        style: {\n          width: containerWidth,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }\n      }, _lodash.default.map(rightItems, this.renderGhostButton))));\n    }\n  }]);\n  return Drawer;\n}(_commons.PureBaseComponent);\n\nexports.default = Drawer;\nDrawer.displayName = 'IGNORE';\nDrawer.propTypes = {\n  damping: _propTypes.default.number,\n  tension: _propTypes.default.number,\n  onPress: _propTypes.default.func,\n  onDragStart: _propTypes.default.func,\n  rightItems: _propTypes.default.arrayOf(_propTypes.default.shape(ITEM_PROP_TYPES)),\n  leftItem: _propTypes.default.shape(ITEM_PROP_TYPES),\n  equalWidths: _propTypes.default.bool,\n  itemsTintColor: _propTypes.default.string,\n  itemsIconSize: _propTypes.default.number,\n  itemsTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),\n  useNativeAnimations: _propTypes.default.bool\n};\nDrawer.defaultProps = {\n  damping: 0.7,\n  tension: 300,\n  itemsTintColor: _style.Colors.white,\n  itemsIconSize: DEFAULT_ICON_SIZE\n};\n\nfunction createStyles() {\n  return _reactNative.StyleSheet.create({\n    container: {\n      overflow: 'hidden'\n    },\n    interactable: {\n      flexDirection: 'row',\n      backgroundColor: 'transparent'\n    },\n    childrenContainer: {\n      left: 0,\n      right: 0\n    },\n    rightItemsContainer: {\n      position: 'absolute',\n      right: 0,\n      height: '100%',\n      flexDirection: 'row'\n    },\n    leftItemContainer: {\n      position: 'absolute',\n      left: 0,\n      right: 100,\n      flexDirection: 'row'\n    },\n    item: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  });\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/interactableComponents/drawer/drawer.deprecated.js"],"names":["SCALE_POINT","MIN_LEFT_MARGIN","DEFAULT_ICON_SIZE","MIN_ITEM_WIDTH","ITEM_BG","Colors","blue30","ITEM_PADDING","BLEED","ITEM_PROP_TYPES","width","PropTypes","number","background","string","text","icon","onPress","func","Drawer","props","onAlert","nativeEvent","event","JSON","stringify","includes","interactableElem","snapTo","index","onSnap","position","state","setState","onDrag","inMotion","_","invoke","onStop","closeDrawer","setTimeout","onLayout","layout","height","typography","Typography","text70","text80","textTopMargin","itemPadding","renderGhostButton","item","styles","getItemWidth","backgroundColor","rgba","white","deltaX","Animated","Value","drawer","React","createRef","screenWidth","nextProps","leftItem","rightItems","createStyles","getThemeProps","animationConfig","useNativeDriver","length","equalWidths","maxWidth","getMaxItemWidth","minWidth","numberOfItems","total","size","items","reverse","i","getMinItemWidth","Math","max","min","leftSpring","leftBound","rightSpring","rightWidth","getRightItemsTotalWidth","rightBound","right","isEmpty","left","damping","tension","x","initial","last","first","id","influenceArea","second","interval","inputRanges","itemWidth","end","push","itemsTintColor","itemsIconSize","itemsTextStyle","leftItemWidth","undefined","onLeftPress","leftItemContainer","transform","translateX","interpolate","inputRange","outputRange","extrapolateRight","getAnimationConfig","padding","justifyContent","alignItems","tintColor","opacity","extrapolateLeft","scale","color","marginTop","getInputRanges","rightItemsContainer","map","renderRightItem","style","Container","TouchableOpacity","View","get","containerWidth","container","renderRightItems","renderLeftItem","el","getBoundaries","getSnapPoints","getAlertAreas","interactable","childrenContainer","children","flexDirection","PureBaseComponent","displayName","propTypes","onDragStart","arrayOf","shape","bool","oneOfType","object","useNativeAnimations","defaultProps","StyleSheet","create","overflow"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, Animated, View, TouchableOpacity, TouchableHighlight} from 'react-native';\nimport Interactable from 'react-native-interactable';\nimport {PureBaseComponent} from '../../commons';\nimport {screenWidth} from '../../helpers/Constants';\nimport {Colors, Typography} from '../../style';\n\nconst SCALE_POINT = 72; // scaling content style by height\nconst MIN_LEFT_MARGIN = 56;\nconst DEFAULT_ICON_SIZE = 24;\nconst MIN_ITEM_WIDTH = 43; // NOTE: this is the min for the input ranges calc!\nconst ITEM_BG = Colors.blue30;\nconst ITEM_PADDING = 12;\nconst BLEED = 15;\nconst ITEM_PROP_TYPES = {\n  width: PropTypes.number,\n  background: PropTypes.string,\n  text: PropTypes.string,\n  icon: PropTypes.number,\n  onPress: PropTypes.func\n};\n\n/**\n * @description: Interactable Drawer component\n * @extendslink:\n */\nexport default class Drawer extends PureBaseComponent {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    /**\n     * The drawer top layer's damping\n     */\n    damping: PropTypes.number,\n    /**\n     * The drawer top layer's tention\n     */\n    tension: PropTypes.number,\n    /**\n     * Press handler\n     */\n    onPress: PropTypes.func,\n    /**\n     * OnDragStart handler\n     */\n    onDragStart: PropTypes.func,\n    /**\n     * The bottom layer's items to appear when opened from the right\n     */\n    rightItems: PropTypes.arrayOf(PropTypes.shape(ITEM_PROP_TYPES)),\n    /**\n     * The bottom layer's item to appear when opened from the left (a single item)\n     */\n    leftItem: PropTypes.shape(ITEM_PROP_TYPES),\n    /**\n     * Whether to give the items equal width (the max width)\n     */\n    equalWidths: PropTypes.bool,\n    /**\n     * The color for the text and icon tint of the items\n     */\n    itemsTintColor: PropTypes.string,\n    /**\n     * The items' icon size\n     */\n    itemsIconSize: PropTypes.number,\n    /**\n     * The items' text style\n     */\n    itemsTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Perform the animation in natively\n     */\n    useNativeAnimations: PropTypes.bool\n  };\n\n  static defaultProps = {\n    damping: 0.7,\n    tension: 300,\n    itemsTintColor: Colors.white,\n    itemsIconSize: DEFAULT_ICON_SIZE\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.deltaX = new Animated.Value(0);\n    this.drawer = React.createRef();\n\n    this.state = {\n      inMotion: false,\n      position: 1,\n      width: screenWidth\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      JSON.stringify(this.props.leftItem) !== JSON.stringify(nextProps.leftItem) ||\n      JSON.stringify(this.props.rightItems) !== JSON.stringify(nextProps.rightItems)\n    ) {\n      this.closeDrawer();\n    }\n  }\n\n  onAlert = ({nativeEvent}) => {\n    const event = JSON.stringify(nativeEvent);\n\n    if (event.includes('\"first\":\"leave\"')) {\n      this.interactableElem.snapTo({index: 2});\n    }\n    if (event.includes('\"second\":\"enter\"')) {\n      this.interactableElem.snapTo({index: 1});\n    }\n  };\n  onSnap = ({nativeEvent}) => {\n    const {index} = nativeEvent;\n    const {position} = this.state;\n    if (index !== position) {\n      this.setState({position: index});\n    }\n  };\n  onDrag = ({nativeEvent}) => {\n    const {state} = nativeEvent;\n    if (state === 'start') {\n      this.setState({inMotion: true});\n      _.invoke(this.props, 'onDragStart');\n    }\n  };\n  onStop = () => {\n    const {inMotion} = this.state;\n    if (inMotion) {\n      this.setState({inMotion: false});\n    }\n  };\n  onPress = () => {\n    this.closeDrawer();\n    setTimeout(() => {\n      _.invoke(this.props, 'onPress');\n    }, 0);\n  };\n\n  closeDrawer = () => {\n    this.interactableElem.snapTo({index: 1});\n  };\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps());\n  }\n  getAnimationConfig() {\n    const {animationConfig} = this.getThemeProps();\n    return {\n      useNativeDriver: true,\n      ...animationConfig\n    };\n  }\n\n  getMaxItemWidth() {\n    const {rightItems} = this.props;\n    const {width} = this.state;\n    return rightItems ? (width - MIN_LEFT_MARGIN) / rightItems.length : width - MIN_LEFT_MARGIN;\n  }\n  getMinItemWidth() {\n    const {equalWidths} = this.getThemeProps();\n    const maxWidth = this.getMaxItemWidth();\n    const minWidth = equalWidths ? maxWidth : MIN_ITEM_WIDTH;\n    return minWidth > maxWidth ? maxWidth : minWidth;\n  }\n  getRightItemsTotalWidth(numberOfItems) {\n    const {rightItems} = this.getThemeProps();\n    let total = 0;\n\n    if (_.size(rightItems) > 0) {\n      const items = rightItems.reverse();\n      const size = numberOfItems && numberOfItems >= 0 ? numberOfItems : items.length;\n\n      for (let i = 0; i < size; i++) {\n        total += this.getItemWidth(items[i]);\n      }\n    }\n    return total;\n  }\n  getItemWidth(item) {\n    let width = this.getMinItemWidth();\n    if (item && item.width) {\n      width = Math.max(item.width, width);\n      width = Math.min(width, this.getMaxItemWidth());\n    }\n    return width;\n  }\n\n  getBoundaries() {\n    const {leftItem, rightItems, equalWidths} = this.getThemeProps();\n    const leftSpring = 80;\n    const leftBound = this.getItemWidth(leftItem) + leftSpring;\n    const rightSpring = equalWidths ? 0 : 30;\n    const rightWidth = this.getRightItemsTotalWidth();\n    const rightBound = rightWidth > 0 ? -rightWidth - rightSpring : 0;\n\n    return {\n      right: _.isEmpty(leftItem) ? 0 : leftBound,\n      left: _.isEmpty(rightItems) ? 0 : rightBound\n    };\n  }\n  getSnapPoints() {\n    const {leftItem, rightItems, damping, tension} = this.getThemeProps();\n    const size = rightItems ? rightItems.length : 0;\n\n    const left = !_.isEmpty(leftItem) ? {x: this.getItemWidth(leftItem), damping, tension} : {};\n    const initial = {x: 0, damping, tension};\n    const last = rightItems && !_.isEmpty(rightItems[0]) ? {x: -this.getRightItemsTotalWidth(), damping, tension} : {};\n\n    switch (size) {\n      case 0:\n        return [left, initial];\n      default:\n        return [left, initial, last];\n    }\n  }\n  getAlertAreas() {\n    const {rightItems} = this.props;\n    const size = rightItems ? rightItems.length : 0;\n\n    const first = {id: 'first', influenceArea: {left: -this.getRightItemsTotalWidth(1)}};\n    const second = {id: 'second', influenceArea: {left: -this.getRightItemsTotalWidth(size - 1)}};\n\n    switch (size) {\n      case 0:\n      case 1:\n        return [];\n      case 2:\n        return [first];\n      default:\n        return [first, second];\n    }\n  }\n  getInputRanges() {\n    const {rightItems} = this.getThemeProps();\n    const size = rightItems ? rightItems.length : 0;\n    const interval = 65;\n    const inputRanges = [];\n\n    for (let i = 0; i < size; i++) {\n      const itemWidth = this.getItemWidth(rightItems[i]);\n      const end = itemWidth - size * BLEED;\n      const max = -(end + interval * i);\n      const min = -(itemWidth * (i + 1));\n      inputRanges.push([min, max]);\n    }\n    return inputRanges.reverse();\n  }\n\n  onLayout = event => {\n    const {width, height} = event.nativeEvent.layout;\n\n    const typography = height >= SCALE_POINT ? Typography.text70 : Typography.text80;\n    const textTopMargin = height > SCALE_POINT ? 8 : 0;\n    const itemPadding = height >= SCALE_POINT ? ITEM_PADDING : 8;\n\n    this.setState({width, height, typography, textTopMargin, itemPadding});\n  };\n\n  renderLeftItem() {\n    const {leftItem, itemsTintColor, itemsIconSize, itemsTextStyle} = this.getThemeProps();\n    const {height, typography, textTopMargin} = this.state;\n    const leftItemWidth = this.getItemWidth(leftItem);\n    const background = (leftItem ? leftItem.background : undefined) || ITEM_BG;\n    const onLeftPress = leftItem ? leftItem.onPress : undefined;\n\n    return (\n      <View style={this.styles.leftItemContainer} pointerEvents={'box-none'}>\n        <Animated.View\n          style={{\n            backgroundColor: background,\n            position: 'absolute',\n            left: 0,\n            right: 0,\n            transform: [\n              {\n                translateX: this.deltaX.interpolate({\n                  inputRange: [0, leftItemWidth],\n                  outputRange: [-leftItemWidth, 0],\n                  extrapolateRight: 'clamp'\n                })\n              }\n            ]\n          }}\n          {...this.getAnimationConfig()}\n        >\n          <TouchableHighlight onPress={onLeftPress} underlayColor={Colors.rgba(Colors.white, 0.3)}>\n            <View\n              style={{\n                height,\n                width: leftItemWidth,\n                padding: ITEM_PADDING,\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              {leftItem && leftItem.icon && (\n                <Animated.Image\n                  source={leftItem.icon}\n                  style={[\n                    {\n                      tintColor: itemsTintColor,\n                      width: itemsIconSize,\n                      height: itemsIconSize,\n                      opacity: this.deltaX.interpolate({\n                        inputRange: [leftItemWidth - BLEED, leftItemWidth],\n                        outputRange: [0, 1],\n                        extrapolateLeft: 'clamp',\n                        extrapolateRight: 'clamp'\n                      }),\n                      transform: [\n                        {\n                          scale: this.deltaX.interpolate({\n                            inputRange: [leftItemWidth - BLEED, leftItemWidth],\n                            outputRange: [0.7, 1],\n                            extrapolateLeft: 'clamp',\n                            extrapolateRight: 'clamp'\n                          })\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.getAnimationConfig()}\n                />\n              )}\n              {leftItem && leftItem.text && (\n                <Animated.Text\n                  numberOfLines={1}\n                  style={[\n                    {\n                      color: itemsTintColor,\n                      ...typography,\n                      ...itemsTextStyle,\n                      marginTop: textTopMargin,\n                      opacity: this.deltaX.interpolate({\n                        inputRange: [leftItemWidth - BLEED, leftItemWidth],\n                        outputRange: [0, 1],\n                        extrapolateLeft: 'clamp',\n                        extrapolateRight: 'clamp'\n                      }),\n                      transform: [\n                        {\n                          scale: this.deltaX.interpolate({\n                            inputRange: [leftItemWidth - BLEED, leftItemWidth],\n                            outputRange: [0.7, 1],\n                            extrapolateLeft: 'clamp',\n                            extrapolateRight: 'clamp'\n                          })\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.getAnimationConfig()}\n                >\n                  {leftItem.text}\n                </Animated.Text>\n              )}\n            </View>\n          </TouchableHighlight>\n        </Animated.View>\n      </View>\n    );\n  }\n  renderGhostButton = (item, index) => {\n    return (\n      <TouchableHighlight\n        key={index}\n        style={[\n          this.styles.item,\n          {\n            width: this.getItemWidth(item),\n            backgroundColor: Colors.rgba(Colors.white, 0)\n          }\n        ]}\n        onPress={item.onPress}\n        underlayColor={Colors.rgba(Colors.white, 0.3)}\n      >\n        <View/>\n      </TouchableHighlight>\n    );\n  };\n  renderRightItem(item, index) {\n    if (!item) {\n      return;\n    }\n    const {itemsTintColor, itemsIconSize, itemsTextStyle} = this.getThemeProps();\n    const {itemPadding, typography, textTopMargin} = this.state;\n    const inputRanges = this.getInputRanges();\n\n    return (\n      <View\n        key={index}\n        style={[\n          this.styles.item,\n          {\n            width: this.getItemWidth(item),\n            backgroundColor: item.background || ITEM_BG,\n            padding: itemPadding\n          }\n        ]}\n      >\n        {item.icon && (\n          <Animated.Image\n            source={item.icon}\n            style={[\n              {\n                tintColor: itemsTintColor,\n                width: itemsIconSize,\n                height: itemsIconSize,\n                opacity: this.deltaX.interpolate({\n                  inputRange: inputRanges[index],\n                  outputRange: [1, 0],\n                  extrapolateLeft: 'clamp',\n                  extrapolateRight: 'clamp'\n                }),\n                transform: [\n                  {\n                    scale: this.deltaX.interpolate({\n                      inputRange: inputRanges[index],\n                      outputRange: [1, 0.7],\n                      extrapolateLeft: 'clamp',\n                      extrapolateRight: 'clamp'\n                    })\n                  }\n                ]\n              }\n            ]}\n            {...this.getAnimationConfig()}\n          />\n        )}\n        {item.text && (\n          <Animated.Text\n            numberOfLines={1}\n            style={[\n              {\n                color: itemsTintColor,\n                ...typography,\n                ...itemsTextStyle,\n                marginTop: textTopMargin,\n                opacity: this.deltaX.interpolate({\n                  inputRange: inputRanges[index],\n                  outputRange: [1, 0],\n                  extrapolateLeft: 'clamp',\n                  extrapolateRight: 'clamp'\n                }),\n                transform: [\n                  {\n                    scale: this.deltaX.interpolate({\n                      inputRange: inputRanges[index],\n                      outputRange: [1, 0.7],\n                      extrapolateLeft: 'clamp',\n                      extrapolateRight: 'clamp'\n                    })\n                  }\n                ]\n              }\n            ]}\n            {...this.getAnimationConfig()}\n          >\n            {item.text}\n          </Animated.Text>\n        )}\n      </View>\n    );\n  }\n  renderRightItems() {\n    const {rightItems} = this.getThemeProps();\n\n    return (\n      <View style={this.styles.rightItemsContainer}>\n        {_.map(rightItems, (item, index) => {\n          return this.renderRightItem(item, index);\n        })}\n      </View>\n    );\n  }\n  render() {\n    const {style, onPress, rightItems} = this.getThemeProps();\n    const Container = onPress ? TouchableOpacity : View;\n    const backgroundColor = _.get(rightItems, '[0].background', ITEM_BG);\n    const containerWidth = this.state.width || screenWidth;\n\n    return (\n      <View style={[style, this.styles.container, {backgroundColor}]} onLayout={this.onLayout}>\n        {rightItems && this.renderRightItems()}\n        {this.renderLeftItem()}\n\n        <Interactable.View\n          ref={el => (this.interactableElem = el)}\n          horizontalOnly\n          boundaries={this.getBoundaries()}\n          snapPoints={this.getSnapPoints()}\n          alertAreas={this.getAlertAreas()}\n          onAlert={this.onAlert}\n          onSnap={this.onSnap}\n          onDrag={this.onDrag}\n          onStop={this.onStop}\n          dragToss={0.01}\n          animatedValueX={this.deltaX}\n          style={[this.styles.interactable, {width: containerWidth * 2}]}\n        >\n          <View style={{backgroundColor: Colors.white}}>\n            <Container\n              style={[this.styles.childrenContainer, {width: containerWidth}]}\n              activeOpacity={0.7}\n              onPress={this.onPress}\n            >\n              {this.props.children}\n            </Container>\n          </View>\n          {rightItems && (\n            <View style={{width: containerWidth, flexDirection: 'row'}}>\n              {_.map(rightItems, this.renderGhostButton)}\n            </View>\n          )}\n        </Interactable.View>\n      </View>\n    );\n  }\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      overflow: 'hidden'\n    },\n    interactable: {\n      flexDirection: 'row',\n      backgroundColor: 'transparent'\n    },\n    childrenContainer: {\n      left: 0,\n      right: 0\n    },\n    rightItemsContainer: {\n      position: 'absolute',\n      right: 0,\n      height: '100%',\n      flexDirection: 'row'\n    },\n    leftItemContainer: {\n      position: 'absolute',\n      left: 0,\n      right: 100,\n      flexDirection: 'row'\n    },\n    item: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}