{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _touchableOpacity = _interopRequireDefault(require(\"../touchableOpacity\"));\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _text = _interopRequireDefault(require(\"../text\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\button\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PADDINGS = {\n  XSMALL: 3,\n  SMALL: 4.5,\n  MEDIUM: 6.5,\n  LARGE: 9.5\n};\nvar HORIZONTAL_PADDINGS = {\n  XSMALL: 11,\n  SMALL: 14,\n  MEDIUM: 16,\n  LARGE: 20\n};\nvar MIN_WIDTH = {\n  XSMALL: 66,\n  SMALL: 70,\n  MEDIUM: 77,\n  LARGE: 90\n};\nvar DEFAULT_SIZE = 'large';\n\nvar Button = function (_PureBaseComponent) {\n  (0, _inherits2.default)(Button, _PureBaseComponent);\n\n  var _super = _createSuper(Button);\n\n  function Button(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Button);\n    _this = _super.call(this, props);\n\n    _this.onOrientationChanged = function () {\n      if (_helpers.Constants.isTablet && _this.props.fullWidth) {\n        _this.setState({\n          isLandscape: _helpers.Constants.isLandscape\n        });\n      }\n    };\n\n    _this.onLayout = function (event) {\n      var height = event.nativeEvent.layout.height;\n\n      if (_this.props.round) {\n        var width = event.nativeEvent.layout.width;\n        var size = height >= width ? height : width;\n\n        _this.setState({\n          size: size\n        });\n      }\n\n      if (_helpers.Constants.isAndroid && _reactNative.Platform.Version <= 17) {\n        _this.setState({\n          borderRadius: height / 2\n        });\n      }\n    };\n\n    if (!_lodash.default.isUndefined(props.containerStyle)) {\n      console.error('Button \"containerStyle\" prop will be deprecated soon, please use \"style\" instead');\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Button, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.animateLayout && !_lodash.default.isEqual(prevProps, this.props)) {\n        _reactNative.LayoutAnimation.configureNext(_reactNative.LayoutAnimation.Presets.easeInEaseOut);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _helpers.Constants.addDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _helpers.Constants.removeDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps());\n    }\n  }, {\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      if (this.isIconButton) {\n        return {\n          accessibilityRole: 'imagebutton'\n        };\n      }\n    }\n  }, {\n    key: \"getBackgroundColor\",\n    value: function getBackgroundColor() {\n      var _this$getThemeProps = this.getThemeProps(),\n          themeBackgroundColor = _this$getThemeProps.backgroundColor;\n\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          outline = _this$props.outline,\n          link = _this$props.link,\n          propsBackgroundColor = _this$props.backgroundColor;\n      var stateBackgroundColor = this.state.backgroundColor;\n\n      if (!outline && !link) {\n        if (disabled) {\n          return _style.ThemeManager.CTADisabledColor;\n        }\n\n        return propsBackgroundColor || stateBackgroundColor || themeBackgroundColor || _style.Colors.blue30;\n      }\n\n      return 'transparent';\n    }\n  }, {\n    key: \"getActiveBackgroundColor\",\n    value: function getActiveBackgroundColor() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          getActiveBackgroundColor = _this$getThemeProps2.getActiveBackgroundColor;\n\n      if (getActiveBackgroundColor) {\n        return getActiveBackgroundColor(this.getBackgroundColor(), this.getThemeProps());\n      }\n    }\n  }, {\n    key: \"getLabelColor\",\n    value: function getLabelColor() {\n      var _this$getThemeProps3 = this.getThemeProps(),\n          link = _this$getThemeProps3.link,\n          linkColor = _this$getThemeProps3.linkColor,\n          outline = _this$getThemeProps3.outline,\n          outlineColor = _this$getThemeProps3.outlineColor,\n          disabled = _this$getThemeProps3.disabled,\n          propsColor = _this$getThemeProps3.color;\n\n      var color = _style.Colors.white;\n\n      if (link) {\n        color = linkColor || _style.Colors.blue30;\n      } else if (outline) {\n        color = outlineColor || _style.Colors.blue30;\n      } else if (this.isIconButton) {\n        color = _style.Colors.dark10;\n      }\n\n      if (disabled && (link || outline)) {\n        return _style.ThemeManager.CTADisabledColor;\n      }\n\n      color = propsColor || this.extractColorValue() || color;\n      return color;\n    }\n  }, {\n    key: \"getLabelSizeStyle\",\n    value: function getLabelSizeStyle() {\n      var size = this.getThemeProps().size || DEFAULT_SIZE;\n      var LABEL_STYLE_BY_SIZE = {};\n      LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = _objectSpread({}, _style.Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.small] = _objectSpread({}, _style.Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.medium] = _objectSpread({}, _style.Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.large] = {};\n      var labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n      return labelSizeStyle;\n    }\n  }, {\n    key: \"getContainerSizeStyle\",\n    value: function getContainerSizeStyle() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          outline = _this$getThemeProps4.outline,\n          link = _this$getThemeProps4.link,\n          avoidMinWidth = _this$getThemeProps4.avoidMinWidth,\n          avoidInnerPadding = _this$getThemeProps4.avoidInnerPadding,\n          round = _this$getThemeProps4.round;\n\n      var size = this.getThemeProps().size || DEFAULT_SIZE;\n      var outlineWidth = this.getThemeProps().outlineWidth || 1;\n      var CONTAINER_STYLE_BY_SIZE = {};\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.XSMALL\n      } : {\n        paddingVertical: PADDINGS.XSMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n        minWidth: MIN_WIDTH.XSMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.SMALL\n      } : {\n        paddingVertical: PADDINGS.SMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n        minWidth: MIN_WIDTH.SMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.MEDIUM\n      } : {\n        paddingVertical: PADDINGS.MEDIUM,\n        paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n        minWidth: MIN_WIDTH.MEDIUM\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.LARGE\n      } : {\n        paddingVertical: PADDINGS.LARGE,\n        paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n        minWidth: MIN_WIDTH.LARGE\n      };\n\n      if (outline) {\n        _lodash.default.forEach(CONTAINER_STYLE_BY_SIZE, function (style) {\n          if (round) {\n            style.padding -= outlineWidth;\n          } else {\n            style.paddingVertical -= outlineWidth;\n            style.paddingHorizontal -= outlineWidth;\n          }\n        });\n      }\n\n      var containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n\n      if (link || this.isIconButton && !round) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n        containerSizeStyle.minWidth = undefined;\n      }\n\n      if (avoidMinWidth) {\n        containerSizeStyle.minWidth = undefined;\n      }\n\n      if (avoidInnerPadding) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n      }\n\n      return containerSizeStyle;\n    }\n  }, {\n    key: \"getOutlineStyle\",\n    value: function getOutlineStyle() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          outline = _this$getThemeProps5.outline,\n          outlineColor = _this$getThemeProps5.outlineColor,\n          outlineWidth = _this$getThemeProps5.outlineWidth,\n          link = _this$getThemeProps5.link,\n          disabled = _this$getThemeProps5.disabled;\n\n      var outlineStyle;\n\n      if ((outline || outlineColor) && !link) {\n        outlineStyle = {\n          borderWidth: outlineWidth || 1,\n          borderColor: outlineColor || _style.Colors.blue30\n        };\n\n        if (disabled) {\n          outlineStyle.borderColor = _style.Colors.dark70;\n        }\n      }\n\n      return outlineStyle;\n    }\n  }, {\n    key: \"getBorderRadiusStyle\",\n    value: function getBorderRadiusStyle() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n          link = _this$getThemeProps6.link,\n          fullWidth = _this$getThemeProps6.fullWidth,\n          borderRadiusFromProps = _this$getThemeProps6.borderRadius;\n\n      if (link || fullWidth || borderRadiusFromProps === 0) {\n        return {\n          borderRadius: 0\n        };\n      }\n\n      var borderRadiusFromState = this.state.borderRadius;\n      var borderRadius = borderRadiusFromProps || borderRadiusFromState || _style.BorderRadiuses.br100;\n      return {\n        borderRadius: borderRadius\n      };\n    }\n  }, {\n    key: \"getShadowStyle\",\n    value: function getShadowStyle() {\n      var backgroundColor = this.getBackgroundColor();\n\n      var _this$getThemeProps7 = this.getThemeProps(),\n          enableShadow = _this$getThemeProps7.enableShadow;\n\n      if (enableShadow) {\n        return [this.styles.shadowStyle, backgroundColor && {\n          shadowColor: backgroundColor\n        }];\n      }\n    }\n  }, {\n    key: \"getIconStyle\",\n    value: function getIconStyle() {\n      var _this$getThemeProps8 = this.getThemeProps(),\n          disabled = _this$getThemeProps8.disabled,\n          propsIconStyle = _this$getThemeProps8.iconStyle,\n          iconOnRight = _this$getThemeProps8.iconOnRight;\n\n      var size = this.getThemeProps().size || DEFAULT_SIZE;\n      var iconStyle = {\n        tintColor: this.getLabelColor()\n      };\n      var marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n\n      if (!this.isIconButton) {\n        if (iconOnRight) {\n          iconStyle.marginLeft = marginSide;\n        } else {\n          iconStyle.marginRight = marginSide;\n        }\n      }\n\n      if (disabled && !this.isFilled) {\n        iconStyle.tintColor = _style.Colors.dark60;\n      }\n\n      return [iconStyle, propsIconStyle];\n    }\n  }, {\n    key: \"getAnimationDirectionStyle\",\n    value: function getAnimationDirectionStyle() {\n      var _this$getThemeProps9 = this.getThemeProps(),\n          animateTo = _this$getThemeProps9.animateTo;\n\n      var style;\n\n      switch (animateTo) {\n        case 'left':\n          style = {\n            alignSelf: 'flex-start'\n          };\n          break;\n\n        case 'right':\n          style = {\n            alignSelf: 'flex-end'\n          };\n          break;\n\n        default:\n          break;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var iconSource = this.props.iconSource;\n\n      if (iconSource) {\n        var iconStyle = this.getIconStyle();\n\n        if (typeof iconSource === 'function') {\n          return iconSource(iconStyle);\n        } else {\n          return _react.default.createElement(_reactNative.Image, {\n            source: iconSource,\n            style: iconStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 16\n            }\n          });\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      var _this$getThemeProps10 = this.getThemeProps(),\n          label = _this$getThemeProps10.label,\n          labelStyle = _this$getThemeProps10.labelStyle,\n          labelProps = _this$getThemeProps10.labelProps;\n\n      var typography = this.extractTypographyValue();\n      var color = this.getLabelColor();\n      var labelSizeStyle = this.getLabelSizeStyle();\n\n      if (label) {\n        return _react.default.createElement(_text.default, (0, _extends2.default)({\n          style: [this.styles.text, color && {\n            color: color\n          }, labelSizeStyle, _objectSpread({}, typography), labelStyle],\n          numberOfLines: 1\n        }, labelProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 9\n          }\n        }), label);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps11 = this.getThemeProps(),\n          onPress = _this$getThemeProps11.onPress,\n          disabled = _this$getThemeProps11.disabled,\n          link = _this$getThemeProps11.link,\n          style = _this$getThemeProps11.style,\n          containerStyle = _this$getThemeProps11.containerStyle,\n          testID = _this$getThemeProps11.testID,\n          animateLayout = _this$getThemeProps11.animateLayout,\n          others = (0, _objectWithoutProperties2.default)(_this$getThemeProps11, [\"onPress\", \"disabled\", \"link\", \"style\", \"containerStyle\", \"testID\", \"animateLayout\"]);\n\n      var shadowStyle = this.getShadowStyle();\n      var margins = this.state.margins;\n      var backgroundColor = this.getBackgroundColor();\n      var outlineStyle = this.getOutlineStyle();\n      var containerSizeStyle = this.getContainerSizeStyle();\n      var borderRadiusStyle = this.getBorderRadiusStyle();\n      return _react.default.createElement(_touchableOpacity.default, (0, _extends2.default)({\n        style: [this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, link && this.styles.innerContainerLink, shadowStyle, margins, containerStyle, backgroundColor && {\n          backgroundColor: backgroundColor\n        }, borderRadiusStyle, outlineStyle, style],\n        activeOpacity: 0.6,\n        activeBackgroundColor: this.getActiveBackgroundColor(),\n        onLayout: this.onLayout,\n        onPress: onPress,\n        disabled: disabled,\n        testID: testID\n      }, this.getAccessibilityInfo(), others, {\n        ref: this.setRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(_view.default, {\n        row: true,\n        centerV: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 9\n        }\n      }, this.props.children, this.props.iconOnRight ? this.renderLabel() : this.renderIcon(), this.props.iconOnRight ? this.renderIcon() : this.renderLabel()));\n    }\n  }, {\n    key: \"isOutline\",\n    get: function get() {\n      var _this$getThemeProps12 = this.getThemeProps(),\n          outline = _this$getThemeProps12.outline,\n          outlineColor = _this$getThemeProps12.outlineColor;\n\n      return Boolean(outline || outlineColor);\n    }\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      var _this$getThemeProps13 = this.getThemeProps(),\n          link = _this$getThemeProps13.link;\n\n      return !this.isOutline && !link;\n    }\n  }, {\n    key: \"isIconButton\",\n    get: function get() {\n      var _this$getThemeProps14 = this.getThemeProps(),\n          iconSource = _this$getThemeProps14.iconSource,\n          label = _this$getThemeProps14.label;\n\n      return iconSource && !label;\n    }\n  }]);\n  return Button;\n}(_commons.PureBaseComponent);\n\nexports.default = Button;\nButton.displayName = 'Button';\nButton.propTypes = _objectSpread(_objectSpread({}, _text.default.propTypes), {}, {\n  label: _propTypes.default.string,\n  color: _propTypes.default.string,\n  iconSource: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.func]),\n  iconStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  iconOnRight: _propTypes.default.bool,\n  backgroundColor: _propTypes.default.string,\n  size: _propTypes.default.oneOf(['xSmall', 'small', 'medium', 'large']),\n  borderRadius: _propTypes.default.number,\n  onPress: _propTypes.default.func,\n  disabled: _propTypes.default.bool,\n  outline: _propTypes.default.bool,\n  outlineColor: _propTypes.default.string,\n  outlineWidth: _propTypes.default.number,\n  link: _propTypes.default.bool,\n  linkColor: _propTypes.default.string,\n  labelStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  labelProps: _propTypes.default.object,\n  fullWidth: _propTypes.default.bool,\n  round: _propTypes.default.bool,\n  enableShadow: _propTypes.default.bool,\n  avoidInnerPadding: _propTypes.default.bool,\n  avoidMinWidth: _propTypes.default.bool,\n  getActiveBackgroundColor: _propTypes.default.func,\n  animateLayout: _propTypes.default.bool,\n  animateTo: _propTypes.default.oneOf(['center', 'left', 'right'])\n});\nButton.defaultProps = {\n  iconOnRight: false\n};\nButton.sizes = {\n  xSmall: 'xSmall',\n  small: 'small',\n  medium: 'medium',\n  large: 'large'\n};\nButton.animationDirection = {\n  center: 'center',\n  left: 'left',\n  right: 'right'\n};\n\nfunction createStyles() {\n  return _reactNative.StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    containerDisabled: {\n      backgroundColor: _style.Colors.dark60\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: _style.BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowColor: _style.Colors.blue10,\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: _objectSpread(_objectSpread({\n      backgroundColor: 'transparent',\n      flex: 0,\n      flexDirection: 'row'\n    }, _style.Typography.text70), {}, {\n      fontWeight: '100'\n    })\n  });\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/button/index.js"],"names":["PADDINGS","XSMALL","SMALL","MEDIUM","LARGE","HORIZONTAL_PADDINGS","MIN_WIDTH","DEFAULT_SIZE","Button","props","onOrientationChanged","Constants","isTablet","fullWidth","setState","isLandscape","onLayout","event","height","nativeEvent","layout","round","width","size","isAndroid","Platform","Version","borderRadius","_","isUndefined","containerStyle","console","error","prevProps","animateLayout","isEqual","LayoutAnimation","configureNext","Presets","easeInEaseOut","addDimensionsEventListener","removeDimensionsEventListener","styles","createStyles","getThemeProps","isIconButton","accessibilityRole","themeBackgroundColor","backgroundColor","disabled","outline","link","propsBackgroundColor","stateBackgroundColor","state","ThemeManager","CTADisabledColor","Colors","blue30","getActiveBackgroundColor","getBackgroundColor","linkColor","outlineColor","propsColor","color","white","dark10","extractColorValue","LABEL_STYLE_BY_SIZE","sizes","xSmall","Typography","text80","small","medium","large","labelSizeStyle","avoidMinWidth","avoidInnerPadding","outlineWidth","CONTAINER_STYLE_BY_SIZE","padding","paddingVertical","paddingHorizontal","minWidth","forEach","style","containerSizeStyle","undefined","outlineStyle","borderWidth","borderColor","dark70","borderRadiusFromProps","borderRadiusFromState","BorderRadiuses","br100","enableShadow","shadowStyle","shadowColor","propsIconStyle","iconStyle","iconOnRight","tintColor","getLabelColor","marginSide","includes","marginLeft","marginRight","isFilled","dark60","animateTo","alignSelf","iconSource","getIconStyle","label","labelStyle","labelProps","typography","extractTypographyValue","getLabelSizeStyle","text","onPress","testID","others","getShadowStyle","margins","getOutlineStyle","getContainerSizeStyle","borderRadiusStyle","getBorderRadiusStyle","container","getAnimationDirectionStyle","innerContainerLink","getAccessibilityInfo","setRef","children","renderLabel","renderIcon","Boolean","isOutline","PureBaseComponent","displayName","propTypes","Text","PropTypes","string","oneOfType","object","number","func","array","bool","oneOf","defaultProps","animationDirection","center","left","right","StyleSheet","create","justifyContent","alignItems","containerDisabled","br0","blue10","shadowOffset","shadowOpacity","shadowRadius","elevation","flex","flexDirection","text70","fontWeight"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Platform, StyleSheet, LayoutAnimation, Image} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {Colors, Typography, ThemeManager, BorderRadiuses} from '../../style';\nimport {PureBaseComponent} from '../../commons';\nimport TouchableOpacity from '../touchableOpacity';\nimport View from '../view';\nimport Text from '../text';\n\nconst PADDINGS = {\n  XSMALL: 3,\n  SMALL: 4.5,\n  MEDIUM: 6.5,\n  LARGE: 9.5\n};\nconst HORIZONTAL_PADDINGS = {\n  XSMALL: 11,\n  SMALL: 14,\n  MEDIUM: 16,\n  LARGE: 20\n};\nconst MIN_WIDTH = {\n  XSMALL: 66,\n  SMALL: 70,\n  MEDIUM: 77,\n  LARGE: 90\n};\nconst DEFAULT_SIZE = 'large';\n\n/**\n * @description: Basic button component\n * @extends: TouchableOpacity\n * @extendslink: docs/TouchableOpacity\n * @modifiers: margin, background\n * @gif: https://media.giphy.com/media/xULW8j5WzsuPytqklq/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ButtonsScreen.js\n */\nexport default class Button extends PureBaseComponent {\n  static displayName = 'Button';\n  static propTypes = {\n    ...Text.propTypes,\n    /**\n     * Text to show inside the button\n     */\n    label: PropTypes.string,\n    /**\n     * The Button text color (inherited from Text component)\n     */\n    color: PropTypes.string,\n    /**\n     * Icon image source\n     */\n    iconSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.func]),\n    /**\n     * Icon image style\n     */\n    iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Should the icon be right to the label\n     */\n    iconOnRight: PropTypes.bool,\n    /**\n     * Color of the button background\n     */\n    backgroundColor: PropTypes.string,\n    /**\n     * Size of the button [large, medium, small]\n     */\n    size: PropTypes.oneOf(['xSmall', 'small', 'medium', 'large']),\n    /**\n     * Custom border radius.\n     */\n    borderRadius: PropTypes.number,\n    /**\n     * Actions handler\n     */\n    onPress: PropTypes.func,\n    /**\n     * Disable interactions for the component\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Button will have outline style\n     */\n    outline: PropTypes.bool,\n    /**\n     * The outline color\n     */\n    outlineColor: PropTypes.string,\n    /**\n     * The outline width\n     */\n    outlineWidth: PropTypes.number,\n    /**\n     * Button will look like a link\n     */\n    link: PropTypes.bool,\n    /**\n     * label color for when it's displayed as link\n     */\n    linkColor: PropTypes.string,\n    /**\n     * Additional styles for label text\n     */\n    labelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Props that will be passed to the button's Text label.\n     */\n    labelProps: PropTypes.object,\n    /**\n     * should the button act as a coast to coast button (no border radius)\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * should the button be a round button\n     */\n    round: PropTypes.bool,\n    /**\n     * Control shadow visibility\n     */\n    enableShadow: PropTypes.bool, // iOS-only\n    /**\n     * avoid inner button padding\n     */\n    avoidInnerPadding: PropTypes.bool,\n    /**\n     * avoid minimum width constraints\n     */\n    avoidMinWidth: PropTypes.bool,\n    /**\n     * callback for getting activeBackgroundColor (e.g. (calculatedBackgroundColor, prop) => {...})\n     * better set using ThemeManager\n     */\n    getActiveBackgroundColor: PropTypes.func,\n    /**\n     * should animate layout change\n     * Note: For Android you must set 'setLayoutAnimationEnabledExperimental(true)' via RN's 'UIManager'\n     */\n    animateLayout: PropTypes.bool,\n    /**\n     * the direction of the animation ('left' and 'right' will effect the button's own alignment)\n     */\n    animateTo: PropTypes.oneOf(['center', 'left', 'right'])\n  };\n\n  static defaultProps = {\n    iconOnRight: false\n  };\n\n  static sizes = {\n    xSmall: 'xSmall',\n    small: 'small',\n    medium: 'medium',\n    large: 'large'\n  };\n\n  static animationDirection = {\n    center: 'center',\n    left: 'left',\n    right: 'right'\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!_.isUndefined(props.containerStyle)) {\n      console.error('Button \"containerStyle\" prop will be deprecated soon, please use \"style\" instead');\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.animateLayout && !_.isEqual(prevProps, this.props)) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    }\n  }\n\n  componentDidMount() {\n    Constants.addDimensionsEventListener(this.onOrientationChanged);\n  }\n\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.onOrientationChanged);\n  }\n\n  onOrientationChanged = () => {\n    if (Constants.isTablet && this.props.fullWidth) {\n      // only to trigger re-render\n      this.setState({isLandscape: Constants.isLandscape});\n    }\n  };\n\n  // This method will be called more than once in case of layout change!\n  onLayout = event => {\n    const height = event.nativeEvent.layout.height;\n    if (this.props.round) {\n      const width = event.nativeEvent.layout.width;\n      const size = height >= width ? height : width;\n      this.setState({size});\n    }\n\n    if (Constants.isAndroid && Platform.Version <= 17) {\n      this.setState({borderRadius: height / 2});\n    }\n  };\n\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps());\n  }\n\n  get isOutline() {\n    const {outline, outlineColor} = this.getThemeProps();\n    return Boolean(outline || outlineColor);\n  }\n\n  get isFilled() {\n    const {link} = this.getThemeProps();\n    return !this.isOutline && !link;\n  }\n\n  get isIconButton() {\n    const {iconSource, label} = this.getThemeProps();\n    return iconSource && !label;\n  }\n\n  getAccessibilityInfo() {\n    if (this.isIconButton) {\n      return {\n        accessibilityRole: 'imagebutton'\n      };\n    }\n  }\n\n  getBackgroundColor() {\n    const {backgroundColor: themeBackgroundColor} = this.getThemeProps();\n    const {disabled, outline, link, backgroundColor: propsBackgroundColor} = this.props;\n    const {backgroundColor: stateBackgroundColor} = this.state;\n\n    if (!outline && !link) {\n      if (disabled) {\n        return ThemeManager.CTADisabledColor;\n      }\n\n      return propsBackgroundColor || stateBackgroundColor || themeBackgroundColor || Colors.blue30;\n    }\n    return 'transparent';\n  }\n\n  getActiveBackgroundColor() {\n    const {getActiveBackgroundColor} = this.getThemeProps();\n    if (getActiveBackgroundColor) {\n      return getActiveBackgroundColor(this.getBackgroundColor(), this.getThemeProps());\n    }\n  }\n\n  getLabelColor() {\n    const {link, linkColor, outline, outlineColor, disabled, color: propsColor} = this.getThemeProps();\n\n    let color = Colors.white;\n    if (link) {\n      color = linkColor || Colors.blue30;\n    } else if (outline) {\n      color = outlineColor || Colors.blue30;\n    } else if (this.isIconButton) {\n      color = Colors.dark10;\n    }\n\n    if (disabled && (link || outline)) {\n      return ThemeManager.CTADisabledColor;\n    }\n\n    color = propsColor || this.extractColorValue() || color;\n    return color;\n  }\n\n  getLabelSizeStyle() {\n    const size = this.getThemeProps().size || DEFAULT_SIZE;\n\n    const LABEL_STYLE_BY_SIZE = {};\n    LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = {...Typography.text80};\n    LABEL_STYLE_BY_SIZE[Button.sizes.small] = {...Typography.text80};\n    LABEL_STYLE_BY_SIZE[Button.sizes.medium] = {...Typography.text80};\n    LABEL_STYLE_BY_SIZE[Button.sizes.large] = {};\n\n    const labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n    return labelSizeStyle;\n  }\n\n  getContainerSizeStyle() {\n    const {outline, link, avoidMinWidth, avoidInnerPadding, round} = this.getThemeProps();\n    const size = this.getThemeProps().size || DEFAULT_SIZE;\n    const outlineWidth = this.getThemeProps().outlineWidth || 1;\n\n    const CONTAINER_STYLE_BY_SIZE = {};\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round\n      ? {height: this.state.size, width: this.state.size, padding: PADDINGS.XSMALL}\n      : {\n        paddingVertical: PADDINGS.XSMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n        minWidth: MIN_WIDTH.XSMALL\n      };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round\n      ? {height: this.state.size, width: this.state.size, padding: PADDINGS.SMALL}\n      : {\n        paddingVertical: PADDINGS.SMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n        minWidth: MIN_WIDTH.SMALL\n      };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round\n      ? {height: this.state.size, width: this.state.size, padding: PADDINGS.MEDIUM}\n      : {\n        paddingVertical: PADDINGS.MEDIUM,\n        paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n        minWidth: MIN_WIDTH.MEDIUM\n      };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round\n      ? {height: this.state.size, width: this.state.size, padding: PADDINGS.LARGE}\n      : {\n        paddingVertical: PADDINGS.LARGE,\n        paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n        minWidth: MIN_WIDTH.LARGE\n      };\n\n    if (outline) {\n      _.forEach(CONTAINER_STYLE_BY_SIZE, style => {\n        if (round) {\n          style.padding -= outlineWidth; // eslint-disable-line\n        } else {\n          style.paddingVertical -= outlineWidth; // eslint-disable-line\n          style.paddingHorizontal -= outlineWidth; // eslint-disable-line\n        }\n      });\n    }\n\n    const containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n\n    if (link || (this.isIconButton && !round)) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n      containerSizeStyle.minWidth = undefined;\n    }\n\n    if (avoidMinWidth) {\n      containerSizeStyle.minWidth = undefined;\n    }\n\n    if (avoidInnerPadding) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n    }\n\n    return containerSizeStyle;\n  }\n\n  getOutlineStyle() {\n    const {outline, outlineColor, outlineWidth, link, disabled} = this.getThemeProps();\n\n    let outlineStyle;\n    if ((outline || outlineColor) && !link) {\n      outlineStyle = {\n        borderWidth: outlineWidth || 1,\n        borderColor: outlineColor || Colors.blue30\n      };\n\n      if (disabled) {\n        outlineStyle.borderColor = Colors.dark70;\n      }\n    }\n    return outlineStyle;\n  }\n\n  getBorderRadiusStyle() {\n    const {link, fullWidth, borderRadius: borderRadiusFromProps} = this.getThemeProps();\n    if (link || fullWidth || borderRadiusFromProps === 0) {\n      return {borderRadius: 0};\n    }\n\n    const {borderRadius: borderRadiusFromState} = this.state;\n    const borderRadius = borderRadiusFromProps || borderRadiusFromState || BorderRadiuses.br100;\n    return {borderRadius};\n  }\n\n  getShadowStyle() {\n    const backgroundColor = this.getBackgroundColor();\n    const {enableShadow} = this.getThemeProps();\n    if (enableShadow) {\n      return [this.styles.shadowStyle, backgroundColor && {shadowColor: backgroundColor}];\n    }\n  }\n\n  getIconStyle() {\n    const {disabled, iconStyle: propsIconStyle, iconOnRight} = this.getThemeProps();\n    const size = this.getThemeProps().size || DEFAULT_SIZE;\n    const iconStyle = {\n      tintColor: this.getLabelColor()\n    };\n\n    const marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n    if (!this.isIconButton) {\n      if (iconOnRight) {\n        iconStyle.marginLeft = marginSide;\n      } else {\n        iconStyle.marginRight = marginSide;\n      }\n    }\n\n    if (disabled && !this.isFilled) {\n      iconStyle.tintColor = Colors.dark60;\n    }\n\n    return [iconStyle, propsIconStyle];\n  }\n\n  getAnimationDirectionStyle() {\n    const {animateTo} = this.getThemeProps();\n\n    let style;\n    switch (animateTo) {\n      case 'left':\n        style = {alignSelf: 'flex-start'};\n        break;\n      case 'right':\n        style = {alignSelf: 'flex-end'};\n        break;\n      default:\n        // 'center' is the default\n        break;\n    }\n    return style;\n  }\n\n  renderIcon() {\n    const {iconSource} = this.props;\n\n    if (iconSource) {\n      const iconStyle = this.getIconStyle();\n      if (typeof iconSource === 'function') {\n        return iconSource(iconStyle);\n      } else {\n        return <Image source={iconSource} style={iconStyle}/>;\n      }\n    }\n    return null;\n  }\n\n  renderLabel() {\n    const {label, labelStyle, labelProps} = this.getThemeProps();\n    const typography = this.extractTypographyValue();\n    const color = this.getLabelColor();\n    const labelSizeStyle = this.getLabelSizeStyle();\n\n    if (label) {\n      return (\n        <Text\n          style={[this.styles.text, color && {color}, labelSizeStyle, {...typography}, labelStyle]}\n          numberOfLines={1}\n          {...labelProps}\n        >\n          {label}\n        </Text>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const {onPress, disabled, link, style, containerStyle, testID, animateLayout, ...others} = this.getThemeProps();\n    const shadowStyle = this.getShadowStyle();\n    const {margins} = this.state;\n    const backgroundColor = this.getBackgroundColor();\n    const outlineStyle = this.getOutlineStyle();\n    const containerSizeStyle = this.getContainerSizeStyle();\n    const borderRadiusStyle = this.getBorderRadiusStyle();\n\n    return (\n      <TouchableOpacity\n        style={[\n          this.styles.container,\n          animateLayout && this.getAnimationDirectionStyle(),\n          containerSizeStyle,\n          link && this.styles.innerContainerLink,\n          shadowStyle,\n          margins,\n          containerStyle,\n          backgroundColor && {backgroundColor},\n          borderRadiusStyle,\n          outlineStyle,\n          style\n        ]}\n        activeOpacity={0.6}\n        activeBackgroundColor={this.getActiveBackgroundColor()}\n        onLayout={this.onLayout}\n        onPress={onPress}\n        disabled={disabled}\n        testID={testID}\n        {...this.getAccessibilityInfo()}\n        {...others}\n        ref={this.setRef}\n      >\n        <View row centerV>\n          {this.props.children}\n          {this.props.iconOnRight ? this.renderLabel() : this.renderIcon()}\n          {this.props.iconOnRight ? this.renderIcon() : this.renderLabel()}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    containerDisabled: {\n      backgroundColor: Colors.dark60\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowColor: Colors.blue10,\n      shadowOffset: {height: 5, width: 0},\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: {\n      backgroundColor: 'transparent',\n      flex: 0,\n      flexDirection: 'row',\n      ...Typography.text70,\n      fontWeight: '100'\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}