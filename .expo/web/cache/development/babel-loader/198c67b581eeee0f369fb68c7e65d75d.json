{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeUiLib = require(\"react-native-ui-lib\");\n\nvar _ColorSwatch = _interopRequireWildcard(require(\"./ColorSwatch\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\colorPicker\\\\ColorPalette.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar VERTICAL_PADDING = 16;\nvar HORIZONTAL_PADDING = 20;\nvar MINIMUM_MARGIN = 16;\nvar SCROLLABLE_HEIGHT = 92;\nvar GRADIENT_WIDTH = 27;\nvar DEFAULT_NUMBER_OF_ROWS = 3;\n\nvar gradientImage = function gradientImage() {\n  return require('./assets/gradient.png');\n};\n\nvar ColorPalette = function (_PureBaseComponent) {\n  (0, _inherits2.default)(ColorPalette, _PureBaseComponent);\n\n  var _super = _createSuper(ColorPalette);\n\n  function ColorPalette(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ColorPalette);\n    _this = _super.call(this, props);\n\n    _this.onOrientationChanged = function () {\n      _this.initLocalVariables();\n\n      _this.setState({\n        gradientOpacity: new _reactNative.Animated.Value(0)\n      });\n    };\n\n    _this.getUniqueColors = (0, _memoizeOne.default)(function (colors) {\n      var c = _lodash.default.map(colors, function (color) {\n        if (_reactNativeUiLib.Colors.isTransparent(color)) {\n          return color;\n        }\n\n        return _lodash.default.toUpper(color);\n      });\n\n      return _lodash.default.uniq(c);\n    });\n\n    _this.animateGradientOpacity = function (offsetX, contentWidth) {\n      var overflow = contentWidth - _reactNativeUiLib.Constants.screenWidth;\n      var newValue = offsetX > 0 && offsetX >= overflow - 1 ? 0 : 1;\n\n      _reactNative.Animated.timing(_this.state.gradientOpacity, {\n        toValue: newValue,\n        easing: _reactNative.Easing.inOut(_reactNative.Easing.linear),\n        duration: 300,\n        useNativeDriver: true\n      }).start();\n    };\n\n    _this.onContentSizeChange = function (contentWidth) {\n      if (contentWidth > _reactNativeUiLib.Constants.screenWidth) {\n        _this.setState({\n          scrollable: true,\n          gradientOpacity: new _reactNative.Animated.Value(1)\n        });\n      }\n    };\n\n    _this.onScroll = function (event) {\n      var _event$nativeEvent = event.nativeEvent,\n          contentOffset = _event$nativeEvent.contentOffset,\n          contentSize = _event$nativeEvent.contentSize;\n      var offsetX = contentOffset.x;\n      var contentWidth = contentSize.width;\n\n      _this.animateGradientOpacity(offsetX, contentWidth);\n    };\n\n    _this.onChangePage = function (index) {\n      _this.setState({\n        currentPage: index\n      });\n    };\n\n    _this.onValueChange = function (value, options) {\n      _lodash.default.invoke(_this.props, 'onValueChange', value, options);\n    };\n\n    _this.onLayout = function () {\n      setTimeout(function () {\n        _this.scrollToSelected();\n      }, 0);\n    };\n\n    _this.getHorizontalMargins = function (index) {\n      var isFirst = index === 0;\n      var isOnLeft = isFirst || index % _this.itemsPerRow === 0;\n      var isOnRight = index % _this.itemsPerRow === _this.itemsPerRow - 1;\n      var marginLeft;\n      var marginRight;\n\n      if (_this.usePagination) {\n        marginLeft = isOnLeft ? 0 : _this.innerMargin;\n        marginRight = isOnRight ? 0 : _this.innerMargin;\n      } else {\n        var isLast = index === _this.colors.length - 1;\n        marginLeft = isFirst ? 8 : _this.innerMargin;\n        marginRight = isLast ? 20 : _this.innerMargin;\n      }\n\n      return {\n        marginLeft: marginLeft,\n        marginRight: marginRight\n      };\n    };\n\n    _this.getSwatchStyle = function (index) {\n      var sizeHasChanged = _this.colors.length !== _this.currentColorsCount;\n      var isNextToLastIndex = index === _this.colors.length - 2;\n\n      if (_lodash.default.isUndefined(_this.swatchStyle[index]) || !_this.usePagination && sizeHasChanged && isNextToLastIndex) {\n        _this.swatchStyle[index] = _objectSpread(_objectSpread({}, _this.getHorizontalMargins(index)), _this.props.swatchStyle);\n\n        if (sizeHasChanged && isNextToLastIndex) {\n          _this.currentColorsCount = _this.colors.length;\n        }\n      }\n\n      return _this.swatchStyle[index];\n    };\n\n    _this.state = {\n      currentPage: 0,\n      scrollable: false,\n      gradientOpacity: new _reactNative.Animated.Value(0)\n    };\n    _this.carousel = _react.default.createRef();\n    _this.scrollView = _react.default.createRef();\n\n    _this.initLocalVariables();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(ColorPalette, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _reactNativeUiLib.Constants.addDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _reactNativeUiLib.Constants.removeDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"initLocalVariables\",\n    value: function initLocalVariables() {\n      this.itemsRefs = undefined;\n      this.selectedColorIndex = undefined;\n      this.selectedPage = undefined;\n      this.currentColorsCount = this.colors.length;\n      this.itemsPerRow = this.getItemsPerRow();\n      this.itemsPerPage = this.itemsPerRow * this.getNumberOfRows();\n      this.usePagination = this.shouldUsePagination();\n      this.innerMargin = this.getInnerMargin();\n      this.swatchStyle = [];\n    }\n  }, {\n    key: \"getNumberOfRows\",\n    value: function getNumberOfRows() {\n      var numberOfRows = this.props.numberOfRows;\n\n      if (!_lodash.default.inRange(numberOfRows, 2, 6)) {\n        console.warn(numberOfRows + \" is not within valid range of color rows (2 to 5); defaulting to \" + DEFAULT_NUMBER_OF_ROWS + \".\");\n        return DEFAULT_NUMBER_OF_ROWS;\n      }\n\n      return numberOfRows;\n    }\n  }, {\n    key: \"getItemsPerRow\",\n    value: function getItemsPerRow() {\n      var itemsPerRow = 1;\n      var firstItemWidth = 2 * HORIZONTAL_PADDING + _ColorSwatch.SWATCH_SIZE;\n      var additionalItemMinimumWidth = _ColorSwatch.SWATCH_SIZE + MINIMUM_MARGIN;\n      itemsPerRow += Math.floor((_reactNativeUiLib.Constants.screenWidth - firstItemWidth) / additionalItemMinimumWidth);\n      return itemsPerRow;\n    }\n  }, {\n    key: \"shouldUsePagination\",\n    value: function shouldUsePagination() {\n      var usePagination = this.props.usePagination;\n      return usePagination && this.colors.length > this.itemsPerPage;\n    }\n  }, {\n    key: \"getInnerMargin\",\n    value: function getInnerMargin() {\n      if (!this.usePagination) {\n        return HORIZONTAL_PADDING / 2;\n      }\n\n      var remainingSpace = _reactNativeUiLib.Constants.screenWidth - this.itemsPerRow * _ColorSwatch.SWATCH_SIZE - 2 * HORIZONTAL_PADDING;\n      var numberOfMargins = this.itemsPerRow - 1;\n      var margin = remainingSpace / numberOfMargins;\n      return (margin - 0.001) / 2;\n    }\n  }, {\n    key: \"scrollToSelected\",\n    value: function scrollToSelected() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          scrollable = _this$state.scrollable,\n          currentPage = _this$state.currentPage;\n\n      if (scrollable && this.selectedColorIndex !== undefined) {\n        var childRef = this.itemsRefs[this.selectedColorIndex];\n\n        if (childRef) {\n          var handle = (0, _reactNative.findNodeHandle)(childRef);\n\n          if (handle) {\n            _reactNative.UIManager.measureLayoutRelativeToParent(handle, function (e) {\n              console.warn(e);\n            }, function (x, y, w, h) {\n              if (x + w > _reactNativeUiLib.Constants.screenWidth) {\n                _this2.scrollView.current.scrollTo({\n                  x: x + w + HORIZONTAL_PADDING - _reactNativeUiLib.Constants.screenWidth,\n                  y: 0,\n                  animated: false\n                });\n              }\n            });\n          }\n        }\n      } else if (this.usePagination) {\n        this.carousel.current.goToPage(this.selectedPage || currentPage, false);\n      }\n    }\n  }, {\n    key: \"renderGradient\",\n    value: function renderGradient() {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        pointerEvents: \"none\",\n        style: {\n          position: 'absolute',\n          right: 0,\n          opacity: this.state.gradientOpacity\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeUiLib.Image, {\n        source: gradientImage(),\n        resizeMode: 'stretch',\n        style: {\n          width: GRADIENT_WIDTH,\n          height: SCROLLABLE_HEIGHT - 12,\n          tintColor: _reactNativeUiLib.Colors.white\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderColorSwatch\",\n    value: function renderColorSwatch(color, index) {\n      var _this3 = this;\n\n      var animatedIndex = this.props.animatedIndex;\n      return _react.default.createElement(_ColorSwatch.default, {\n        style: this.getSwatchStyle(index),\n        index: index,\n        key: color,\n        color: color,\n        value: color,\n        selected: this.value === color,\n        animated: index === animatedIndex,\n        onPress: this.onValueChange,\n        ref: function ref(r) {\n          return _this3.itemsRefs[index] = r;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderPalette\",\n    value: function renderPalette(props, contentStyle, colors, pageIndex) {\n      var _this4 = this;\n\n      var style = props.style,\n          others = (0, _objectWithoutProperties2.default)(props, [\"style\"]);\n      this.itemsRefs = [];\n      return _react.default.createElement(_reactNativeUiLib.View, (0, _extends2.default)({\n        key: pageIndex\n      }, others, {\n        style: [styles.paletteContainer, contentStyle, style],\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 7\n        }\n      }), _lodash.default.map(colors, function (color, i) {\n        if (color === _this4.value) {\n          _this4.selectedColorIndex = i;\n          _this4.selectedPage = pageIndex;\n        }\n\n        return _this4.renderColorSwatch(color, i);\n      }));\n    }\n  }, {\n    key: \"renderScroll\",\n    value: function renderScroll() {\n      var _this$props = this.props,\n          containerStyle = _this$props.containerStyle,\n          others = (0, _objectWithoutProperties2.default)(_this$props, [\"containerStyle\"]);\n      var scrollable = this.state.scrollable;\n      return _react.default.createElement(_reactNative.ScrollView, {\n        ref: this.scrollView,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: [containerStyle, styles.scrollContainer],\n        scrollEnabled: scrollable,\n        onContentSizeChange: this.onContentSizeChange,\n        onScroll: this.onScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 7\n        }\n      }, this.renderPalette(others, styles.scrollContent, this.colors));\n    }\n  }, {\n    key: \"renderScrollableContent\",\n    value: function renderScrollableContent() {\n      var scrollable = this.state.scrollable;\n\n      if (scrollable) {\n        return _react.default.createElement(_reactNativeUiLib.View, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 9\n          }\n        }, this.renderScroll(), this.renderGradient());\n      }\n\n      return this.renderScroll();\n    }\n  }, {\n    key: \"renderPaginationContent\",\n    value: function renderPaginationContent() {\n      var _this5 = this;\n\n      var _this$props2 = this.props,\n          containerStyle = _this$props2.containerStyle,\n          loop = _this$props2.loop,\n          others = (0, _objectWithoutProperties2.default)(_this$props2, [\"containerStyle\", \"loop\"]);\n      var currentPage = this.state.currentPage;\n\n      var colorGroups = _lodash.default.chunk(this.colors, this.itemsPerPage);\n\n      return _react.default.createElement(_reactNativeUiLib.View, {\n        center: true,\n        style: [containerStyle, styles.paginationContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeUiLib.Carousel, {\n        loop: loop,\n        onChangePage: this.onChangePage,\n        ref: this.carousel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 9\n        }\n      }, _lodash.default.map(colorGroups, function (colorsPerPage, index) {\n        return _this5.renderPalette(others, _objectSpread(_objectSpread({}, styles.page), {}, {\n          width: _reactNativeUiLib.Constants.screenWidth\n        }), colorsPerPage, index);\n      })), _react.default.createElement(_reactNativeUiLib.PageControl, {\n        size: 6,\n        color: _reactNativeUiLib.Colors.dark10,\n        inactiveColor: _reactNativeUiLib.Colors.dark50,\n        spacing: 8,\n        numOfPages: colorGroups.length,\n        currentPage: currentPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.usePagination ? this.renderPaginationContent() : this.renderScrollableContent();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      var value = this.props.value;\n\n      if (_reactNativeUiLib.Colors.isTransparent(value)) {\n        return value;\n      }\n\n      return _lodash.default.toUpper(value);\n    }\n  }, {\n    key: \"colors\",\n    get: function get() {\n      return this.getUniqueColors(this.props.colors);\n    }\n  }]);\n  return ColorPalette;\n}(_reactNativeUiLib.PureBaseComponent);\n\nexports.default = ColorPalette;\nColorPalette.displayName = 'ColorPalette';\nColorPalette.propTypes = {\n  colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  usePagination: _propTypes.default.bool,\n  loop: _propTypes.default.bool,\n  numberOfRows: _propTypes.default.number,\n  swatchStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  animatedIndex: _propTypes.default.number,\n  onValueChange: _propTypes.default.func\n};\nColorPalette.defaultProps = {\n  numberOfRows: DEFAULT_NUMBER_OF_ROWS,\n  usePagination: true,\n  loop: true\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  paletteContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingLeft: HORIZONTAL_PADDING,\n    paddingVertical: VERTICAL_PADDING\n  },\n  paginationContainer: {\n    flex: 1,\n    backgroundColor: _reactNativeUiLib.Colors.white,\n    paddingBottom: VERTICAL_PADDING\n  },\n  scrollContainer: {\n    backgroundColor: _reactNativeUiLib.Colors.white\n  },\n  page: {\n    flexWrap: 'wrap'\n  },\n  scrollContent: {\n    height: SCROLLABLE_HEIGHT,\n    paddingLeft: 12\n  }\n});","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/colorPicker/ColorPalette.js"],"names":["VERTICAL_PADDING","HORIZONTAL_PADDING","MINIMUM_MARGIN","SCROLLABLE_HEIGHT","GRADIENT_WIDTH","DEFAULT_NUMBER_OF_ROWS","gradientImage","require","ColorPalette","props","onOrientationChanged","initLocalVariables","setState","gradientOpacity","Animated","Value","getUniqueColors","colors","c","_","map","color","Colors","isTransparent","toUpper","uniq","animateGradientOpacity","offsetX","contentWidth","overflow","Constants","screenWidth","newValue","timing","state","toValue","easing","Easing","inOut","linear","duration","useNativeDriver","start","onContentSizeChange","scrollable","onScroll","event","nativeEvent","contentOffset","contentSize","x","width","onChangePage","index","currentPage","onValueChange","value","options","invoke","onLayout","setTimeout","scrollToSelected","getHorizontalMargins","isFirst","isOnLeft","itemsPerRow","isOnRight","marginLeft","marginRight","usePagination","innerMargin","isLast","length","getSwatchStyle","sizeHasChanged","currentColorsCount","isNextToLastIndex","isUndefined","swatchStyle","carousel","React","createRef","scrollView","addDimensionsEventListener","removeDimensionsEventListener","itemsRefs","undefined","selectedColorIndex","selectedPage","getItemsPerRow","itemsPerPage","getNumberOfRows","shouldUsePagination","getInnerMargin","numberOfRows","inRange","console","warn","firstItemWidth","SWATCH_SIZE","additionalItemMinimumWidth","Math","floor","remainingSpace","numberOfMargins","margin","childRef","handle","UIManager","measureLayoutRelativeToParent","e","y","w","h","current","scrollTo","animated","goToPage","position","right","opacity","height","tintColor","white","animatedIndex","r","contentStyle","pageIndex","style","others","styles","paletteContainer","i","renderColorSwatch","containerStyle","scrollContainer","renderPalette","scrollContent","renderScroll","renderGradient","loop","colorGroups","chunk","paginationContainer","colorsPerPage","page","dark10","dark50","renderPaginationContent","renderScrollableContent","PureBaseComponent","displayName","propTypes","PropTypes","arrayOf","string","isRequired","oneOfType","object","number","array","bool","func","defaultProps","StyleSheet","create","flexDirection","alignItems","paddingLeft","paddingVertical","flex","backgroundColor","paddingBottom","flexWrap"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport React from 'react';\nimport {StyleSheet, ScrollView, Animated, Easing, UIManager, findNodeHandle} from 'react-native';\nimport {Constants, Colors, PureBaseComponent, View, Carousel, PageControl, Image} from 'react-native-ui-lib';\nimport ColorSwatch, {SWATCH_SIZE} from './ColorSwatch';\n\n\nconst VERTICAL_PADDING = 16;\nconst HORIZONTAL_PADDING = 20;\nconst MINIMUM_MARGIN = 16;\nconst SCROLLABLE_HEIGHT = 92;\nconst GRADIENT_WIDTH = 27;\nconst DEFAULT_NUMBER_OF_ROWS = 3;\nconst gradientImage = () => require('./assets/gradient.png');\n\n/**\n * @description: A color palette component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.js\n * @notes: This is a screen width component\n * @extends: ScrollView\n */\nexport default class ColorPalette extends PureBaseComponent {\n  static displayName = 'ColorPalette';\n\n  static propTypes = {\n    /**\n     * Array of colors to render in the palette\n     */\n    colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n    /**\n     * Style to pass the palette container\n     */\n    containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Whether to use pagination when number of colors exceeds the number of rows\n     */\n    usePagination: PropTypes.bool,\n    /**\n     * Whether the colors pagination scrolls in a loop\n     */\n    loop: PropTypes.bool,\n    /**\n     * The number of color rows from 2 to 5\n     */\n    numberOfRows: PropTypes.number,\n    /**\n     * Style to pass all the ColorSwatches in the palette\n     */\n    swatchStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * The value of the selected swatch\n     */\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    /**\n     * The index of the item to animate at first render (default is last)\n     */\n    animatedIndex: PropTypes.number,\n    /**\n     * Invoked once when value changes by selecting one of the swatches in the palette\n     */\n    onValueChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    numberOfRows: DEFAULT_NUMBER_OF_ROWS,\n    usePagination: true,\n    loop: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: 0,\n      scrollable: false,\n      gradientOpacity: new Animated.Value(0)\n    };\n\n    this.carousel = React.createRef();\n    this.scrollView = React.createRef();\n    this.initLocalVariables();\n  }\n\n  componentDidMount() {\n    Constants.addDimensionsEventListener(this.onOrientationChanged);\n  }\n\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.onOrientationChanged);\n  }\n\n  onOrientationChanged = () => {\n    this.initLocalVariables();\n    this.setState({gradientOpacity: new Animated.Value(0)}); // only to trigger render\n  }\n\n  initLocalVariables() {\n    this.itemsRefs = undefined;\n    this.selectedColorIndex = undefined;\n    this.selectedPage = undefined;\n    this.currentColorsCount = this.colors.length;\n    this.itemsPerRow = this.getItemsPerRow();\n    this.itemsPerPage = this.itemsPerRow * this.getNumberOfRows();\n    this.usePagination = this.shouldUsePagination();\n    this.innerMargin = this.getInnerMargin();\n    this.swatchStyle = [];\n  }\n\n  get value() {\n    const {value} = this.props;\n\n    if (Colors.isTransparent(value)) {\n      return value;\n    }\n    return _.toUpper(value);\n  }\n\n  get colors() {\n    return this.getUniqueColors(this.props.colors);\n  }\n\n  getUniqueColors = memoize(\n    (colors) => {\n      const c = _.map(colors, color => {\n        if (Colors.isTransparent(color)) {\n          return color;\n        }\n        return _.toUpper(color);\n      });\n      return _.uniq(c);\n    }\n  );\n\n  getNumberOfRows() {\n    const {numberOfRows} = this.props;\n\n    if (!_.inRange(numberOfRows, 2, 6)) {\n      console.warn(\n        `${numberOfRows} is not within valid range of color rows (2 to 5); defaulting to ${DEFAULT_NUMBER_OF_ROWS}.`\n      );\n      return DEFAULT_NUMBER_OF_ROWS;\n    }\n    return numberOfRows;\n  }\n\n  getItemsPerRow() {\n    let itemsPerRow = 1;\n    // first item has the page's padding around it\n    const firstItemWidth = 2 * HORIZONTAL_PADDING + SWATCH_SIZE;\n    // additional items have the minimum width of the margin between them and the previous item's width\n    const additionalItemMinimumWidth = SWATCH_SIZE + MINIMUM_MARGIN;\n    // floor(space left / size of additional items)\n    itemsPerRow += Math.floor((Constants.screenWidth - firstItemWidth) / additionalItemMinimumWidth);\n\n    return itemsPerRow;\n  }\n\n  shouldUsePagination() {\n    const {usePagination} = this.props;\n    return usePagination && this.colors.length > this.itemsPerPage;\n  }\n\n  getInnerMargin() {\n    if (!this.usePagination) {\n      return HORIZONTAL_PADDING / 2;\n    }\n\n    // Now that we have the itemsPerRow set, we can calculate the actual innerMargin\n    const remainingSpace = Constants.screenWidth - this.itemsPerRow * SWATCH_SIZE - 2 * HORIZONTAL_PADDING;\n    // With pagination - there's 1 less space than the number of items\n    const numberOfMargins = this.itemsPerRow - 1;\n    const margin = remainingSpace / numberOfMargins;\n    // We have to subtract something since otherwise some Android devices will overflow into the next line\n    return (margin - 0.001) / 2;\n  }\n\n  animateGradientOpacity = (offsetX, contentWidth) => {\n    const overflow = contentWidth - Constants.screenWidth;\n    const newValue = offsetX > 0 && offsetX >= overflow - 1 ? 0 : 1;\n\n    Animated.timing(this.state.gradientOpacity, {\n      toValue: newValue,\n      easing: Easing.inOut(Easing.linear),\n      duration: 300,\n      useNativeDriver: true\n    }).start();\n  };\n\n  scrollToSelected() {\n    const {scrollable, currentPage} = this.state;\n\n    if (scrollable && this.selectedColorIndex !== undefined) {\n      const childRef = this.itemsRefs[this.selectedColorIndex];\n      \n      if (childRef) {\n        const handle = findNodeHandle(childRef);\n        if (handle) {\n          UIManager.measureLayoutRelativeToParent(\n            handle,\n            e => {\n              console.warn(e);\n            },\n            (x, y, w, h) => {\n              if (x + w > Constants.screenWidth) {\n                this.scrollView.current.scrollTo({\n                  x: x + w + HORIZONTAL_PADDING - Constants.screenWidth,\n                  y: 0,\n                  animated: false\n                });\n              }\n            }\n          );\n        }\n      }\n    } else if (this.usePagination) {\n      this.carousel.current.goToPage(this.selectedPage || currentPage, false);\n    }\n  }\n\n  onContentSizeChange = contentWidth => {\n    if (contentWidth > Constants.screenWidth) {\n      this.setState({scrollable: true, gradientOpacity: new Animated.Value(1)});\n    }\n  };\n\n  onScroll = event => {\n    const {contentOffset, contentSize} = event.nativeEvent;\n    const offsetX = contentOffset.x;\n    const contentWidth = contentSize.width;\n    this.animateGradientOpacity(offsetX, contentWidth);\n  };\n\n  onChangePage = index => {\n    this.setState({currentPage: index});\n  };\n\n  onValueChange = (value, options) => {\n    _.invoke(this.props, 'onValueChange', value, options);\n  };\n\n  onLayout = () => {\n    setTimeout(() => {\n      this.scrollToSelected();\n    }, 0);\n  };\n\n  renderGradient() {\n    return (\n      <Animated.View\n        pointerEvents=\"none\"\n        style={{\n          position: 'absolute',\n          right: 0,\n          opacity: this.state.gradientOpacity\n        }}\n      >\n        <Image\n          source={gradientImage()}\n          resizeMode={'stretch'}\n          style={{width: GRADIENT_WIDTH, height: SCROLLABLE_HEIGHT - 12, tintColor: Colors.white}}\n        />\n      </Animated.View>\n    );\n  }\n\n  getHorizontalMargins = (index) => {\n    const isFirst = index === 0;\n    const isOnLeft = isFirst || index % this.itemsPerRow === 0;\n    const isOnRight = index % this.itemsPerRow === this.itemsPerRow - 1;\n    \n    let marginLeft;\n    let marginRight;\n\n    if (this.usePagination) {\n      marginLeft = isOnLeft ? 0 : this.innerMargin;\n      marginRight = isOnRight ? 0 : this.innerMargin;\n    } else {\n      const isLast = index === this.colors.length - 1;\n      marginLeft = isFirst ? 8 : this.innerMargin;\n      marginRight = isLast ? 20 : this.innerMargin;\n    }\n\n    return {marginLeft, marginRight};\n  };\n\n  getSwatchStyle = (index) => {\n    const sizeHasChanged = this.colors.length !== this.currentColorsCount;\n    const isNextToLastIndex = index === this.colors.length - 2;\n\n    // Need to update the next to last item because it's margin needs to changed\n    if (_.isUndefined(this.swatchStyle[index]) || (!this.usePagination && sizeHasChanged && isNextToLastIndex)) {\n      this.swatchStyle[index] = {...this.getHorizontalMargins(index), ...this.props.swatchStyle};\n      if (sizeHasChanged && isNextToLastIndex) {\n        this.currentColorsCount = this.colors.length;\n      }\n    }\n\n    return this.swatchStyle[index];\n  };\n\n  renderColorSwatch(color, index) {\n    const {animatedIndex} = this.props;\n\n    return (\n      <ColorSwatch\n        style={this.getSwatchStyle(index)}\n        index={index}\n        key={color}\n        color={color}\n        value={color}\n        selected={this.value === color}\n        animated={index === animatedIndex}\n        onPress={this.onValueChange}\n        ref={r => (this.itemsRefs[index] = r)}\n      />\n    );\n  }\n\n  renderPalette(props, contentStyle, colors, pageIndex) {\n    const {style, ...others} = props;\n    this.itemsRefs = [];\n\n    return (\n      <View key={pageIndex} {...others} style={[styles.paletteContainer, contentStyle, style]} onLayout={this.onLayout}>\n        {_.map(colors, (color, i) => {\n          if (color === this.value) {\n            this.selectedColorIndex = i;\n            this.selectedPage = pageIndex;\n          }\n          return this.renderColorSwatch(color, i);\n        })}\n      </View>\n    );\n  }\n\n  renderScroll() {\n    const {containerStyle, ...others} = this.props;\n    const {scrollable} = this.state;\n\n    return (\n      <ScrollView\n        ref={this.scrollView}\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        style={[containerStyle, styles.scrollContainer]}\n        scrollEnabled={scrollable}\n        onContentSizeChange={this.onContentSizeChange}\n        onScroll={this.onScroll}\n      >\n        {this.renderPalette(others, styles.scrollContent, this.colors)}\n      </ScrollView>\n    );\n  }\n\n  renderScrollableContent() {\n    const {scrollable} = this.state;\n\n    if (scrollable) {\n      return (\n        <View row>\n          {this.renderScroll()}\n          {this.renderGradient()}\n        </View>\n      );\n    }\n    return this.renderScroll();\n  }\n\n  renderPaginationContent() {\n    const {containerStyle, loop, ...others} = this.props;\n    const {currentPage} = this.state;\n    const colorGroups = _.chunk(this.colors, this.itemsPerPage);\n\n    return (\n      <View center style={[containerStyle, styles.paginationContainer]}>\n        <Carousel loop={loop} onChangePage={this.onChangePage} ref={this.carousel}>\n          {_.map(colorGroups, (colorsPerPage, index) => {\n            return this.renderPalette(others, {...styles.page, width: Constants.screenWidth}, colorsPerPage, index);\n          })}\n        </Carousel>\n        <PageControl\n          size={6}\n          color={Colors.dark10}\n          inactiveColor={Colors.dark50}\n          spacing={8}\n          numOfPages={colorGroups.length}\n          currentPage={currentPage}\n        />\n      </View>\n    );\n  }\n\n  render() {\n    return this.usePagination ? this.renderPaginationContent() : this.renderScrollableContent();\n  }\n}\n\nconst styles = StyleSheet.create({\n  paletteContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingLeft: HORIZONTAL_PADDING,\n    paddingVertical: VERTICAL_PADDING\n  },\n  paginationContainer: {\n    flex: 1,\n    backgroundColor: Colors.white,\n    paddingBottom: VERTICAL_PADDING\n  },\n  scrollContainer: {\n    backgroundColor: Colors.white\n  },\n  page: {\n    flexWrap: 'wrap'\n  },\n  scrollContent: {\n    height: SCROLLABLE_HEIGHT,\n    paddingLeft: 12\n  }\n});\n"]},"metadata":{},"sourceType":"script"}