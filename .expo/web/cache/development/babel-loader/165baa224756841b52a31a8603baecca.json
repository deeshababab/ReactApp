{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _commons = require(\"../../commons\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _style = require(\"../../style\");\n\nvar _view = _interopRequireDefault(require(\"../../components/view\"));\n\nvar _Swipeable = _interopRequireDefault(require(\"./Swipeable\"));\n\nvar _drawer = _interopRequireDefault(require(\"./drawer.deprecated\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\interactableComponents\\\\drawer\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar deprecatedProps = ['damping', 'tension', 'onPress', 'equalWidths'];\nvar DEFAULT_BG = _style.Colors.blue30;\nvar ITEM_PROP_TYPES = {\n  width: _propTypes.default.number,\n  background: _propTypes.default.string,\n  text: _propTypes.default.string,\n  icon: _propTypes.default.number,\n  onPress: _propTypes.default.func,\n  keepOpen: _propTypes.default.bool,\n  style: _reactNative.ViewPropTypes.style,\n  testID: _propTypes.default.string\n};\n\nvar NewDrawer = function (_PureBaseComponent) {\n  (0, _inherits2.default)(NewDrawer, _PureBaseComponent);\n\n  var _super = _createSuper(NewDrawer);\n\n  function NewDrawer(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, NewDrawer);\n    _this = _super.call(this, props);\n\n    _this.closeDrawer = function () {\n      if (_this.props.migrate) {\n        _this._swipeableRow.current.close();\n      } else {\n        _this._oldDrawer.current.closeDrawer();\n      }\n    };\n\n    _this.onSwipeableWillOpen = function () {\n      _lodash.default.invoke(_this.props, 'onSwipeableWillOpen', _this.props);\n    };\n\n    _this.onSwipeableWillClose = function () {\n      _lodash.default.invoke(_this.props, 'onSwipeableWillClose', _this.props);\n    };\n\n    _this.onAccessibilityAction = function (event) {\n      var actions = _this.getAccessibilityActions();\n\n      var action = _lodash.default.find(actions, function (o) {\n        return o.text === event.nativeEvent.action;\n      });\n\n      _lodash.default.invoke(action, 'onPress');\n    };\n\n    _this.renderLeftActions = function (progress, dragX) {\n      var _this$getThemeProps = _this.getThemeProps(),\n          leftItem = _this$getThemeProps.leftItem;\n\n      var leftItems = leftItem ? [leftItem] : undefined;\n      return _this.renderActions(leftItems, progress, dragX);\n    };\n\n    _this.renderRightActions = function (progress, dragX) {\n      var _this$getThemeProps2 = _this.getThemeProps(),\n          rightItems = _this$getThemeProps2.rightItems;\n\n      return _this.renderActions(rightItems, progress, dragX);\n    };\n\n    _this.renderAction = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          progress = _ref.progress,\n          itemsCount = _ref.itemsCount;\n\n      var _this$getThemeProps3 = _this.getThemeProps(),\n          itemsTintColor = _this$getThemeProps3.itemsTintColor,\n          itemsIconSize = _this$getThemeProps3.itemsIconSize,\n          itemsTextStyle = _this$getThemeProps3.itemsTextStyle,\n          itemsMinWidth = _this$getThemeProps3.itemsMinWidth;\n\n      var inputRange = [index / itemsCount, (index + 1) / itemsCount];\n      var outputRange = [0.2, 1];\n      var scale = progress.interpolate({\n        inputRange: inputRange,\n        outputRange: outputRange,\n        extrapolate: 'clamp'\n      });\n      var opacity = progress.interpolate({\n        inputRange: inputRange,\n        outputRange: outputRange,\n        extrapolate: 'clamp'\n      });\n      return _react.default.createElement(_reactNativeGestureHandler.RectButton, {\n        key: index,\n        testID: item.testID,\n        style: [styles.action, item.style, {\n          backgroundColor: item.background || DEFAULT_BG\n        }, {\n          width: item.width\n        }, {\n          minWidth: itemsMinWidth\n        }],\n        onPress: function onPress() {\n          return _this.onActionPress(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }, item.icon && _react.default.createElement(_reactNative.Animated.Image, {\n        source: item.icon,\n        style: [styles.actionIcon, {\n          width: itemsIconSize,\n          height: itemsIconSize,\n          tintColor: itemsTintColor,\n          opacity: opacity,\n          transform: [{\n            scale: scale\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }), item.text && _react.default.createElement(_reactNative.Animated.Text, {\n        style: [styles.actionText, {\n          color: itemsTintColor,\n          opacity: opacity,\n          transform: [{\n            scale: scale\n          }]\n        }, itemsTextStyle],\n        accessibilityElementsHidden: true,\n        importantForAccessibility: \"no-hide-descendants\",\n        accessible: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }\n      }, item.text));\n    };\n\n    _this._swipeableRow = _react.default.createRef();\n    _this._oldDrawer = _react.default.createRef();\n    _this.animationOptions = {\n      bounciness: props.bounciness || 5\n    };\n    _this.rightActionsContainerStyle = _this.getRightActionsContainerStyle();\n    _this.leftActionsContainerStyle = _this.getLeftActionsContainerStyle();\n    _this.leftRender = props.leftItem ? _helpers.Constants.isRTL ? _this.renderRightActions : _this.renderLeftActions : undefined;\n    _this.rightRender = props.rightItems ? _helpers.Constants.isRTL ? _this.renderLeftActions : _this.renderRightActions : undefined;\n    return _this;\n  }\n\n  (0, _createClass2.default)(NewDrawer, [{\n    key: \"checkDeprecations\",\n    value: function checkDeprecations(props) {\n      if (props.onPress !== undefined) {\n        console.warn('Drawer\\'s \\'onPress\\' prop is deprecated. ' + 'For items, send \\'onPress\\' handler in the item\\'s object and for content use your own.');\n      }\n\n      deprecatedProps.forEach(function (prop) {\n        if (props[prop]) {\n          console.warn(\"\\\"Drawer's \" + prop + \"\\\" property is deprecated.\");\n        }\n      });\n    }\n  }, {\n    key: \"getLeftActionsContainerStyle\",\n    value: function getLeftActionsContainerStyle() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          rightItems = _this$getThemeProps4.rightItems,\n          leftItem = _this$getThemeProps4.leftItem;\n\n      return this.getActionsContainerStyle(_helpers.Constants.isRTL ? rightItems : [leftItem]);\n    }\n  }, {\n    key: \"getRightActionsContainerStyle\",\n    value: function getRightActionsContainerStyle() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          rightItems = _this$getThemeProps5.rightItems,\n          leftItem = _this$getThemeProps5.leftItem;\n\n      return this.getActionsContainerStyle(_helpers.Constants.isRTL ? [leftItem] : rightItems);\n    }\n  }, {\n    key: \"getActionsContainerStyle\",\n    value: function getActionsContainerStyle(items) {\n      return {\n        backgroundColor: _lodash.default.get(_lodash.default.first(items), 'background', DEFAULT_BG)\n      };\n    }\n  }, {\n    key: \"onActionPress\",\n    value: function onActionPress(item) {\n      if (!item.keepOpen) {\n        this.closeDrawer();\n      }\n\n      _lodash.default.invoke(item, 'onPress');\n    }\n  }, {\n    key: \"getAccessibilityActions\",\n    value: function getAccessibilityActions() {\n      var _this$props = this.props,\n          rightItems = _this$props.rightItems,\n          leftItem = _this$props.leftItem;\n      var actions = {};\n\n      if (leftItem && leftItem.onPress && leftItem.text) {\n        actions[leftItem.text] = leftItem;\n      }\n\n      if (rightItems) {\n        rightItems.forEach(function (item) {\n          if (item.onPress && item.text) {\n            actions[item.text] = item;\n          }\n        });\n      }\n\n      return actions;\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions(items, progress, dragX) {\n      var _this2 = this;\n\n      if (items) {\n        return _react.default.createElement(_view.default, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 9\n          }\n        }, _lodash.default.map(items, function (item, index) {\n          return _this2.renderAction({\n            item: item,\n            index: items.length - index - 1,\n            progress: progress,\n            dragX: dragX,\n            itemsCount: items.length\n          });\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n          migrate = _this$getThemeProps6.migrate,\n          children = _this$getThemeProps6.children,\n          style = _this$getThemeProps6.style,\n          others = (0, _objectWithoutProperties2.default)(_this$getThemeProps6, [\"migrate\", \"children\", \"style\"]);\n\n      if (!migrate) {\n        return _react.default.createElement(_drawer.default, (0, _extends2.default)({}, this.getThemeProps(), {\n          ref: this._oldDrawer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 14\n          }\n        }));\n      }\n\n      return _react.default.createElement(_Swipeable.default, (0, _extends2.default)({}, others, {\n        ref: this._swipeableRow,\n        friction: 1,\n        containerStyle: style,\n        animationOptions: this.animationOptions,\n        renderLeftActions: this.leftRender,\n        renderRightActions: this.rightRender,\n        rightActionsContainerStyle: this.rightActionsContainerStyle,\n        leftActionsContainerStyle: this.leftActionsContainerStyle,\n        onSwipeableWillOpen: this.onSwipeableWillOpen,\n        onSwipeableWillClose: this.onSwipeableWillClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(_view.default, (0, _extends2.default)({\n        flex: true,\n        accessible: true,\n        accessibilityActions: Object.keys(this.getAccessibilityActions()),\n        onAccessibilityAction: this.onAccessibilityAction\n      }, this.extractAccessibilityProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 9\n        }\n      }), children));\n    }\n  }]);\n  return NewDrawer;\n}(_commons.PureBaseComponent);\n\nNewDrawer.displayName = 'Drawer';\nNewDrawer.propTypes = _objectSpread(_objectSpread({}, _Swipeable.default.PropTypes), {}, {\n  damping: _propTypes.default.number,\n  tension: _propTypes.default.number,\n  onPress: _propTypes.default.func,\n  bounciness: _propTypes.default.number,\n  onDragStart: _propTypes.default.func,\n  rightItems: _propTypes.default.arrayOf(_propTypes.default.shape(ITEM_PROP_TYPES)),\n  leftItem: _propTypes.default.shape(ITEM_PROP_TYPES),\n  equalWidths: _propTypes.default.bool,\n  itemsMinWidth: _propTypes.default.number,\n  itemsTintColor: _propTypes.default.string,\n  itemsIconSize: _propTypes.default.number,\n  itemsTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),\n  useNativeAnimations: _propTypes.default.bool\n});\nNewDrawer.defaultProps = {\n  itemsTintColor: _style.Colors.white,\n  itemsIconSize: 24\n};\nvar _default = NewDrawer;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  leftAction: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    backgroundColor: '#388e3c'\n  },\n  actionIcon: {\n    width: 30,\n    marginHorizontal: 10\n  },\n  actionText: {\n    color: '#ffffff'\n  },\n  action: {\n    paddingHorizontal: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#dd2c00'\n  }\n});","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/interactableComponents/drawer/index.js"],"names":["deprecatedProps","DEFAULT_BG","Colors","blue30","ITEM_PROP_TYPES","width","PropTypes","number","background","string","text","icon","onPress","func","keepOpen","bool","style","ViewPropTypes","testID","NewDrawer","props","closeDrawer","migrate","_swipeableRow","current","close","_oldDrawer","onSwipeableWillOpen","_","invoke","onSwipeableWillClose","onAccessibilityAction","event","actions","getAccessibilityActions","action","find","o","nativeEvent","renderLeftActions","progress","dragX","getThemeProps","leftItem","leftItems","undefined","renderActions","renderRightActions","rightItems","renderAction","item","index","itemsCount","itemsTintColor","itemsIconSize","itemsTextStyle","itemsMinWidth","inputRange","outputRange","scale","interpolate","extrapolate","opacity","styles","backgroundColor","minWidth","onActionPress","actionIcon","height","tintColor","transform","actionText","color","React","createRef","animationOptions","bounciness","rightActionsContainerStyle","getRightActionsContainerStyle","leftActionsContainerStyle","getLeftActionsContainerStyle","leftRender","Constants","isRTL","rightRender","console","warn","forEach","prop","getActionsContainerStyle","items","get","first","map","length","children","others","Object","keys","extractAccessibilityProps","PureBaseComponent","displayName","propTypes","Swipeable","damping","tension","onDragStart","arrayOf","shape","equalWidths","oneOfType","object","useNativeAnimations","defaultProps","white","StyleSheet","create","leftAction","flex","justifyContent","alignItems","marginHorizontal","paddingHorizontal"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Animated, StyleSheet, ViewPropTypes} from 'react-native';\nimport {RectButton} from 'react-native-gesture-handler';\nimport {PureBaseComponent} from '../../commons';\nimport {Constants} from '../../helpers';\nimport {Colors} from '../../style';\nimport View from '../../components/view';\nimport Swipeable from './Swipeable';\nimport OldDrawer from './drawer.deprecated';\n\nconst deprecatedProps = ['damping', 'tension', 'onPress', 'equalWidths'];\nconst DEFAULT_BG = Colors.blue30;\nconst ITEM_PROP_TYPES = {\n  width: PropTypes.number,\n  background: PropTypes.string,\n  text: PropTypes.string,\n  icon: PropTypes.number,\n  onPress: PropTypes.func,\n  keepOpen: PropTypes.bool,\n  style: ViewPropTypes.style,\n  testID: PropTypes.string\n};\n\n/**\n * @description: Drawer Component\n * @important: If your app works with RNN, your screen must be wrapped\n * with gestureHandlerRootHOC from 'react-native-gesture-handler'. see\n * @importantLink: https://kmagiera.github.io/react-native-gesture-handler/docs/getting-started.html#with-wix-react-native-navigation-https-githubcom-wix-react-native-navigation\n */\nclass NewDrawer extends PureBaseComponent {\n  static displayName = 'Drawer';\n\n  static propTypes = {\n    ...Swipeable.PropTypes,\n    /**\n     * The drawer top layer's damping - DEPRECATED\n     */\n    damping: PropTypes.number,\n    /**\n     * The drawer top layer's tension - DEPRECATED\n     */\n    tension: PropTypes.number,\n    /**\n     * Press handler - DEPRECATED\n     */\n    onPress: PropTypes.func,\n    /**\n     * The drawer animation bounciness\n     */\n    bounciness: PropTypes.number,\n    /**\n     * OnDragStart handler\n     */\n    onDragStart: PropTypes.func,\n    /**\n     * The bottom layer's items to appear when opened from the right\n     */\n    rightItems: PropTypes.arrayOf(PropTypes.shape(ITEM_PROP_TYPES)),\n    /**\n     * The bottom layer's item to appear when opened from the left (a single item)\n     */\n    leftItem: PropTypes.shape(ITEM_PROP_TYPES),\n    /**\n     * Whether to give the items equal width (the max width) - DEPRECATED\n     */\n    equalWidths: PropTypes.bool,\n    /**\n     * Set a different minimum width\n     */\n    itemsMinWidth: PropTypes.number,\n    /**\n     * The color for the text and icon tint of the items\n     */\n    itemsTintColor: PropTypes.string,\n    /**\n     * The items' icon size\n     */\n    itemsIconSize: PropTypes.number,\n    /**\n     * The items' text style\n     */\n    itemsTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Perform the animation in natively\n     */\n    useNativeAnimations: PropTypes.bool\n  };\n\n  static defaultProps = {\n    itemsTintColor: Colors.white,\n    itemsIconSize: 24\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._swipeableRow = React.createRef();\n    this._oldDrawer = React.createRef();\n    this.animationOptions = {bounciness: props.bounciness || 5};\n\n    this.rightActionsContainerStyle = this.getRightActionsContainerStyle();\n    this.leftActionsContainerStyle = this.getLeftActionsContainerStyle();\n\n    this.leftRender = props.leftItem ? (Constants.isRTL ? this.renderRightActions : this.renderLeftActions) : undefined;\n    this.rightRender = props.rightItems\n      ? Constants.isRTL\n        ? this.renderLeftActions\n        : this.renderRightActions\n      : undefined;\n\n    // TODO: deprecate when removing old drawer version\n    // this.checkDeprecations(props);\n  }\n\n  /** Actions */\n\n  checkDeprecations(props) {\n    if (props.onPress !== undefined) {\n      console.warn('Drawer\\'s \\'onPress\\' prop is deprecated. ' +\n          'For items, send \\'onPress\\' handler in the item\\'s object and for content use your own.',);\n    }\n\n    deprecatedProps.forEach(prop => {\n      if (props[prop]) {\n        console.warn(`\"Drawer's ${prop}\" property is deprecated.`);\n      }\n    });\n  }\n\n  getLeftActionsContainerStyle() {\n    const {rightItems, leftItem} = this.getThemeProps();\n    return this.getActionsContainerStyle(Constants.isRTL ? rightItems : [leftItem]);\n  }\n\n  getRightActionsContainerStyle() {\n    const {rightItems, leftItem} = this.getThemeProps();\n    return this.getActionsContainerStyle(Constants.isRTL ? [leftItem] : rightItems);\n  }\n\n  getActionsContainerStyle(items) {\n    return {backgroundColor: _.get(_.first(items), 'background', DEFAULT_BG)};\n  }\n\n  closeDrawer = () => {\n    if (this.props.migrate) {\n      this._swipeableRow.current.close();\n    } else {\n      this._oldDrawer.current.closeDrawer();\n    }\n  };\n\n  /** Events */\n\n  onActionPress(item) {\n    if (!item.keepOpen) {\n      this.closeDrawer();\n    }\n    _.invoke(item, 'onPress');\n  }\n\n  onSwipeableWillOpen = () => {\n    _.invoke(this.props, 'onSwipeableWillOpen', this.props);\n  };\n\n  onSwipeableWillClose = () => {\n    _.invoke(this.props, 'onSwipeableWillClose', this.props);\n  };\n\n  /** Accessability */\n\n  getAccessibilityActions() {\n    const {rightItems, leftItem} = this.props;\n    const actions = {};\n    if (leftItem && leftItem.onPress && leftItem.text) {\n      actions[leftItem.text] = leftItem;\n    }\n    if (rightItems) {\n      rightItems.forEach(item => {\n        if (item.onPress && item.text) {\n          actions[item.text] = item;\n        }\n      });\n    }\n    return actions;\n  }\n\n  onAccessibilityAction = event => {\n    const actions = this.getAccessibilityActions();\n    const action = _.find(actions, (o) => {\n      return o.text === event.nativeEvent.action;\n    });\n    _.invoke(action, 'onPress');\n  };\n\n  /** Renders */\n\n  // TODO: enable support for rendering more than one left item\n  renderLeftActions = (progress, dragX) => {\n    const {leftItem} = this.getThemeProps();\n    const leftItems = leftItem ? [leftItem] : undefined;\n    return this.renderActions(leftItems, progress, dragX);\n  };\n\n  renderRightActions = (progress, dragX) => {\n    const {rightItems} = this.getThemeProps();\n    return this.renderActions(rightItems, progress, dragX);\n  };\n\n  renderActions(items, progress, dragX) {\n    if (items) {\n      return (\n        <View row>\n          {_.map(items, (item, index) => {\n            return this.renderAction({\n              item,\n              index: items.length - index - 1,\n              progress,\n              dragX,\n              itemsCount: items.length\n            });\n          })}\n        </View>\n      );\n    }\n  }\n\n  renderAction = ({item, index, progress, itemsCount}) => {\n    const {itemsTintColor, itemsIconSize, itemsTextStyle, itemsMinWidth} = this.getThemeProps();\n    const inputRange = [index / itemsCount, (index + 1) / itemsCount];\n    const outputRange = [0.2, 1];\n\n    const scale = progress.interpolate({\n      inputRange,\n      outputRange,\n      extrapolate: 'clamp'\n    });\n\n    const opacity = progress.interpolate({\n      inputRange,\n      outputRange,\n      extrapolate: 'clamp'\n    });\n\n    return (\n      <RectButton\n        key={index}\n        testID={item.testID}\n        style={[\n          styles.action,\n          item.style,\n          {backgroundColor: item.background || DEFAULT_BG},\n          {width: item.width},\n          {minWidth: itemsMinWidth}\n        ]}\n        onPress={() => this.onActionPress(item)}\n      >\n        {item.icon && (\n          <Animated.Image\n            source={item.icon}\n            style={[\n              styles.actionIcon,\n              {\n                width: itemsIconSize,\n                height: itemsIconSize,\n                tintColor: itemsTintColor,\n                opacity,\n                transform: [{scale}]\n              }\n            ]}\n          />\n        )}\n        {item.text && (\n          <Animated.Text\n            style={[\n              styles.actionText,\n              {\n                color: itemsTintColor,\n                opacity,\n                transform: [{scale}]\n              },\n              itemsTextStyle\n            ]}\n            accessibilityElementsHidden\n            importantForAccessibility=\"no-hide-descendants\"\n            accessible={false}\n          >\n            {item.text}\n          </Animated.Text>\n        )}\n      </RectButton>\n    );\n  };\n\n  render() {\n    const {migrate, children, style, ...others} = this.getThemeProps();\n\n    if (!migrate) {\n      return <OldDrawer {...this.getThemeProps()} ref={this._oldDrawer}/>;\n    }\n\n    return (\n      <Swipeable\n        {...others}\n        ref={this._swipeableRow}\n        friction={1}\n        containerStyle={style}\n        animationOptions={this.animationOptions}\n        renderLeftActions={this.leftRender}\n        renderRightActions={this.rightRender}\n        rightActionsContainerStyle={this.rightActionsContainerStyle}\n        leftActionsContainerStyle={this.leftActionsContainerStyle}\n        onSwipeableWillOpen={this.onSwipeableWillOpen}\n        onSwipeableWillClose={this.onSwipeableWillClose}\n      >\n        <View\n          flex\n          accessible\n          accessibilityActions={Object.keys(this.getAccessibilityActions())}\n          onAccessibilityAction={this.onAccessibilityAction}\n          {...this.extractAccessibilityProps()}\n        >\n          {children}\n        </View>\n      </Swipeable>\n    );\n  }\n}\n\nexport default NewDrawer;\n\nconst styles = StyleSheet.create({\n  leftAction: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: /* Constants.isRTL ? 'flex-end' :  */ 'flex-start',\n    backgroundColor: '#388e3c'\n  },\n  actionIcon: {\n    width: 30,\n    marginHorizontal: 10\n  },\n  actionText: {\n    color: '#ffffff'\n  },\n  action: {\n    paddingHorizontal: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#dd2c00'\n  }\n});\n"]},"metadata":{},"sourceType":"script"}