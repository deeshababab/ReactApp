{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeAnimatable = require(\"react-native-animatable\");\n\nvar _style = require(\"../../style\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _commons = require(\"../../commons\");\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _text = _interopRequireDefault(require(\"../text\"));\n\nvar _image = _interopRequireDefault(require(\"../image\"));\n\nvar _modal = _interopRequireDefault(require(\"../../screensComponents/modal\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\hint\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar sideTip = require('./assets/hintTipSide.png');\n\nvar middleTip = require('./assets/hintTipMiddle.png');\n\nvar DEFAULT_COLOR = _style.Colors.blue30;\nvar DEFAULT_HINT_OFFSET = _style.Spacings.s4;\nvar DEFAULT_EDGE_MARGINS = _style.Spacings.s5;\nvar HINT_POSITIONS = {\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\nvar TARGET_POSITIONS = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center'\n};\n\n_style.AnimatableManager.loadAnimationDefinitions({\n  hintAppearDown: {\n    from: {\n      opacity: 0,\n      translateY: 20\n    },\n    to: {\n      opacity: 1,\n      translateY: 0\n    }\n  },\n  hintAppearUp: {\n    from: {\n      opacity: 0,\n      translateY: -20\n    },\n    to: {\n      opacity: 1,\n      translateY: 0\n    }\n  }\n});\n\nvar Hint = function (_BaseComponent) {\n  (0, _inherits2.default)(Hint, _BaseComponent);\n\n  var _super = _createSuper(Hint);\n\n  function Hint() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Hint);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      targetLayout: _this.props.targetFrame\n    };\n\n    _this.focusAccessibilityOnHint = function () {\n      var message = _this.props.message;\n      var targetRefTag = (0, _reactNative.findNodeHandle)(_this.targetRef);\n      var hintRefTag = (0, _reactNative.findNodeHandle)(_this.hintRef);\n\n      if (targetRefTag && _lodash.default.isString(message)) {\n        _reactNative.AccessibilityInfo.setAccessibilityFocus(targetRefTag);\n      } else if (hintRefTag) {\n        _reactNative.AccessibilityInfo.setAccessibilityFocus(hintRefTag);\n      }\n    };\n\n    _this.setTargetRef = function (ref) {\n      _this.targetRef = ref;\n\n      _this.focusAccessibilityOnHint();\n    };\n\n    _this.setHintRef = function (ref) {\n      _this.hintRef = ref;\n\n      _this.focusAccessibilityOnHint();\n    };\n\n    _this.onTargetLayout = function (_ref) {\n      var layout = _ref.nativeEvent.layout;\n\n      if (!_lodash.default.isEqual(_this.state.targetLayout, layout)) {\n        _this.setState({\n          targetLayout: layout\n        });\n      }\n\n      if (!_this.state.targetLayoutInWindow) {\n        setTimeout(function () {\n          _this.targetRef.measureInWindow(function (x, y, width, height) {\n            var targetLayoutInWindow = {\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            };\n\n            _this.setState({\n              targetLayoutInWindow: targetLayoutInWindow\n            });\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Hint, [{\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          message = _this$props.message;\n\n      if (visible && _lodash.default.isString(message)) {\n        return {\n          accessible: true,\n          accessibilityLabel: \"hint: \" + message\n        };\n      }\n    }\n  }, {\n    key: \"getTargetPositionOnScreen\",\n    value: function getTargetPositionOnScreen() {\n      var targetMidPosition = this.targetLayout.x + this.targetLayout.width / 2;\n\n      if (targetMidPosition > this.containerWidth * (2 / 3)) {\n        return TARGET_POSITIONS.RIGHT;\n      } else if (targetMidPosition < this.containerWidth * (1 / 3)) {\n        return TARGET_POSITIONS.LEFT;\n      }\n\n      return TARGET_POSITIONS.CENTER;\n    }\n  }, {\n    key: \"getContainerPosition\",\n    value: function getContainerPosition() {\n      if (this.targetLayout) {\n        return {\n          top: this.targetLayout.y,\n          left: this.targetLayout.x\n        };\n      }\n    }\n  }, {\n    key: \"getHintPosition\",\n    value: function getHintPosition() {\n      var position = this.props.position;\n      var hintPositionStyle = {\n        left: -this.targetLayout.x,\n        alignItems: 'center'\n      };\n\n      if (position === HINT_POSITIONS.TOP) {\n        hintPositionStyle.bottom = 0;\n      } else {\n        hintPositionStyle.top = this.targetLayout.height;\n      }\n\n      var targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n      if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n        hintPositionStyle.alignItems = _helpers.Constants.isRTL ? 'flex-start' : 'flex-end';\n      } else if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n        hintPositionStyle.alignItems = _helpers.Constants.isRTL ? 'flex-end' : 'flex-start';\n      }\n\n      return hintPositionStyle;\n    }\n  }, {\n    key: \"getHintPadding\",\n    value: function getHintPadding() {\n      var paddings = {\n        paddingVertical: this.hintOffset,\n        paddingHorizontal: this.edgeMargins\n      };\n\n      if (this.useSideTip) {\n        var targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n        if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n          paddings.paddingLeft = this.targetLayout.x;\n        } else if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n          paddings.paddingRight = this.containerWidth - this.targetLayout.x - this.targetLayout.width;\n        }\n      }\n\n      return paddings;\n    }\n  }, {\n    key: \"getTipPosition\",\n    value: function getTipPosition() {\n      var _this$getThemeProps = this.getThemeProps(),\n          position = _this$getThemeProps.position;\n\n      var tipPositionStyle = {};\n\n      if (position === HINT_POSITIONS.TOP) {\n        tipPositionStyle.bottom = this.hintOffset - this.tipSize.height;\n      } else {\n        tipPositionStyle.top = this.hintOffset - this.tipSize.height;\n      }\n\n      var targetMidWidth = this.targetLayout.width / 2;\n      var tipMidWidth = this.tipSize.width / 2;\n      var leftPosition = this.useSideTip ? this.targetLayout.x : this.targetLayout.x + targetMidWidth - tipMidWidth;\n      var rightPosition = this.useSideTip ? this.containerWidth - this.targetLayout.x - this.targetLayout.width : this.containerWidth - this.targetLayout.x - targetMidWidth - tipMidWidth;\n      var targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n      switch (targetPositionOnScreen) {\n        case TARGET_POSITIONS.LEFT:\n          tipPositionStyle.left = _helpers.Constants.isRTL ? rightPosition : leftPosition;\n          break;\n\n        case TARGET_POSITIONS.RIGHT:\n          tipPositionStyle.right = _helpers.Constants.isRTL ? leftPosition : rightPosition;\n          break;\n\n        case TARGET_POSITIONS.CENTER:\n        default:\n          tipPositionStyle.left = this.targetLayout.x + targetMidWidth - tipMidWidth;\n          break;\n      }\n\n      return tipPositionStyle;\n    }\n  }, {\n    key: \"renderHintTip\",\n    value: function renderHintTip() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          position = _this$getThemeProps2.position,\n          color = _this$getThemeProps2.color;\n\n      var source = this.useSideTip ? sideTip : middleTip;\n      var flipVertically = position === HINT_POSITIONS.TOP;\n      var flipHorizontally = this.getTargetPositionOnScreen() === TARGET_POSITIONS.RIGHT;\n      var flipStyle = {\n        transform: [{\n          scaleY: flipVertically ? -1 : 1\n        }, {\n          scaleX: flipHorizontally ? -1 : 1\n        }]\n      };\n      return _react.default.createElement(_image.default, {\n        tintColor: color || DEFAULT_COLOR,\n        source: source,\n        style: [styles.hintTip, this.getTipPosition(), flipStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderHint\",\n    value: function renderHint() {\n      var _this$getThemeProps3 = this.getThemeProps(),\n          position = _this$getThemeProps3.position,\n          message = _this$getThemeProps3.message,\n          messageStyle = _this$getThemeProps3.messageStyle,\n          icon = _this$getThemeProps3.icon,\n          iconStyle = _this$getThemeProps3.iconStyle,\n          borderRadius = _this$getThemeProps3.borderRadius,\n          color = _this$getThemeProps3.color,\n          testID = _this$getThemeProps3.testID;\n\n      var shownUp = position === HINT_POSITIONS.TOP;\n\n      if (this.showHint) {\n        return _react.default.createElement(_reactNativeAnimatable.View, {\n          animation: shownUp ? _style.AnimatableManager.animations.hintAppearUp : _style.AnimatableManager.animations.hintAppearDown,\n          duration: 200,\n          style: [{\n            width: this.containerWidth\n          }, styles.animatedContainer, this.getHintPosition(), this.getHintPadding()],\n          pointerEvents: \"box-none\",\n          testID: testID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 9\n          }\n        }, this.renderHintTip(), _react.default.createElement(_view.default, {\n          row: true,\n          centerV: true,\n          style: [styles.hint, color && {\n            backgroundColor: color\n          }, !_lodash.default.isUndefined(borderRadius) && {\n            borderRadius: borderRadius\n          }],\n          ref: this.setHintRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 11\n          }\n        }, icon && _react.default.createElement(_image.default, {\n          source: icon,\n          style: [styles.icon, iconStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 22\n          }\n        }), _react.default.createElement(_text.default, {\n          style: [styles.hintMessage, messageStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }\n        }, message)));\n      }\n    }\n  }, {\n    key: \"renderHintContainer\",\n    value: function renderHintContainer() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          others = (0, _objectWithoutProperties2.default)(_this$props2, [\"style\"]);\n      return _react.default.createElement(_view.default, (0, _extends2.default)({}, others, {\n        style: [styles.container, style, this.getContainerPosition()],\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 7\n        }\n      }), this.renderHint());\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var targetFrame = this.props.targetFrame;\n\n      if (!targetFrame) {\n        return _react.default.cloneElement(this.props.children, _objectSpread({\n          collapsable: false,\n          onLayout: this.onTargetLayout,\n          ref: this.setTargetRef\n        }, this.getAccessibilityInfo()));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          visible = _this$props3.visible,\n          onBackgroundPress = _this$props3.onBackgroundPress;\n\n      if (!visible) {\n        return this.props.children;\n      }\n\n      return _react.default.createElement(_react.default.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 7\n        }\n      }, onBackgroundPress ? _react.default.createElement(_modal.default, {\n        pointerEvents: \"box-none\",\n        visible: this.showHint,\n        animationType: \"none\",\n        transparent: true,\n        onBackgroundPress: onBackgroundPress,\n        onRequestClose: onBackgroundPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }\n      }, this.renderHintContainer()) : this.renderHintContainer(), this.renderChildren());\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          containerWidth = _this$getThemeProps4.containerWidth;\n\n      return containerWidth || _helpers.Constants.screenWidth;\n    }\n  }, {\n    key: \"targetLayout\",\n    get: function get() {\n      var _this$props4 = this.props,\n          onBackgroundPress = _this$props4.onBackgroundPress,\n          targetFrame = _this$props4.targetFrame;\n      var _this$state = this.state,\n          targetLayout = _this$state.targetLayout,\n          targetLayoutInWindow = _this$state.targetLayoutInWindow;\n\n      if (targetFrame) {\n        return targetFrame;\n      }\n\n      return onBackgroundPress ? targetLayoutInWindow : targetLayout;\n    }\n  }, {\n    key: \"showHint\",\n    get: function get() {\n      return !!this.targetLayout;\n    }\n  }, {\n    key: \"tipSize\",\n    get: function get() {\n      return this.useSideTip ? {\n        width: 14,\n        height: 7\n      } : {\n        width: 20,\n        height: 7\n      };\n    }\n  }, {\n    key: \"hintOffset\",\n    get: function get() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          offset = _this$getThemeProps5.offset;\n\n      return offset || DEFAULT_HINT_OFFSET;\n    }\n  }, {\n    key: \"edgeMargins\",\n    get: function get() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n          edgeMargins = _this$getThemeProps6.edgeMargins;\n\n      return edgeMargins || DEFAULT_EDGE_MARGINS;\n    }\n  }, {\n    key: \"useSideTip\",\n    get: function get() {\n      var useSideTip = this.props.useSideTip;\n\n      if (!_lodash.default.isUndefined(useSideTip)) {\n        return useSideTip;\n      }\n\n      return this.getTargetPositionOnScreen() !== TARGET_POSITIONS.CENTER;\n    }\n  }]);\n  return Hint;\n}(_commons.BaseComponent);\n\nHint.displayName = 'Hint';\nHint.propTypes = {\n  visible: _propTypes.default.bool,\n  color: _propTypes.default.string,\n  message: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  messageStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  icon: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),\n  iconStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  position: _propTypes.default.oneOf(_lodash.default.values(HINT_POSITIONS)),\n  targetFrame: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number,\n    width: _propTypes.default.number,\n    height: _propTypes.default.number\n  }),\n  useSideTip: _propTypes.default.bool,\n  borderRadius: _propTypes.default.number,\n  edgeMargins: _propTypes.default.number,\n  offset: _propTypes.default.number,\n  onBackgroundPress: _propTypes.default.func,\n  containerWidth: _propTypes.default.number,\n  testID: _propTypes.default.string\n};\nHint.defaultProps = {\n  position: HINT_POSITIONS.BOTTOM\n};\nHint.positions = HINT_POSITIONS;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    position: 'absolute',\n    zIndex: 100,\n    borderWidth: 1,\n    borderColor: 'transparent'\n  },\n  animatedContainer: {\n    position: 'absolute'\n  },\n  hintTip: {\n    position: 'absolute'\n  },\n  hint: {\n    maxWidth: 400,\n    backgroundColor: DEFAULT_COLOR,\n    paddingHorizontal: _style.Spacings.s5,\n    paddingTop: _style.Spacings.s3,\n    paddingBottom: _style.Spacings.s4,\n    borderRadius: _style.BorderRadiuses.br60\n  },\n  hintMessage: _objectSpread(_objectSpread({}, _style.Typography.text70), {}, {\n    color: _style.Colors.white,\n    flexShrink: 1\n  }),\n  icon: {\n    marginRight: _style.Spacings.s4,\n    tintColor: _style.Colors.white\n  }\n});\n\nvar _default = Hint;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/hint/index.js"],"names":["sideTip","require","middleTip","DEFAULT_COLOR","Colors","blue30","DEFAULT_HINT_OFFSET","Spacings","s4","DEFAULT_EDGE_MARGINS","s5","HINT_POSITIONS","TOP","BOTTOM","TARGET_POSITIONS","LEFT","RIGHT","CENTER","AnimatableManager","loadAnimationDefinitions","hintAppearDown","from","opacity","translateY","to","hintAppearUp","Hint","state","targetLayout","props","targetFrame","focusAccessibilityOnHint","message","targetRefTag","targetRef","hintRefTag","hintRef","_","isString","AccessibilityInfo","setAccessibilityFocus","setTargetRef","ref","setHintRef","onTargetLayout","layout","nativeEvent","isEqual","setState","targetLayoutInWindow","setTimeout","measureInWindow","x","y","width","height","visible","accessible","accessibilityLabel","targetMidPosition","containerWidth","top","left","position","hintPositionStyle","alignItems","bottom","targetPositionOnScreen","getTargetPositionOnScreen","Constants","isRTL","paddings","paddingVertical","hintOffset","paddingHorizontal","edgeMargins","useSideTip","paddingLeft","paddingRight","getThemeProps","tipPositionStyle","tipSize","targetMidWidth","tipMidWidth","leftPosition","rightPosition","right","color","source","flipVertically","flipHorizontally","flipStyle","transform","scaleY","scaleX","styles","hintTip","getTipPosition","messageStyle","icon","iconStyle","borderRadius","testID","shownUp","showHint","animations","animatedContainer","getHintPosition","getHintPadding","renderHintTip","hint","backgroundColor","isUndefined","hintMessage","style","others","container","getContainerPosition","renderHint","React","cloneElement","children","collapsable","onLayout","getAccessibilityInfo","onBackgroundPress","renderHintContainer","renderChildren","screenWidth","offset","BaseComponent","displayName","propTypes","PropTypes","bool","string","oneOfType","element","object","number","array","oneOf","values","shape","func","defaultProps","positions","StyleSheet","create","zIndex","borderWidth","borderColor","maxWidth","paddingTop","s3","paddingBottom","BorderRadiuses","br60","Typography","text70","white","flexShrink","marginRight","tintColor"],"mappings":"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","sourcesContent":["// TODO: Add support to custom hint rendering\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, AccessibilityInfo, findNodeHandle} from 'react-native';\nimport {View as AnimatableView} from 'react-native-animatable';\nimport {Typography, Spacings, Colors, BorderRadiuses, AnimatableManager} from '../../style';\nimport {Constants} from '../../helpers';\nimport {BaseComponent} from '../../commons';\nimport View from '../view';\nimport Text from '../text';\nimport Image from '../image';\nimport Modal from '../../screensComponents/modal';\n\nconst sideTip = require('./assets/hintTipSide.png');\nconst middleTip = require('./assets/hintTipMiddle.png');\n\nconst DEFAULT_COLOR = Colors.blue30;\nconst DEFAULT_HINT_OFFSET = Spacings.s4;\nconst DEFAULT_EDGE_MARGINS = Spacings.s5;\nconst HINT_POSITIONS = {\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\nconst TARGET_POSITIONS = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center'\n};\n\nAnimatableManager.loadAnimationDefinitions({\n  hintAppearDown: {\n    from: {opacity: 0, translateY: 20},\n    to: {opacity: 1, translateY: 0}\n  },\n  hintAppearUp: {\n    from: {opacity: 0, translateY: -20},\n    to: {opacity: 1, translateY: 0}\n  }\n});\n\n/**\n * @description: Hint component for displaying a tooltip over wrapped component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/HintsScreen.js\n * @notes: You can either wrap a component or pass a specific targetFrame\n */\nclass Hint extends BaseComponent {\n  static displayName = 'Hint';\n\n  static propTypes = {\n    /**\n     * Control the visibility of the hint\n     */\n    visible: PropTypes.bool,\n    /**\n     * The hint background color\n     */\n    color: PropTypes.string,\n    /**\n     * The hint message\n     */\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * The hint message custom style\n     */\n    messageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Icon to show next to the hint's message\n     */\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * The icon's style\n     */\n    iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * The hint's position\n     */\n    position: PropTypes.oneOf(_.values(HINT_POSITIONS)),\n    /**\n     * Provide custom target position instead of wrapping a child\n     */\n    targetFrame: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    /**\n     * Show side tips instead of the middle tip\n     */\n    useSideTip: PropTypes.bool,\n    /**\n     * The hint's border radius\n     */\n    borderRadius: PropTypes.number,\n    /**\n     * Hint margins from screen edges\n     */\n    edgeMargins: PropTypes.number,\n    /**\n     * Hint offset from target\n     */\n    offset: PropTypes.number,\n    /**\n     * Callback for the background press\n     */\n    onBackgroundPress: PropTypes.func,\n    /**\n     * The hint container width\n     */\n    containerWidth: PropTypes.number,\n    /**\n     * The hint's test identifier\n     */\n    testID: PropTypes.string\n  };\n\n  static defaultProps = {\n    position: HINT_POSITIONS.BOTTOM\n  };\n\n  static positions = HINT_POSITIONS;\n\n  state = {\n    targetLayout: this.props.targetFrame\n  };\n\n  focusAccessibilityOnHint = () => {\n    const {message} = this.props;\n    const targetRefTag = findNodeHandle(this.targetRef);\n    const hintRefTag = findNodeHandle(this.hintRef);\n    if (targetRefTag && _.isString(message)) {\n      AccessibilityInfo.setAccessibilityFocus(targetRefTag);\n    } else if (hintRefTag) {\n      AccessibilityInfo.setAccessibilityFocus(hintRefTag);\n    }\n  };\n\n  setTargetRef = ref => {\n    this.targetRef = ref;\n    this.focusAccessibilityOnHint();\n  };\n\n  setHintRef = ref => {\n    this.hintRef = ref;\n    this.focusAccessibilityOnHint();\n  };\n\n  onTargetLayout = ({nativeEvent: {layout}}) => {\n    if (!_.isEqual(this.state.targetLayout, layout)) {\n      this.setState({targetLayout: layout});\n    }\n\n    if (!this.state.targetLayoutInWindow) {\n      setTimeout(() => {\n        this.targetRef.measureInWindow((x, y, width, height) => {\n          const targetLayoutInWindow = {x, y, width, height};\n          this.setState({targetLayoutInWindow});\n        });\n      });\n    }\n  };\n\n  getAccessibilityInfo() {\n    const {visible, message} = this.props;\n\n    if (visible && _.isString(message)) {\n      return {\n        accessible: true,\n        accessibilityLabel: `hint: ${message}`\n      };\n    }\n  }\n\n  get containerWidth() {\n    const {containerWidth} = this.getThemeProps();\n    return containerWidth || Constants.screenWidth;\n  }\n\n  get targetLayout() {\n    const {onBackgroundPress, targetFrame} = this.props;\n    const {targetLayout, targetLayoutInWindow} = this.state;\n\n    if (targetFrame) {\n      return targetFrame;\n    }\n    return onBackgroundPress ? targetLayoutInWindow : targetLayout;\n  }\n\n  get showHint() {\n    return !!this.targetLayout;\n  }\n\n  get tipSize() {\n    return this.useSideTip ? {width: 14, height: 7} : {width: 20, height: 7};\n  }\n\n  get hintOffset() {\n    const {offset} = this.getThemeProps();\n    return offset || DEFAULT_HINT_OFFSET;\n  }\n\n  get edgeMargins() {\n    const {edgeMargins} = this.getThemeProps();\n    return edgeMargins || DEFAULT_EDGE_MARGINS;\n  }\n\n  get useSideTip() {\n    const {useSideTip} = this.props;\n\n    if (!_.isUndefined(useSideTip)) {\n      return useSideTip;\n    }\n    return this.getTargetPositionOnScreen() !== TARGET_POSITIONS.CENTER;\n  }\n\n  getTargetPositionOnScreen() {\n    const targetMidPosition = this.targetLayout.x + this.targetLayout.width / 2;\n\n    if (targetMidPosition > this.containerWidth * (2 / 3)) {\n      return TARGET_POSITIONS.RIGHT;\n    } else if (targetMidPosition < this.containerWidth * (1 / 3)) {\n      return TARGET_POSITIONS.LEFT;\n    }\n    return TARGET_POSITIONS.CENTER;\n  }\n\n  getContainerPosition() {\n    if (this.targetLayout) {\n      return {top: this.targetLayout.y, left: this.targetLayout.x};\n    }\n  }\n\n  getHintPosition() {\n    const {position} = this.props;\n    const hintPositionStyle = {left: -this.targetLayout.x, alignItems: 'center'};\n\n    if (position === HINT_POSITIONS.TOP) {\n      hintPositionStyle.bottom = 0;\n    } else {\n      hintPositionStyle.top = this.targetLayout.height;\n    }\n\n    const targetPositionOnScreen = this.getTargetPositionOnScreen();\n    if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n      hintPositionStyle.alignItems = Constants.isRTL ? 'flex-start' : 'flex-end';\n    } else if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n      hintPositionStyle.alignItems = Constants.isRTL ? 'flex-end' : 'flex-start';\n    }\n\n    return hintPositionStyle;\n  }\n\n  getHintPadding() {\n    const paddings = {paddingVertical: this.hintOffset, paddingHorizontal: this.edgeMargins};\n    if (this.useSideTip) {\n      const targetPositionOnScreen = this.getTargetPositionOnScreen();\n      if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n        paddings.paddingLeft = this.targetLayout.x;\n      } else if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n        paddings.paddingRight = this.containerWidth - this.targetLayout.x - this.targetLayout.width;\n      }\n    }\n    return paddings;\n  }\n\n  getTipPosition() {\n    const {position} = this.getThemeProps();\n    const tipPositionStyle = {};\n\n    if (position === HINT_POSITIONS.TOP) {\n      tipPositionStyle.bottom = this.hintOffset - this.tipSize.height;\n    } else {\n      tipPositionStyle.top = this.hintOffset - this.tipSize.height;\n    }\n\n    const targetMidWidth = this.targetLayout.width / 2;\n    const tipMidWidth = this.tipSize.width / 2;\n\n    const leftPosition = this.useSideTip ? this.targetLayout.x : this.targetLayout.x + targetMidWidth - tipMidWidth;\n    const rightPosition = this.useSideTip\n      ? this.containerWidth - this.targetLayout.x - this.targetLayout.width\n      : this.containerWidth - this.targetLayout.x - targetMidWidth - tipMidWidth;\n    const targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n    switch (targetPositionOnScreen) {\n      case TARGET_POSITIONS.LEFT:\n        tipPositionStyle.left = Constants.isRTL ? rightPosition : leftPosition;\n        break;\n      case TARGET_POSITIONS.RIGHT:\n        tipPositionStyle.right = Constants.isRTL ? leftPosition : rightPosition;\n        break;\n      case TARGET_POSITIONS.CENTER:\n      default:\n        tipPositionStyle.left = this.targetLayout.x + targetMidWidth - tipMidWidth;\n        break;\n    }\n    return tipPositionStyle;\n  }\n\n  // renderOverlay() {\n  //   const {targetLayoutInWindow} = this.state;\n  //   const {onBackgroundPress} = this.props;\n  //   if (targetLayoutInWindow) {\n  //     const containerPosition = this.getContainerPosition();\n  //     return (\n  //       <View\n  //         style={[\n  //           styles.overlay,\n  //           {\n  //             top: containerPosition.top - targetLayoutInWindow.y,\n  //             left: containerPosition.left - targetLayoutInWindow.x,\n  //           },\n  //         ]}\n  //         pointerEvents=\"box-none\"\n  //       >\n  //         {onBackgroundPress && (\n  //           <TouchableWithoutFeedback style={[StyleSheet.absoluteFillObject]} onPress={onBackgroundPress}>\n  //             <View flex />\n  //           </TouchableWithoutFeedback>\n  //         )}\n  //       </View>\n  //     );\n  //   }\n  // }\n\n  renderHintTip() {\n    const {position, color} = this.getThemeProps();\n    const source = this.useSideTip ? sideTip : middleTip;\n    const flipVertically = position === HINT_POSITIONS.TOP;\n    const flipHorizontally = this.getTargetPositionOnScreen() === TARGET_POSITIONS.RIGHT;\n    const flipStyle = {\n      transform: [{scaleY: flipVertically ? -1 : 1}, {scaleX: flipHorizontally ? -1 : 1}]\n    };\n\n    return (\n      <Image\n        tintColor={color || DEFAULT_COLOR}\n        source={source}\n        style={[styles.hintTip, this.getTipPosition(), flipStyle]}\n      />\n    );\n  }\n\n  renderHint() {\n    const {position, message, messageStyle, icon, iconStyle, borderRadius, color, testID} = this.getThemeProps();\n    const shownUp = position === HINT_POSITIONS.TOP;\n\n    if (this.showHint) {\n      return (\n        <AnimatableView\n          animation={shownUp ? AnimatableManager.animations.hintAppearUp : AnimatableManager.animations.hintAppearDown}\n          duration={200}\n          style={[\n            {width: this.containerWidth},\n            styles.animatedContainer,\n            this.getHintPosition(),\n            this.getHintPadding()\n          ]}\n          pointerEvents=\"box-none\"\n          testID={testID}\n        >\n          {this.renderHintTip()}\n          <View\n            row\n            centerV\n            style={[styles.hint, color && {backgroundColor: color}, !_.isUndefined(borderRadius) && {borderRadius}]}\n            ref={this.setHintRef}\n          >\n            {icon && <Image source={icon} style={[styles.icon, iconStyle]}/>}\n            <Text style={[styles.hintMessage, messageStyle]}>{message}</Text>\n          </View>\n        </AnimatableView>\n      );\n    }\n  }\n\n  renderHintContainer() {\n    const {style, ...others} = this.props;\n    return (\n      <View {...others} style={[styles.container, style, this.getContainerPosition()]} collapsable={false}>\n        {this.renderHint()}\n      </View>\n    );\n  }\n\n  renderChildren() {\n    const {targetFrame} = this.props;\n\n    if (!targetFrame) {\n      return React.cloneElement(this.props.children, {\n        collapsable: false,\n        onLayout: this.onTargetLayout,\n        ref: this.setTargetRef,\n        ...this.getAccessibilityInfo()\n      });\n    }\n  }\n\n  render() {\n    const {visible, onBackgroundPress} = this.props;\n\n    if (!visible) {\n      return this.props.children;\n    }\n\n    return (\n      <React.Fragment>\n        {onBackgroundPress ? (\n          <Modal\n            pointerEvents=\"box-none\"\n            visible={this.showHint}\n            animationType=\"none\"\n            transparent\n            onBackgroundPress={onBackgroundPress}\n            onRequestClose={onBackgroundPress}\n          >\n            {this.renderHintContainer()}\n          </Modal>\n        ) : (\n          // this.renderOverlay(),\n          this.renderHintContainer()\n        )}\n        {this.renderChildren()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    zIndex: 100,\n    // This is a hack to make hint render correctly on Android\n    borderWidth: 1,\n    borderColor: 'transparent'\n  },\n  // overlay: {\n  //   position: 'absolute',\n  //   width: Constants.screenWidth,\n  //   height: Constants.screenHeight\n  // },\n  animatedContainer: {\n    position: 'absolute'\n  },\n  hintTip: {\n    position: 'absolute'\n  },\n  hint: {\n    maxWidth: 400,\n    backgroundColor: DEFAULT_COLOR,\n    paddingHorizontal: Spacings.s5,\n    paddingTop: Spacings.s3,\n    paddingBottom: Spacings.s4,\n    borderRadius: BorderRadiuses.br60\n  },\n  hintMessage: {\n    ...Typography.text70,\n    color: Colors.white,\n    flexShrink: 1\n  },\n  icon: {\n    marginRight: Spacings.s4,\n    tintColor: Colors.white\n  }\n});\n\nexport default Hint;\n"]},"metadata":{},"sourceType":"script"}