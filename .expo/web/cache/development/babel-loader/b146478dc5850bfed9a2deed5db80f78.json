{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _blur = require(\"@react-native-community/blur\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _touchableOpacity = _interopRequireDefault(require(\"../touchableOpacity\"));\n\nvar _image = _interopRequireDefault(require(\"../image\"));\n\nvar _CardSection = _interopRequireDefault(require(\"./CardSection\"));\n\nvar _CardItem = _interopRequireDefault(require(\"./CardItem\"));\n\nvar _CardImage = _interopRequireDefault(require(\"./CardImage\"));\n\nvar _assets = _interopRequireDefault(require(\"../../assets\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\card\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DEFAULT_BORDER_RADIUS = _style.BorderRadiuses.br40;\nvar DEFAULT_SELECTION_PROPS = {\n  borderWidth: 2,\n  color: _style.Colors.blue30,\n  indicatorSize: 20,\n  icon: _assets.default.icons.checkSmall\n};\n\nvar Card = function (_PureBaseComponent) {\n  (0, _inherits2.default)(Card, _PureBaseComponent);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      animatedSelected: new _reactNative.Animated.Value(Number(_this.props.selected))\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Card, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.selected !== this.props.selected) {\n        this.animateSelection();\n      }\n    }\n  }, {\n    key: \"animateSelection\",\n    value: function animateSelection() {\n      var animatedSelected = this.state.animatedSelected;\n      var selected = this.props.selected;\n\n      _reactNative.Animated.timing(animatedSelected, {\n        toValue: Number(selected),\n        duration: 120,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps());\n    }\n  }, {\n    key: \"getBlurOptions\",\n    value: function getBlurOptions() {\n      var _this$getThemeProps = this.getThemeProps(),\n          blurOptions = _this$getThemeProps.blurOptions;\n\n      return _objectSpread({\n        blurType: 'light',\n        blurAmount: 5\n      }, blurOptions);\n    }\n  }, {\n    key: \"calcImagePosition\",\n    value: function calcImagePosition(childIndex) {\n      var _this$props = this.props,\n          row = _this$props.row,\n          children = _this$props.children;\n\n      var childrenCount = _react.default.Children.count(children);\n\n      var position = [];\n\n      if (childIndex === 0) {\n        position.push(row ? 'left' : 'top');\n      }\n\n      if (childIndex === childrenCount - 1) {\n        position.push(row ? 'right' : 'bottom');\n      }\n\n      return position;\n    }\n  }, {\n    key: \"renderSelection\",\n    value: function renderSelection() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          selectionOptions = _this$getThemeProps2.selectionOptions,\n          selected = _this$getThemeProps2.selected;\n\n      var animatedSelected = this.state.animatedSelected;\n\n      var selectionColor = _lodash.default.get(selectionOptions, 'color', DEFAULT_SELECTION_PROPS.color);\n\n      if (_lodash.default.isUndefined(selected)) {\n        return null;\n      }\n\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [this.styles.selectedBorder, {\n          borderColor: selectionColor\n        }, {\n          borderRadius: this.borderRadius\n        }, {\n          opacity: animatedSelected\n        }],\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_view.default, {\n        style: [this.styles.selectedIndicator, {\n          backgroundColor: selectionColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_image.default, {\n        source: _lodash.default.get(selectionOptions, 'icon', DEFAULT_SELECTION_PROPS.icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this2 = this;\n\n      var children = _react.default.Children.map(this.props.children, function (child, index) {\n        if (_lodash.default.get(child, 'type.displayName') === _CardImage.default.displayName) {\n          var position = _this2.calcImagePosition(index);\n\n          return _react.default.cloneElement(child, {\n            position: position,\n            borderRadius: _this2.borderRadius\n          });\n        }\n\n        return child;\n      });\n\n      return children;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps3 = this.getThemeProps(),\n          onPress = _this$getThemeProps3.onPress,\n          style = _this$getThemeProps3.style,\n          containerStyle = _this$getThemeProps3.containerStyle,\n          enableBlur = _this$getThemeProps3.enableBlur,\n          others = (0, _objectWithoutProperties2.default)(_this$getThemeProps3, [\"onPress\", \"style\", \"containerStyle\", \"enableBlur\"]);\n\n      var blurOptions = this.getBlurOptions();\n      var Container = onPress ? _touchableOpacity.default : _view.default;\n      var brRadius = this.borderRadius;\n      return _react.default.createElement(Container, (0, _extends2.default)({\n        style: [this.styles.container, {\n          borderRadius: brRadius\n        }, this.elevationStyle, this.shadowStyle, this.blurBgStyle, containerStyle, style],\n        onPress: onPress,\n        delayPressIn: 10,\n        activeOpacity: 0.6\n      }, others, {\n        ref: this.setRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }\n      }), _helpers.Constants.isIOS && enableBlur && _react.default.createElement(_blur.BlurView, (0, _extends2.default)({\n        style: [this.styles.blurView, {\n          borderRadius: brRadius\n        }]\n      }, blurOptions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      })), this.renderChildren(), this.renderSelection());\n    }\n  }, {\n    key: \"elevationStyle\",\n    get: function get() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          elevation = _this$getThemeProps4.elevation,\n          enableShadow = _this$getThemeProps4.enableShadow;\n\n      if (enableShadow) {\n        return {\n          elevation: elevation || 2\n        };\n      }\n    }\n  }, {\n    key: \"shadowStyle\",\n    get: function get() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          enableShadow = _this$getThemeProps5.enableShadow;\n\n      if (enableShadow) {\n        return this.styles.containerShadow;\n      }\n    }\n  }, {\n    key: \"blurBgStyle\",\n    get: function get() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n          enableBlur = _this$getThemeProps6.enableBlur;\n\n      if (_helpers.Constants.isIOS && enableBlur) {\n        return {\n          backgroundColor: _style.Colors.rgba(_style.Colors.white, 0.85)\n        };\n      } else {\n        return {\n          backgroundColor: _style.Colors.white\n        };\n      }\n    }\n  }, {\n    key: \"borderRadius\",\n    get: function get() {\n      var _this$getThemeProps7 = this.getThemeProps(),\n          borderRadius = _this$getThemeProps7.borderRadius;\n\n      return borderRadius === undefined ? DEFAULT_BORDER_RADIUS : borderRadius;\n    }\n  }]);\n  return Card;\n}(_commons.PureBaseComponent);\n\nCard.displayName = 'Card';\nCard.propTypes = {\n  width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n  height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n  row: _propTypes.default.bool,\n  borderRadius: _propTypes.default.number,\n  onPress: _propTypes.default.func,\n  enableShadow: _propTypes.default.bool,\n  elevation: _propTypes.default.number,\n  enableBlur: _propTypes.default.bool,\n  blurOptions: _propTypes.default.object,\n  containerStyle: _reactNative.ViewPropTypes.style,\n  selected: _propTypes.default.bool,\n  selectionOptions: _propTypes.default.shape({\n    icon: _propTypes.default.number,\n    color: _propTypes.default.string,\n    borderWidth: _propTypes.default.number,\n    indicatorSize: _propTypes.default.number\n  })\n};\nCard.defaultProps = {\n  enableShadow: true\n};\n\nfunction createStyles(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      borderRadius = _ref.borderRadius,\n      selectionOptions = _ref.selectionOptions;\n\n  var selectionOptionsWithDefaults = _lodash.default.merge(DEFAULT_SELECTION_PROPS, selectionOptions);\n\n  var brRadius = borderRadius === undefined ? DEFAULT_BORDER_RADIUS : borderRadius;\n  return _reactNative.StyleSheet.create({\n    container: {\n      width: width,\n      height: height,\n      overflow: 'visible',\n      borderRadius: brRadius\n    },\n    containerShadow: {\n      shadowColor: _style.Colors.dark40,\n      shadowOpacity: 0.25,\n      shadowRadius: 12,\n      shadowOffset: {\n        height: 5,\n        width: 0\n      }\n    },\n    blurView: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n      borderRadius: brRadius\n    }),\n    selectedBorder: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n      borderRadius: DEFAULT_BORDER_RADIUS,\n      borderWidth: selectionOptionsWithDefaults.borderWidth,\n      borderColor: selectionOptionsWithDefaults.color\n    }),\n    selectedIndicator: {\n      borderRadius: _style.BorderRadiuses.br100,\n      position: 'absolute',\n      top: -selectionOptionsWithDefaults.indicatorSize / 2 + 2,\n      right: -selectionOptionsWithDefaults.indicatorSize / 2 + 1,\n      width: selectionOptionsWithDefaults.indicatorSize,\n      height: selectionOptionsWithDefaults.indicatorSize,\n      backgroundColor: selectionOptionsWithDefaults.color,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n}\n\nCard.Section = _CardSection.default;\nCard.Item = _CardItem.default;\nCard.Image = _CardImage.default;\nvar _default = Card;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/card/index.js"],"names":["DEFAULT_BORDER_RADIUS","BorderRadiuses","br40","DEFAULT_SELECTION_PROPS","borderWidth","color","Colors","blue30","indicatorSize","icon","Assets","icons","checkSmall","Card","state","animatedSelected","Animated","Value","Number","props","selected","prevProps","animateSelection","timing","toValue","duration","useNativeDriver","start","styles","createStyles","getThemeProps","blurOptions","blurType","blurAmount","childIndex","row","children","childrenCount","React","Children","count","position","push","selectionOptions","selectionColor","_","get","isUndefined","selectedBorder","borderColor","borderRadius","opacity","selectedIndicator","backgroundColor","map","child","index","CardImage","displayName","calcImagePosition","cloneElement","onPress","style","containerStyle","enableBlur","others","getBlurOptions","Container","TouchableOpacity","View","brRadius","container","elevationStyle","shadowStyle","blurBgStyle","setRef","Constants","isIOS","blurView","renderChildren","renderSelection","elevation","enableShadow","containerShadow","rgba","white","undefined","PureBaseComponent","propTypes","width","PropTypes","oneOfType","number","string","height","bool","func","object","ViewPropTypes","shape","defaultProps","selectionOptionsWithDefaults","merge","StyleSheet","create","overflow","shadowColor","dark40","shadowOpacity","shadowRadius","shadowOffset","absoluteFillObject","br100","top","right","alignItems","justifyContent","Section","CardSection","Item","CardItem","Image"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, ViewPropTypes, Animated} from 'react-native';\nimport {BlurView} from '@react-native-community/blur';\nimport {Constants} from '../../helpers';\nimport {Colors, BorderRadiuses} from '../../style';\nimport {PureBaseComponent} from '../../commons';\nimport View from '../view';\nimport TouchableOpacity from '../touchableOpacity';\nimport Image from '../image';\nimport CardSection from './CardSection';\nimport CardItem from './CardItem';\nimport CardImage from './CardImage';\nimport Assets from '../../assets';\n\n\nconst DEFAULT_BORDER_RADIUS = BorderRadiuses.br40;\nconst DEFAULT_SELECTION_PROPS = {\n  borderWidth: 2,\n  color: Colors.blue30,\n  indicatorSize: 20,\n  icon: Assets.icons.checkSmall\n};\n\n/**\n * @description: Card component\n * @extends: TouchableOpacity\n * @extendsnotes: (Touchable when passing onPress)\n * @extendslink: docs/TouchableOpacity\n * @modifiers: margin, padding\n * @gif: https://media.giphy.com/media/l0HU9SKWmv0VTOYMM/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\n */\nclass Card extends PureBaseComponent {\n  static displayName = 'Card';\n\n  static propTypes = {\n    /**\n     * card custom width\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * card custom height\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * should inner card flow direction be horizontal\n     */\n    row: PropTypes.bool,\n    /**\n     * card border radius (will be passed to inner Card.Image component)\n     */\n    borderRadius: PropTypes.number,\n    /**\n     * action for when pressing the card\n     */\n    onPress: PropTypes.func,\n    /**\n     * whether the card should have shadow or not\n     */\n    enableShadow: PropTypes.bool,\n    /**\n     * elevation value (Android only)\n     */\n    elevation: PropTypes.number,\n    /**\n     * enable blur effect (iOS only)\n     */\n    enableBlur: PropTypes.bool,\n    /**\n     * blur option for blur effect according to @react-native-community/blur lib (make sure enableBlur is on)\n     */\n    blurOptions: PropTypes.object,\n    /**\n     * Additional styles for the top container\n     */\n    containerStyle: ViewPropTypes.style,\n    /**\n     * Adds visual indication that the card is selected\n     */\n    selected: PropTypes.bool,\n    /**\n     * Custom options for styling the selection indication\n     */\n    selectionOptions: PropTypes.shape({\n      icon: PropTypes.number,\n      color: PropTypes.string,\n      borderWidth: PropTypes.number,\n      indicatorSize: PropTypes.number\n    })\n  };\n\n  static defaultProps = {\n    enableShadow: true\n  };\n\n  state = {\n    animatedSelected: new Animated.Value(Number(this.props.selected))\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected !== this.props.selected) {\n      this.animateSelection();\n    }\n  }\n\n  animateSelection() {\n    const {animatedSelected} = this.state;\n    const {selected} = this.props;\n    Animated.timing(animatedSelected, {\n      toValue: Number(selected),\n      duration: 120,\n      useNativeDriver: true\n    }).start();\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps());\n  }\n\n  getBlurOptions() {\n    const {blurOptions} = this.getThemeProps();\n    return {\n      blurType: 'light',\n      blurAmount: 5,\n      ...blurOptions\n    };\n  }\n\n  // todo: add unit test\n  calcImagePosition(childIndex) {\n    const {row, children} = this.props;\n    const childrenCount = React.Children.count(children);\n    const position = [];\n\n    if (childIndex === 0) {\n      position.push(row ? 'left' : 'top');\n    }\n\n    if (childIndex === childrenCount - 1) {\n      position.push(row ? 'right' : 'bottom');\n    }\n\n    return position;\n  }\n\n  get elevationStyle() {\n    const {elevation, enableShadow} = this.getThemeProps();\n    \n    if (enableShadow) {\n      return {elevation: elevation || 2};\n    }\n  }\n\n  get shadowStyle() {\n    const {enableShadow} = this.getThemeProps();\n    \n    if (enableShadow) {\n      return this.styles.containerShadow;\n    }\n  }\n\n  get blurBgStyle() {\n    const {enableBlur} = this.getThemeProps();\n    \n    if (Constants.isIOS && enableBlur) {\n      return {backgroundColor: Colors.rgba(Colors.white, 0.85)};\n    } else {\n      return {backgroundColor: Colors.white};\n    }\n  }\n\n  get borderRadius() {\n    const {borderRadius} = this.getThemeProps();\n    \n    return borderRadius === undefined ? DEFAULT_BORDER_RADIUS : borderRadius;\n  }\n\n  renderSelection() {\n    const {selectionOptions, selected} = this.getThemeProps();\n    const {animatedSelected} = this.state;\n    const selectionColor = _.get(selectionOptions, 'color', DEFAULT_SELECTION_PROPS.color);\n\n    if (_.isUndefined(selected)) {\n      return null;\n    }\n\n    return (\n      <Animated.View\n        style={[\n          this.styles.selectedBorder,\n          {borderColor: selectionColor},\n          {borderRadius: this.borderRadius},\n          {opacity: animatedSelected}\n        ]}\n        pointerEvents=\"none\"\n      >\n        <View style={[this.styles.selectedIndicator, {backgroundColor: selectionColor}]}>\n          <Image source={_.get(selectionOptions, 'icon', DEFAULT_SELECTION_PROPS.icon)}/>\n        </View>\n      </Animated.View>\n    );\n  }\n\n  renderChildren() {\n    const children = React.Children.map(this.props.children, (child, index) => {\n      if (_.get(child, 'type.displayName') === CardImage.displayName) {\n        const position = this.calcImagePosition(index);\n        return React.cloneElement(child, {\n          position,\n          borderRadius: this.borderRadius\n        });\n      }\n      return child;\n    });\n    return children;\n  }\n\n  render() {\n    const {onPress, style, containerStyle, enableBlur, ...others} = this.getThemeProps();\n    const blurOptions = this.getBlurOptions();\n    const Container = onPress ? TouchableOpacity : View;\n    const brRadius = this.borderRadius;\n\n    return (\n      <Container\n        style={[\n          this.styles.container,\n          {borderRadius: brRadius},\n          this.elevationStyle,\n          this.shadowStyle,\n          this.blurBgStyle,\n          containerStyle,\n          style\n        ]}\n        onPress={onPress}\n        delayPressIn={10}\n        activeOpacity={0.6}\n        {...others}\n        ref={this.setRef}\n      >\n        {Constants.isIOS && enableBlur && (\n          <BlurView style={[this.styles.blurView, {borderRadius: brRadius}]} {...blurOptions}/>\n        )}\n\n        {this.renderChildren()}\n        {this.renderSelection()}\n      </Container>\n    );\n  }\n}\n\nfunction createStyles({width, height, borderRadius, selectionOptions}) {\n  const selectionOptionsWithDefaults = _.merge(DEFAULT_SELECTION_PROPS, selectionOptions);\n  const brRadius = borderRadius === undefined ? DEFAULT_BORDER_RADIUS : borderRadius;\n\n  return StyleSheet.create({\n    container: {\n      width,\n      height,\n      overflow: 'visible',\n      borderRadius: brRadius\n    },\n    containerShadow: {\n      // sh30 bottom\n      shadowColor: Colors.dark40,\n      shadowOpacity: 0.25,\n      shadowRadius: 12,\n      shadowOffset: {height: 5, width: 0}\n    },\n    blurView: {\n      ...StyleSheet.absoluteFillObject,\n      borderRadius: brRadius\n    },\n    selectedBorder: {\n      ...StyleSheet.absoluteFillObject,\n      borderRadius: DEFAULT_BORDER_RADIUS,\n      borderWidth: selectionOptionsWithDefaults.borderWidth,\n      borderColor: selectionOptionsWithDefaults.color\n    },\n    selectedIndicator: {\n      borderRadius: BorderRadiuses.br100,\n      position: 'absolute',\n      top: -selectionOptionsWithDefaults.indicatorSize / 2 + 2,\n      right: -selectionOptionsWithDefaults.indicatorSize / 2 + 1,\n      width: selectionOptionsWithDefaults.indicatorSize,\n      height: selectionOptionsWithDefaults.indicatorSize,\n      backgroundColor: selectionOptionsWithDefaults.color,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n}\n\nCard.Section = CardSection;\nCard.Item = CardItem;\nCard.Image = CardImage;\n\nexport default Card;\n"]},"metadata":{},"sourceType":"script"}