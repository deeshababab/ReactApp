{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeModalDropdown = _interopRequireDefault(require(\"react-native-modal-dropdown\"));\n\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = require(\"../styles\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\src\\\\components\\\\Dropdown.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RNSDropDown = function (_React$Component) {\n  (0, _inherits2.default)(RNSDropDown, _React$Component);\n\n  var _super = _createSuper(RNSDropDown);\n\n  function RNSDropDown() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RNSDropDown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isOpened: false\n    };\n\n    _this._openModal = function () {\n      _this.setState({\n        isOpened: true\n      });\n    };\n\n    _this._closeModal = function () {\n      _this.setState({\n        isOpened: false\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(RNSDropDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          color = _this$props.color,\n          onSelect = _this$props.onSelect,\n          style = _this$props.style,\n          borderColor = _this$props.borderColor,\n          selectedIndex = _this$props.selectedIndex,\n          placeholder = _this$props.placeholder;\n      return _react.default.createElement(_reactNativeModalDropdown.default, {\n        options: items,\n        onDropdownWillShow: this._openModal,\n        onDropdownWillHide: this._closeModal,\n        dropdownStyle: {\n          shadowColor: '#000000',\n          shadowOffset: {\n            width: 0,\n            height: 3\n          },\n          shadowRadius: 5,\n          shadowOpacity: 1.0\n        },\n        adjustFrame: function adjustFrame(params) {\n          params.left = 0;\n          params.right = 0;\n          return params;\n        },\n        renderRow: function renderRow(text) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              paddingHorizontal: 20,\n              paddingVertical: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 11\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: {\n              color: color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }\n          }, text));\n        },\n        onSelect: onSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.container, style && style, {\n          borderColor: borderColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, selectedIndex > -1 && items[selectedIndex] ? items[selectedIndex] : placeholder), _react.default.createElement(_FontAwesome.default, {\n        name: this.state.isOpened ? 'angle-up' : 'angle-down',\n        color: color,\n        size: 20,\n        style: styles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return RNSDropDown;\n}(_react.default.Component);\n\nRNSDropDown.defaultProps = {\n  placeholder: 'Please Select...',\n  selectedIndex: -1,\n  color: _styles.colors.primary,\n  borderColor: _styles.colors.primary\n};\nvar styles = {\n  container: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: _styles.colors.primary,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    borderRadius: 5\n  },\n  icon: {\n    marginLeft: 10\n  }\n};\nvar _default = RNSDropDown;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/src/components/Dropdown.js"],"names":["RNSDropDown","state","isOpened","_openModal","setState","_closeModal","props","items","color","onSelect","style","borderColor","selectedIndex","placeholder","shadowColor","shadowOffset","width","height","shadowRadius","shadowOpacity","params","left","right","text","paddingHorizontal","paddingVertical","styles","container","icon","React","Component","defaultProps","colors","primary","borderWidth","alignItems","justifyContent","flexDirection","borderRadius","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport { View, Text } from 'react-native';\n\nimport { colors } from '../styles';\n\nclass RNSDropDown extends React.Component {\n  static defaultProps = {\n    placeholder: 'Please Select...',\n    selectedIndex: -1,\n    color: colors.primary,\n    borderColor: colors.primary,\n  };\n\n  state = {\n    isOpened: false,\n  };\n\n  _openModal = () => {\n    this.setState({ isOpened: true });\n  };\n\n  _closeModal = () => {\n    this.setState({ isOpened: false });\n  };\n\n  render() {\n    const {\n      items,\n      color,\n      onSelect,\n      style,\n      borderColor,\n      selectedIndex,\n      placeholder,\n    } = this.props;\n    return (\n      <ModalDropdown\n        options={items}\n        onDropdownWillShow={this._openModal}\n        onDropdownWillHide={this._closeModal}\n        dropdownStyle={{\n          shadowColor: '#000000',\n          shadowOffset: {\n            width: 0,\n            height: 3,\n          },\n          shadowRadius: 5,\n          shadowOpacity: 1.0,\n        }}\n        adjustFrame={params => {\n          // eslint-disable-next-line no-param-reassign\n          params.left = 0;\n          // eslint-disable-next-line no-param-reassign\n          params.right = 0;\n          return params;\n        }}\n        renderRow={text => (\n          <View style={{ paddingHorizontal: 20, paddingVertical: 10 }}>\n            <Text style={{ color }}>{text}</Text>\n          </View>\n        )}\n        onSelect={onSelect}\n      >\n        <View style={[styles.container, style && style, { borderColor }]}>\n          <Text style={{ color }}>\n            {selectedIndex > -1 && items[selectedIndex]\n              ? items[selectedIndex]\n              : placeholder}\n          </Text>\n          <Icon\n            name={this.state.isOpened ? 'angle-up' : 'angle-down'}\n            color={color}\n            size={20}\n            style={styles.icon}\n          />\n        </View>\n      </ModalDropdown>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: colors.primary,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    borderRadius: 5,\n  },\n  icon: {\n    marginLeft: 10,\n  },\n};\n\nexport default RNSDropDown;\n"]},"metadata":{},"sourceType":"script"}