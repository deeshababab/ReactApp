{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _text = _interopRequireDefault(require(\"../text\"));\n\nvar _image = _interopRequireDefault(require(\"../image\"));\n\nvar _touchableOpacity = _interopRequireDefault(require(\"../touchableOpacity\"));\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabBar\\\\TabBarItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar TabBarItem = function (_BaseComponent) {\n  (0, _inherits2.default)(TabBarItem, _BaseComponent);\n\n  var _super = _createSuper(TabBarItem);\n\n  function TabBarItem(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TabBarItem);\n    _this = _super.call(this, props);\n\n    _this.onLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n\n      if (_this.state.fontStyle !== undefined) {\n        _lodash.default.invoke(_this.props, 'onLayout', width);\n\n        _this.setState({\n          fontStyle: undefined\n        });\n      }\n    };\n\n    _this.state = {\n      fontStyle: _this.getFontStyle(_this.getThemeProps())\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(TabBarItem, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (!_lodash.default.isEqual(nextProps.label, this.props.label) && !_lodash.default.isEqual(nextProps.width, this.props.width)) {\n        this.setState({\n          fontStyle: this.getFontStyle(this.getThemeProps())\n        });\n      }\n    }\n  }, {\n    key: \"getFontStyle\",\n    value: function getFontStyle(props) {\n      return props.selectedLabelStyle || this.styles.labelSelected;\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps());\n    }\n  }, {\n    key: \"getColorFromStyle\",\n    value: function getColorFromStyle(style) {\n      var flatten = _reactNative.StyleSheet.flatten(style);\n\n      if (flatten) {\n        var color = flatten.color;\n        return color;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps = this.getThemeProps(),\n          children = _this$getThemeProps.children,\n          icon = _this$getThemeProps.icon,\n          iconColor = _this$getThemeProps.iconColor,\n          iconSelectedColor = _this$getThemeProps.iconSelectedColor,\n          label = _this$getThemeProps.label,\n          labelStyle = _this$getThemeProps.labelStyle,\n          maxLines = _this$getThemeProps.maxLines,\n          selected = _this$getThemeProps.selected,\n          selectedLabelStyle = _this$getThemeProps.selectedLabelStyle,\n          showDivider = _this$getThemeProps.showDivider,\n          width = _this$getThemeProps.width,\n          onPress = _this$getThemeProps.onPress,\n          testID = _this$getThemeProps.testID;\n\n      var iconTint = iconColor || this.getColorFromStyle(labelStyle) || this.getColorFromStyle(this.styles.label);\n      var iconSelectedTint = iconSelectedColor || this.getColorFromStyle(selectedLabelStyle) || this.getColorFromStyle(this.styles.labelSelected);\n      return _react.default.createElement(_touchableOpacity.default, {\n        activeOpacity: 1,\n        onPress: onPress,\n        style: width ? {\n          width: width\n        } : this.styles.container,\n        testID: testID,\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_view.default, {\n        row: true,\n        flex: true,\n        center: true,\n        style: [showDivider && this.styles.divider, {\n          paddingHorizontal: _style.Spacings.s4\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, icon && _react.default.createElement(_view.default, {\n        \"paddingR-6\": !_lodash.default.isEmpty(label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_image.default, {\n        source: icon,\n        tintColor: selected ? iconSelectedTint : iconTint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      })), !_lodash.default.isEmpty(label) && _react.default.createElement(_text.default, {\n        numberOfLines: maxLines,\n        style: [labelStyle || this.styles.label, selected && (selectedLabelStyle || this.styles.labelSelected), this.state.fontStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, label), children));\n    }\n  }]);\n  return TabBarItem;\n}(_commons.BaseComponent);\n\nexports.default = TabBarItem;\nTabBarItem.displayName = 'TabBar.Item';\nTabBarItem.propTypes = {\n  icon: _propTypes.default.number,\n  iconColor: _propTypes.default.string,\n  iconSelectedColor: _propTypes.default.string,\n  label: _propTypes.default.string,\n  labelStyle: _text.default.propTypes.style,\n  maxLines: _propTypes.default.number,\n  selectedLabelStyle: _text.default.propTypes.style,\n  selected: _propTypes.default.bool,\n  onPress: _propTypes.default.func,\n  showDivider: _propTypes.default.bool,\n  width: _propTypes.default.number,\n  onLayout: _propTypes.default.func\n};\nTabBarItem.defaultProps = {\n  maxLines: 1\n};\n\nfunction createStyles() {\n  return _reactNative.StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    label: _objectSpread({\n      color: _style.Colors.dark10\n    }, _style.Typography.text90),\n    labelSelected: {\n      color: _style.Colors.blue30,\n      fontWeight: _helpers.Constants.isIOS ? '600' : '700'\n    },\n    divider: {\n      borderRightWidth: 1,\n      borderRightColor: _style.Colors.dark70,\n      marginVertical: 14\n    }\n  });\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/tabBar/TabBarItem.js"],"names":["TabBarItem","props","onLayout","event","width","nativeEvent","layout","state","fontStyle","undefined","_","invoke","setState","getFontStyle","getThemeProps","nextProps","isEqual","label","selectedLabelStyle","styles","labelSelected","createStyles","style","flatten","StyleSheet","color","children","icon","iconColor","iconSelectedColor","labelStyle","maxLines","selected","showDivider","onPress","testID","iconTint","getColorFromStyle","iconSelectedTint","container","divider","paddingHorizontal","Spacings","s4","isEmpty","BaseComponent","displayName","propTypes","PropTypes","number","string","Text","bool","func","defaultProps","create","flex","Colors","dark10","Typography","text90","blue30","fontWeight","Constants","isIOS","borderRightWidth","borderRightColor","dark70","marginVertical"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet} from 'react-native';\nimport View from '../view';\nimport Text from '../text';\nimport Image from '../image';\nimport TouchableOpacity from '../touchableOpacity';\nimport {Colors, Typography, Spacings} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport {Constants} from '../../helpers';\n\n/**\n * @description: TabBar.Item, inner component of TabBar for configuring the tabs\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js\n */\nexport default class TabBarItem extends BaseComponent {\n  static displayName = 'TabBar.Item';\n\n  static propTypes = {\n    /**\n     * icon of the tab\n     */\n    icon: PropTypes.number,\n    /**\n     * icon tint color\n     */\n    iconColor: PropTypes.string,\n    /**\n     * icon selected tint color\n     */\n    iconSelectedColor: PropTypes.string,\n    /**\n     * label of the tab\n     */\n    label: PropTypes.string,\n    /**\n     * custom label style\n     */\n    labelStyle: Text.propTypes.style,\n    /**\n     * maximun number of lines the label can break\n     */\n    maxLines: PropTypes.number,\n    /**\n     * custom selected tab label style\n     */\n    selectedLabelStyle: Text.propTypes.style,\n    /**\n     * whether the tab is selected or not\n     */\n    selected: PropTypes.bool,\n    /**\n     * callback for when pressing a tab\n     */\n    onPress: PropTypes.func,\n    /**\n     * whether the tab will have a divider on its right\n     */\n    showDivider: PropTypes.bool,\n    /**\n     * A fixed width for the item\n     */\n    width: PropTypes.number,\n    /**\n     * A callback to invoke for onLayout event\n     */\n    onLayout: PropTypes.func\n  };\n\n  static defaultProps = {\n    maxLines: 1\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // HACK: for indicator width in TabBar\n      fontStyle: this.getFontStyle(this.getThemeProps())\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!_.isEqual(nextProps.label, this.props.label) && !_.isEqual(nextProps.width, this.props.width)) {\n      /** dynamic item's label */\n      this.setState({fontStyle: this.getFontStyle(this.getThemeProps())});\n    }\n  }\n\n  // HACK: for indicator width in TabBar\n  getFontStyle(props) {\n    return props.selectedLabelStyle || this.styles.labelSelected;\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps());\n  }\n\n  onLayout = event => {\n    // HACK: for indicator width in TabBar\n    const {width} = event.nativeEvent.layout;\n    if (this.state.fontStyle !== undefined) {\n      _.invoke(this.props, 'onLayout', width);\n\n      this.setState({fontStyle: undefined});\n    }\n  };\n\n  getColorFromStyle(style) {\n    const flatten = StyleSheet.flatten(style);\n    if (flatten) {\n      const color = flatten.color;\n      return color;\n    }\n    return undefined;\n  }\n\n  render() {\n    const {\n      children,\n      icon,\n      iconColor,\n      iconSelectedColor,\n      label,\n      labelStyle,\n      maxLines,\n      selected,\n      selectedLabelStyle,\n      showDivider,\n      width,\n      onPress,\n      testID\n    } = this.getThemeProps();\n\n    const iconTint = iconColor || this.getColorFromStyle(labelStyle) || this.getColorFromStyle(this.styles.label);\n    const iconSelectedTint =\n      iconSelectedColor ||\n      this.getColorFromStyle(selectedLabelStyle) ||\n      this.getColorFromStyle(this.styles.labelSelected);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1}\n        onPress={onPress}\n        style={width ? {width} : this.styles.container}\n        testID={testID}\n        onLayout={this.onLayout}\n      >\n        <View row flex center style={[showDivider && this.styles.divider, {paddingHorizontal: Spacings.s4}]}>\n          {icon && (\n            <View paddingR-6={!_.isEmpty(label)}>\n              <Image source={icon} tintColor={selected ? iconSelectedTint : iconTint}/>\n            </View>\n          )}\n          {!_.isEmpty(label) && (\n            <Text\n              numberOfLines={maxLines}\n              style={[\n                labelStyle || this.styles.label,\n                selected && (selectedLabelStyle || this.styles.labelSelected),\n                this.state.fontStyle // HACK: for indicator width in TabBar\n              ]}\n            >\n              {label}\n            </Text>\n          )}\n          {children}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    label: {\n      color: Colors.dark10,\n      ...Typography.text90\n    },\n    labelSelected: {\n      color: Colors.blue30,\n      fontWeight: Constants.isIOS ? '600' : '700'\n    },\n    divider: {\n      borderRightWidth: 1,\n      borderRightColor: Colors.dark70,\n      marginVertical: 14 // NOTE: will not cut long text at the top and bottom in iOS if TabBar not height enough\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}