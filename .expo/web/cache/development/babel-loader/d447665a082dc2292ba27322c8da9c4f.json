{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeAnimatable = require(\"react-native-animatable\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _style = require(\"../../style\");\n\nvar _commons = require(\"../../commons\");\n\nvar _modal = _interopRequireDefault(require(\"../../screensComponents/modal\"));\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _panGestureView = _interopRequireDefault(require(\"../panningViews/panGestureView\"));\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\dialog\\\\dialogDeprecated.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SWIPE_DIRECTIONS = {\n  UP: 'up',\n  DOWN: 'down'\n};\n\nvar DialogDeprecated = function (_BaseComponent) {\n  (0, _inherits2.default)(DialogDeprecated, _BaseComponent);\n\n  var _super = _createSuper(DialogDeprecated);\n\n  function DialogDeprecated(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DialogDeprecated);\n    _this = _super.call(this, props);\n\n    _this.onDismiss = function () {\n      _this.initPositions();\n\n      _lodash.default.invoke(_this.props, 'onDismiss', _this.props);\n    };\n\n    _this.animatedDismiss = function () {\n      if (_this.panGestureViewRef) {\n        _this.panGestureViewRef.animateDismiss();\n      } else {\n        _this.onDismiss();\n      }\n    };\n\n    _this.initialPosition = props.top ? -_helpers.Constants.screenHeight : _helpers.Constants.screenHeight;\n    _this.state = {\n      alignments: _this.state.alignments,\n      deltaY: new _reactNative.Animated.Value(_this.initialPosition)\n    };\n\n    if (props.dismissSwipeDirection) {\n      console.warn('Dialog component\\'s prop \\'dismissSwipeDirection\\' is deprecated, please remove it');\n    }\n\n    if (props.visible) {\n      _this.animateContent();\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(DialogDeprecated, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.visible && this.props.visible) {\n        this.animateContent();\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.props);\n    }\n  }, {\n    key: \"initPositions\",\n    value: function initPositions() {\n      this.setState({\n        deltaY: new _reactNative.Animated.Value(this.initialPosition)\n      });\n    }\n  }, {\n    key: \"animateContent\",\n    value: function animateContent() {\n      var _this$getThemeProps = this.getThemeProps(),\n          animationConfig = _this$getThemeProps.animationConfig;\n\n      var deltaY = this.state.deltaY;\n\n      _reactNative.Animated.timing(deltaY, {\n        toValue: 0,\n        duration: _lodash.default.get(animationConfig, 'duration', 400),\n        easing: _lodash.default.get(animationConfig, 'easing', _reactNative.Easing.bezier(0.165, 0.84, 0.44, 1)),\n        useNativeDriver: _lodash.default.get(animationConfig, 'useNativeDriver', true)\n      }).start();\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          bottom = _this$getThemeProps2.bottom,\n          useSafeArea = _this$getThemeProps2.useSafeArea;\n\n      var bottomInsets = _helpers.Constants.getSafeAreaInsets().bottom;\n\n      return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        accessible: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.SafeAreaView, {\n        style: {\n          flexGrow: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, this.props.children, useSafeArea && _helpers.Constants.isIphoneX && bottom && _react.default.createElement(_view.default, {\n        style: {\n          marginTop: bottomInsets\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 60\n        }\n      })));\n    }\n  }, {\n    key: \"renderDraggableContainer\",\n    value: function renderDraggableContainer() {\n      var _this2 = this;\n\n      var _this$getThemeProps3 = this.getThemeProps(),\n          style = _this$getThemeProps3.style,\n          top = _this$getThemeProps3.top,\n          disablePan = _this$getThemeProps3.disablePan;\n\n      var Container = disablePan ? _view.default : _panGestureView.default;\n      return _react.default.createElement(Container, {\n        ref: !disablePan && function (r) {\n          return _this2.panGestureViewRef = r;\n        },\n        style: [this.styles.dialogContainer, style],\n        direction: !disablePan && top && _panGestureView.default.directions.UP,\n        onDismiss: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }\n      }, this.renderContent());\n    }\n  }, {\n    key: \"renderAnimationContainer\",\n    value: function renderAnimationContainer() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n          animationConfig = _this$getThemeProps4.animationConfig,\n          top = _this$getThemeProps4.top,\n          testID = _this$getThemeProps4.testID;\n\n      var _this$state = this.state,\n          alignments = _this$state.alignments,\n          deltaY = _this$state.deltaY;\n\n      var centerByDefault = _lodash.default.isEmpty(alignments);\n\n      var hasCustomAnimation = animationConfig && animationConfig.animation;\n      var Container = hasCustomAnimation ? _reactNativeAnimatable.View : _reactNative.Animated.View;\n      var defaultAnimation = top ? _style.AnimatableManager.presets.slideInDown : _style.AnimatableManager.presets.slideInUp;\n      var animation = hasCustomAnimation ? (0, _extends2.default)(defaultAnimation, animationConfig) : {};\n      return _react.default.createElement(Container, (0, _extends2.default)({\n        testID: testID,\n        style: [this.styles.overlay, _objectSpread({}, alignments), centerByDefault && this.styles.centerContent, !hasCustomAnimation && {\n          transform: [{\n            translateY: deltaY\n          }]\n        }],\n        pointerEvents: \"box-none\"\n      }, animation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }\n      }), this.renderDraggableContainer());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          visible = _this$getThemeProps5.visible,\n          overlayBackgroundColor = _this$getThemeProps5.overlayBackgroundColor,\n          useModal = _this$getThemeProps5.useModal,\n          onModalDismissed = _this$getThemeProps5.onModalDismissed,\n          disablePan = _this$getThemeProps5.disablePan;\n\n      var dismissFunction = disablePan ? this.onDismiss : this.animatedDismiss;\n\n      if (useModal) {\n        return _react.default.createElement(_modal.default, {\n          transparent: true,\n          visible: visible,\n          animationType: 'fade',\n          onBackgroundPress: dismissFunction,\n          onRequestClose: dismissFunction,\n          overlayBackgroundColor: overlayBackgroundColor,\n          onDismiss: onModalDismissed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 9\n          }\n        }, this.renderAnimationContainer());\n      } else {\n        return _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.onDismiss,\n          activeOpacity: 1,\n          style: {\n            position: 'absolute',\n            bottom: 0,\n            top: 0,\n            left: 0,\n            right: 0,\n            backgroundColor: overlayBackgroundColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 9\n          }\n        }, this.renderAnimationContainer());\n      }\n    }\n  }]);\n  return DialogDeprecated;\n}(_commons.BaseComponent);\n\nDialogDeprecated.displayName = 'Dialog (deprecated)';\nDialogDeprecated.propTypes = {\n  visible: _propTypes.default.bool,\n  onDismiss: _propTypes.default.func,\n  dismissSwipeDirection: _propTypes.default.oneOf(Object.values(SWIPE_DIRECTIONS)),\n  overlayBackgroundColor: _propTypes.default.string,\n  width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n  height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n  animationConfig: _propTypes.default.object,\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  disablePan: _propTypes.default.bool,\n  useSafeArea: _propTypes.default.bool,\n  useModal: _propTypes.default.bool,\n  onModalDismissed: _propTypes.default.func\n};\nDialogDeprecated.defaultProps = {\n  overlayBackgroundColor: _style.Colors.rgba(_style.Colors.dark10, 0.6),\n  width: '90%',\n  height: '70%',\n  useModal: true\n};\nDialogDeprecated.swipeDirections = SWIPE_DIRECTIONS;\n\nfunction createStyles(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return _reactNative.StyleSheet.create({\n    overlay: {\n      flex: 1\n    },\n    dialogContainer: {\n      width: width,\n      height: height\n    },\n    centerContent: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  });\n}\n\nvar _default = DialogDeprecated;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/dialog/dialogDeprecated.js"],"names":["SWIPE_DIRECTIONS","UP","DOWN","DialogDeprecated","props","onDismiss","initPositions","_","invoke","animatedDismiss","panGestureViewRef","animateDismiss","initialPosition","top","Constants","screenHeight","state","alignments","deltaY","Animated","Value","dismissSwipeDirection","console","warn","visible","animateContent","prevProps","styles","createStyles","setState","getThemeProps","animationConfig","timing","toValue","duration","get","easing","Easing","bezier","useNativeDriver","start","bottom","useSafeArea","bottomInsets","getSafeAreaInsets","flexGrow","children","isIphoneX","marginTop","style","disablePan","Container","View","PanGestureView","r","dialogContainer","directions","renderContent","testID","centerByDefault","isEmpty","hasCustomAnimation","animation","AnimatableView","defaultAnimation","AnimatableManager","presets","slideInDown","slideInUp","overlay","centerContent","transform","translateY","renderDraggableContainer","overlayBackgroundColor","useModal","onModalDismissed","dismissFunction","renderAnimationContainer","position","left","right","backgroundColor","BaseComponent","displayName","propTypes","PropTypes","bool","func","oneOf","Object","values","string","width","oneOfType","number","height","object","containerStyle","array","defaultProps","Colors","rgba","dark10","swipeDirections","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, TouchableWithoutFeedback, SafeAreaView, Animated, Easing, TouchableOpacity} from 'react-native';\nimport {View as AnimatableView} from 'react-native-animatable';\nimport {Constants} from '../../helpers';\nimport {AnimatableManager, Colors} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport Modal from '../../screensComponents/modal';\nimport View from '../view';\nimport PanGestureView from '../panningViews/panGestureView';\n\n\n/**\n * @description: Dialog component for displaying custom content inside a popup dialog\n * @notes: Use alignment modifiers to control the dialog position\n * (top, bottom, centerV, centerH, etc... by default the dialog is aligned to center)\n * @modifiers: alignment\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/DialogScreen.js\n * @gif: https://media.giphy.com/media/9S58XdLCoUiLzAc1b1/giphy.gif\n */\n\nconst SWIPE_DIRECTIONS = {\n  UP: 'up',\n  DOWN: 'down'\n}; // DEFRECATED\n\nclass DialogDeprecated extends BaseComponent {\n  static displayName = 'Dialog (deprecated)'\n  static propTypes = {\n    /**\n     * Control visibility of the dialog\n     */\n    visible: PropTypes.bool,\n    /**\n     * Dismiss callback for when clicking on the background\n     */\n    onDismiss: PropTypes.func,\n    /**\n     * The direction of the swipe to dismiss the dialog (default is 'down')\n     */\n    dismissSwipeDirection: PropTypes.oneOf(Object.values(SWIPE_DIRECTIONS)), // DEFRECATED\n    /**\n     * The color of the overlay background\n     */\n    overlayBackgroundColor: PropTypes.string,\n    /**\n     * The dialog width (default: 90%)\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * The dialog height (default: 70%)\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * The animation configuration to pass to the dialog (ex. {animation, delay, duration, easing})\n     */\n    animationConfig: PropTypes.object,\n    /**\n     * The dialog container style\n     */\n    containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Disable the pan gesture recognizer\n     */\n    disablePan: PropTypes.bool,\n    /**\n     * Whether or not to handle SafeArea\n     */\n    useSafeArea: PropTypes.bool,\n    /**\n     * Whether to display the dialog in a modal\n     */\n    useModal: PropTypes.bool,\n    /**\n     * Called once the modal has been dissmissed (iOS only, modal only)\n     */\n    onModalDismissed: PropTypes.func\n  };\n\n  static defaultProps = {\n    overlayBackgroundColor: Colors.rgba(Colors.dark10, 0.6),\n    width: '90%',\n    height: '70%',\n    useModal: true\n  };\n\n  static swipeDirections = SWIPE_DIRECTIONS; // DEFRECATED\n\n  constructor(props) {\n    super(props);\n\n    this.initialPosition = props.top ? -Constants.screenHeight : Constants.screenHeight;\n\n    this.state = {\n      alignments: this.state.alignments,\n      deltaY: new Animated.Value(this.initialPosition)\n    };\n\n    if (props.dismissSwipeDirection) {\n      console.warn('Dialog component\\'s prop \\'dismissSwipeDirection\\' is deprecated, please remove it');\n    }\n\n    if (props.visible) {\n      this.animateContent();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.visible && this.props.visible) {\n      this.animateContent();\n    }\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.props);\n  }\n\n  onDismiss = () => {\n    this.initPositions();\n    _.invoke(this.props, 'onDismiss', this.props);\n  }\n\n  animatedDismiss = () => {\n    if (this.panGestureViewRef) {\n      this.panGestureViewRef.animateDismiss();\n    } else {\n      this.onDismiss();\n    }\n  }\n\n  initPositions() {\n    this.setState({\n      deltaY: new Animated.Value(this.initialPosition)\n    });\n  }\n\n  animateContent() {\n    const {animationConfig} = this.getThemeProps();\n    const {deltaY} = this.state;\n \n    Animated.timing(deltaY, {\n      toValue: 0,\n      duration: _.get(animationConfig, 'duration', 400),\n      easing: _.get(animationConfig, 'easing', Easing.bezier(0.165, 0.84, 0.44, 1)),\n      useNativeDriver: _.get(animationConfig, 'useNativeDriver', true)\n    }).start();\n  }\n\n  renderContent() {\n    const {bottom, useSafeArea} = this.getThemeProps();\n    const bottomInsets = Constants.getSafeAreaInsets().bottom;\n\n    return (\n      <TouchableWithoutFeedback accessible={false}>\n        <SafeAreaView style={{flexGrow: 1}}>\n          {this.props.children}\n          {useSafeArea && Constants.isIphoneX && bottom && <View style={{marginTop: bottomInsets}}/>}\n        </SafeAreaView>\n      </TouchableWithoutFeedback>\n    );\n  }\n\n  renderDraggableContainer() {\n    const {style, top, disablePan} = this.getThemeProps();\n    const Container = disablePan ? View : PanGestureView;\n\n    return (\n      <Container\n        ref={!disablePan && (r => this.panGestureViewRef = r)}\n        style={[this.styles.dialogContainer, style]}\n        direction={!disablePan && top && PanGestureView.directions.UP}\n        onDismiss={this.onDismiss}\n      >\n        {this.renderContent()}\n      </Container>\n    );\n  }\n\n  renderAnimationContainer() {\n    const {animationConfig, top, testID} = this.getThemeProps();\n    const {alignments, deltaY} = this.state;\n    const centerByDefault = _.isEmpty(alignments);\n    const hasCustomAnimation = (animationConfig && animationConfig.animation);\n    const Container = hasCustomAnimation ? AnimatableView : Animated.View;\n    const defaultAnimation = top ? AnimatableManager.presets.slideInDown : AnimatableManager.presets.slideInUp;\n    const animation = hasCustomAnimation ? Object.assign(defaultAnimation, animationConfig) : {};\n\n    return (\n      <Container\n        testID={testID}\n        style={[\n          this.styles.overlay,\n          {...alignments},\n          centerByDefault && this.styles.centerContent,\n          !hasCustomAnimation && {\n            transform: [{\n              translateY: deltaY\n            }]\n          }\n        ]}\n        pointerEvents=\"box-none\"\n        {...animation}\n      >\n        {this.renderDraggableContainer()}\n      </Container>\n    );\n  }\n\n  render() {\n    const {visible, overlayBackgroundColor, useModal, onModalDismissed, disablePan} = this.getThemeProps();\n    const dismissFunction = disablePan ? this.onDismiss : this.animatedDismiss;\n    \n    if (useModal) {\n      return (\n        <Modal\n          transparent\n          visible={visible}\n          animationType={'fade'}\n          onBackgroundPress={dismissFunction}\n          onRequestClose={dismissFunction}\n          overlayBackgroundColor={overlayBackgroundColor}\n          onDismiss={onModalDismissed}\n        >\n          {this.renderAnimationContainer()}\n        </Modal>\n      );\n    } else {      \n      return (\n        <TouchableOpacity \n          onPress={this.onDismiss}\n          activeOpacity={1}\n          style={{position: 'absolute', bottom: 0, top: 0, left: 0, right: 0, backgroundColor: overlayBackgroundColor}}\n        >\n          {this.renderAnimationContainer()}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n\nfunction createStyles({width, height}) {\n  return StyleSheet.create({\n    overlay: {\n      flex: 1\n    },\n    dialogContainer: {\n      width,\n      height\n    },\n    centerContent: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  });\n}\n\nexport default DialogDeprecated;\n"]},"metadata":{},"sourceType":"script"}