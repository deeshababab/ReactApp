{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAvatarColors = getAvatarColors;\nexports.getColorById = getColorById;\nexports.getInitials = getInitials;\nexports.isGravatarUrl = isGravatarUrl;\nexports.isBlankGravatarUrl = isBlankGravatarUrl;\nexports.patchGravatarUrl = patchGravatarUrl;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _urlParse = _interopRequireDefault(require(\"url-parse\"));\n\nvar _colors = _interopRequireDefault(require(\"../style/colors\"));\n\nfunction hashStringToNumber(str) {\n  var hash = 5381;\n\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = (hash << 5) + hash + char;\n  }\n\n  return hash;\n}\n\nfunction getAvatarColors() {\n  return [_colors.default.blue20, _colors.default.cyan20, _colors.default.green20, _colors.default.yellow20, _colors.default.orange20, _colors.default.red20, _colors.default.purple20, _colors.default.violet20];\n}\n\nfunction getColorById(id) {\n  var avatarColors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getAvatarColors();\n\n  if (!id) {\n    return avatarColors[0];\n  }\n\n  var hashedId = hashStringToNumber(id);\n  var colorIndex = Math.abs(hashedId % avatarColors.length);\n  return avatarColors[colorIndex];\n}\n\nfunction getInitials(name) {\n  var initials = '';\n\n  if (name && _lodash.default.isString(name)) {\n    var nameSplitted = _lodash.default.chain(name).split(/\\s+/g).filter(function (word) {\n      return word.length > 0;\n    }).take(2).value();\n\n    _lodash.default.each(nameSplitted, function (str) {\n      initials += str[0];\n    });\n  }\n\n  return _lodash.default.toUpper(initials);\n}\n\nfunction isGravatarUrl(url) {\n  var _URL = new _urlParse.default(url),\n      hostname = _URL.hostname,\n      pathname = _URL.pathname;\n\n  return _lodash.default.split(hostname, '.').includes('gravatar') && pathname.startsWith('/avatar/');\n}\n\nfunction isBlankGravatarUrl(url) {\n  return isGravatarUrl(url) && _lodash.default.endsWith(url, '?d=blank');\n}\n\nfunction patchGravatarUrl(gravatarUrl) {\n  var url = new _urlParse.default(gravatarUrl, true);\n  var query = url.query;\n  query.d = '404';\n  delete query.default;\n  url.set('query', query);\n  return url.toString();\n}","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/helpers/AvatarHelper.js"],"names":["hashStringToNumber","str","hash","i","length","char","charCodeAt","getAvatarColors","Colors","blue20","cyan20","green20","yellow20","orange20","red20","purple20","violet20","getColorById","id","avatarColors","hashedId","colorIndex","Math","abs","getInitials","name","initials","_","isString","nameSplitted","chain","split","filter","word","take","value","each","toUpper","isGravatarUrl","url","URL","hostname","pathname","includes","startsWith","isBlankGravatarUrl","endsWith","patchGravatarUrl","gravatarUrl","query","d","default","set","toString"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;AAC/B,MAAIC,IAAI,GAAG,IAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAME,IAAI,GAAGJ,GAAG,CAACK,UAAJ,CAAeH,CAAf,CAAb;AACAD,IAAAA,IAAI,GAAI,CAACA,IAAI,IAAI,CAAT,IAAcA,IAAf,GAAuBG,IAA9B;AACD;;AACD,SAAOH,IAAP;AACD;;AAEM,SAASK,eAAT,GAA2B;AAChC,SAAO,CAACC,gBAAOC,MAAR,EAAgBD,gBAAOE,MAAvB,EAA+BF,gBAAOG,OAAtC,EAA+CH,gBAAOI,QAAtD,EACLJ,gBAAOK,QADF,EACYL,gBAAOM,KADnB,EAC0BN,gBAAOO,QADjC,EAC2CP,gBAAOQ,QADlD,CAAP;AAED;;AAEM,SAASC,YAAT,CAAsBC,EAAtB,EAA4D;AAAA,MAAlCC,YAAkC,uEAAnBZ,eAAe,EAAI;;AACjE,MAAI,CAACW,EAAL,EAAS;AACP,WAAOC,YAAY,CAAC,CAAD,CAAnB;AACD;;AAED,MAAMC,QAAQ,GAAGpB,kBAAkB,CAACkB,EAAD,CAAnC;AACA,MAAMG,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASH,QAAQ,GAAGD,YAAY,CAACf,MAAjC,CAAnB;AACA,SAAOe,YAAY,CAACE,UAAD,CAAnB;AACD;;AAEM,SAASG,WAAT,CAAqBC,IAArB,EAA2B;AAChC,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAID,IAAI,IAAIE,gBAAEC,QAAF,CAAWH,IAAX,CAAZ,EAA8B;AAC5B,QAAMI,YAAY,GAAGF,gBAAEG,KAAF,CAAQL,IAAR,EAClBM,KADkB,CACZ,MADY,EAElBC,MAFkB,CAEX,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAAC7B,MAAL,GAAc,CAAlB;AAAA,KAFO,EAGlB8B,IAHkB,CAGb,CAHa,EAIlBC,KAJkB,EAArB;;AAKAR,oBAAES,IAAF,CAAOP,YAAP,EAAqB,UAAC5B,GAAD,EAAS;AAC5ByB,MAAAA,QAAQ,IAAIzB,GAAG,CAAC,CAAD,CAAf;AACD,KAFD;AAGD;;AAED,SAAO0B,gBAAEU,OAAF,CAAUX,QAAV,CAAP;AACD;;AAEM,SAASY,aAAT,CAAuBC,GAAvB,EAA4B;AAAA,aACJ,IAAIC,iBAAJ,CAAQD,GAAR,CADI;AAAA,MAC1BE,QAD0B,QAC1BA,QAD0B;AAAA,MAChBC,QADgB,QAChBA,QADgB;;AAEjC,SAAOf,gBAAEI,KAAF,CAAQU,QAAR,EAAkB,GAAlB,EAAuBE,QAAvB,CAAgC,UAAhC,KAA+CD,QAAQ,CAACE,UAAT,CAAoB,UAApB,CAAtD;AACD;;AAEM,SAASC,kBAAT,CAA4BN,GAA5B,EAAiC;AACtC,SAAOD,aAAa,CAACC,GAAD,CAAb,IAAsBZ,gBAAEmB,QAAF,CAAWP,GAAX,EAAgB,UAAhB,CAA7B;AACD;;AAEM,SAASQ,gBAAT,CAA0BC,WAA1B,EAAuC;AAC5C,MAAMT,GAAG,GAAG,IAAIC,iBAAJ,CAAQQ,WAAR,EAAqB,IAArB,CAAZ;AAD4C,MAErCC,KAFqC,GAE5BV,GAF4B,CAErCU,KAFqC;AAG5CA,EAAAA,KAAK,CAACC,CAAN,GAAU,KAAV;AACA,SAAOD,KAAK,CAACE,OAAb;AACAZ,EAAAA,GAAG,CAACa,GAAJ,CAAQ,OAAR,EAAiBH,KAAjB;AACA,SAAOV,GAAG,CAACc,QAAJ,EAAP;AACD","sourcesContent":["import _ from 'lodash';\nimport URL from 'url-parse';\nimport Colors from '../style/colors';\n\nfunction hashStringToNumber(str) {\n  let hash = 5381;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = ((hash << 5) + hash) + char; /* hash * 33 + c */ // eslint-disable-line\n  }\n  return hash;\n}\n\nexport function getAvatarColors() {\n  return [Colors.blue20, Colors.cyan20, Colors.green20, Colors.yellow20,\n    Colors.orange20, Colors.red20, Colors.purple20, Colors.violet20];\n}\n\nexport function getColorById(id, avatarColors = getAvatarColors()) {\n  if (!id) {\n    return avatarColors[0];\n  }\n\n  const hashedId = hashStringToNumber(id);\n  const colorIndex = Math.abs(hashedId % avatarColors.length);\n  return avatarColors[colorIndex];\n}\n\nexport function getInitials(name) {\n  let initials = '';\n  if (name && _.isString(name)) {\n    const nameSplitted = _.chain(name)\n      .split(/\\s+/g)\n      .filter(word => word.length > 0)\n      .take(2)\n      .value();\n    _.each(nameSplitted, (str) => {\n      initials += str[0];\n    });\n  }\n\n  return _.toUpper(initials);\n}\n\nexport function isGravatarUrl(url) {\n  const {hostname, pathname} = new URL(url);\n  return _.split(hostname, '.').includes('gravatar') && pathname.startsWith('/avatar/');\n}\n\nexport function isBlankGravatarUrl(url) {\n  return isGravatarUrl(url) && _.endsWith(url, '?d=blank');\n}\n\nexport function patchGravatarUrl(gravatarUrl) {\n  const url = new URL(gravatarUrl, true);\n  const {query} = url;\n  query.d = '404';\n  delete query.default;\n  url.set('query', query);\n  return url.toString();\n}\n"]},"metadata":{},"sourceType":"script"}