{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _style = require(\"../../style\");\n\nvar _helpers = require(\"../../helpers\");\n\nvar _commons = require(\"../../commons\");\n\nvar _view = _interopRequireDefault(require(\"../view\"));\n\nvar _text = _interopRequireDefault(require(\"../text\"));\n\nvar _button = _interopRequireDefault(require(\"../button\"));\n\nvar _pageControl = _interopRequireDefault(require(\"../pageControl\"));\n\nvar _nativeComponents = require(\"../../nativeComponents\");\n\nvar _jsxFileName = \"E:\\\\react-native-starter-master\\\\react-native-starter-master\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\featureHighlight\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar defaultOverlayColor = _style.Colors.rgba(_style.Colors.black, 0.82);\n\nvar defaultTextColor = _style.Colors.white;\n\nvar defaultStrokeColor = _style.Colors.rgba(_style.Colors.white, 0.12);\n\nvar defaultStrokeWidth = 12;\nvar contentViewPadding = 32;\nvar contentViewRightMargin = _helpers.Constants.isIOS ? 45 : 46;\nvar titleBottomMargin = 12;\nvar messageBottomMargin = 24;\nvar messageLineHeight = 24;\nvar defaultButtonLabel = 'Got it';\nvar contentViewHeight = _helpers.Constants.isAndroid ? 268 : 282;\n\nvar FeatureHighlight = function (_BaseComponent) {\n  (0, _inherits2.default)(FeatureHighlight, _BaseComponent);\n\n  var _super = _createSuper(FeatureHighlight);\n\n  function FeatureHighlight(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FeatureHighlight);\n    _this = _super.call(this, props);\n\n    _this.onPress = function () {\n      _this.animate(0);\n\n      _this.contentHeight = contentViewHeight;\n      _this.didLayout = false;\n      _this.targetPosition = undefined;\n      var confirmButtonProps = _this.props.confirmButtonProps;\n\n      _lodash.default.invoke(confirmButtonProps, 'onPress');\n    };\n\n    _this.getComponentDimensions = _this.getComponentDimensions.bind((0, _assertThisInitialized2.default)(_this));\n    _this.setTargetPosition = _this.setTargetPosition.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      fadeAnim: new _reactNative.Animated.Value(0),\n      contentTopPosition: undefined\n    };\n    _this.contentHeight = contentViewHeight;\n    _this.targetPosition = undefined;\n    return _this;\n  }\n\n  (0, _createClass2.default)(FeatureHighlight, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setTargetPosition();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.setTargetPosition(nextProps);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.viewRef) {\n        this.setAccessibilityFocus(this.viewRef);\n      }\n    }\n  }, {\n    key: \"setAccessibilityFocus\",\n    value: function setAccessibilityFocus(ref) {\n      var reactTag = (0, _reactNative.findNodeHandle)(ref);\n\n      _reactNative.AccessibilityInfo.setAccessibilityFocus(reactTag);\n    }\n  }, {\n    key: \"findTargetNode\",\n    value: function findTargetNode(target) {\n      return (0, _reactNative.findNodeHandle)(target);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(toValue) {\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: toValue,\n        duration: toValue ? 100 : 0\n      }).start();\n    }\n  }, {\n    key: \"setTargetPosition\",\n    value: function setTargetPosition() {\n      var _this2 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n\n      if (props.getTarget !== undefined) {\n        var target = props.getTarget();\n        var node = this.findTargetNode(target);\n        this.setState({\n          node: node\n        });\n\n        if (target) {\n          setTimeout(function () {\n            target.measureInWindow(function (x, y, width, height) {\n              _this2.targetPosition = {\n                left: x,\n                top: y,\n                width: width,\n                height: height\n              };\n\n              _this2.setContentPosition();\n            });\n          }, 0);\n        }\n      } else {\n        var frame = props.highlightFrame;\n\n        if (frame) {\n          this.targetPosition = {\n            left: frame.x,\n            top: frame.y,\n            width: frame.width,\n            height: frame.height\n          };\n          this.setContentPosition();\n        }\n      }\n    }\n  }, {\n    key: \"getContentPosition\",\n    value: function getContentPosition() {\n      var _this$props = this.props,\n          highlightFrame = _this$props.highlightFrame,\n          minimumRectSize = _this$props.minimumRectSize,\n          innerPadding = _this$props.innerPadding;\n      var _this$targetPosition = this.targetPosition,\n          top = _this$targetPosition.top,\n          height = _this$targetPosition.height;\n      var screenVerticalCenter = _helpers.Constants.screenHeight / 2;\n      var targetCenter = top + height / 2;\n      var isAlignedTop = targetCenter > screenVerticalCenter;\n      var topPosition = isAlignedTop ? top - this.contentHeight : top + height;\n\n      if (!highlightFrame && !isAlignedTop) {\n        var minRectHeight = minimumRectSize.height;\n        var isUnderMin = height >= minRectHeight;\n        topPosition = isUnderMin ? topPosition + innerPadding : targetCenter + minRectHeight / 2 + innerPadding / 2;\n      }\n\n      if (topPosition < 0 || topPosition + this.contentHeight > _helpers.Constants.screenHeight) {\n        console.warn(\"Content is too long and might appear off screen. Please adjust the message length for better results.\");\n      }\n\n      return topPosition;\n    }\n  }, {\n    key: \"setContentPosition\",\n    value: function setContentPosition() {\n      var top = this.getContentPosition();\n      this.setState({\n        contentTopPosition: top\n      });\n      this.animate(1);\n    }\n  }, {\n    key: \"getComponentDimensions\",\n    value: function getComponentDimensions(event) {\n      this.contentHeight = event.nativeEvent.layout.height;\n\n      if (this.targetPosition !== undefined) {\n        this.setContentPosition();\n      }\n    }\n  }, {\n    key: \"renderHighlightMessage\",\n    value: function renderHighlightMessage() {\n      var _this3 = this;\n\n      var _this$getThemeProps = this.getThemeProps(),\n          title = _this$getThemeProps.title,\n          message = _this$getThemeProps.message,\n          titleStyle = _this$getThemeProps.titleStyle,\n          messageStyle = _this$getThemeProps.messageStyle,\n          confirmButtonProps = _this$getThemeProps.confirmButtonProps,\n          textColor = _this$getThemeProps.textColor,\n          titleNumberOfLines = _this$getThemeProps.titleNumberOfLines,\n          messageNumberOfLines = _this$getThemeProps.messageNumberOfLines,\n          pageControlProps = _this$getThemeProps.pageControlProps;\n\n      var color = textColor || defaultTextColor;\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.highlightContent, {\n          opacity: this.state.fadeAnim,\n          top: this.state.contentTopPosition\n        }],\n        onLayout: this.getComponentDimensions,\n        pointerEvents: \"box-none\",\n        ref: !pageControlProps ? function (r) {\n          _this3.viewRef = r;\n        } : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }\n      }, title && _react.default.createElement(_text.default, {\n        text60: true,\n        style: [styles.title, {\n          color: color,\n          marginBottom: message ? titleBottomMargin : messageBottomMargin\n        }, titleStyle],\n        numberOfLines: titleNumberOfLines,\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }\n      }, title), message && _react.default.createElement(_text.default, {\n        text70: true,\n        style: [styles.message, {\n          color: color\n        }, messageStyle],\n        numberOfLines: messageNumberOfLines,\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }\n      }, message), _react.default.createElement(_button.default, (0, _extends2.default)({\n        label: defaultButtonLabel,\n        size: \"medium\",\n        labelStyle: _objectSpread(_objectSpread({}, _style.Typography.text80), {}, {\n          fontWeight: '700'\n        }),\n        outline: true,\n        outlineColor: color,\n        activeBackgroundColor: _style.Colors.rgba(color, 0.3)\n      }, confirmButtonProps, {\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          node = _this$state.node,\n          contentTopPosition = _this$state.contentTopPosition;\n\n      if (contentTopPosition === undefined) {\n        return null;\n      }\n\n      var _this$getThemeProps2 = this.getThemeProps(),\n          testID = _this$getThemeProps2.testID,\n          visible = _this$getThemeProps2.visible,\n          highlightFrame = _this$getThemeProps2.highlightFrame,\n          overlayColor = _this$getThemeProps2.overlayColor,\n          borderColor = _this$getThemeProps2.borderColor,\n          borderWidth = _this$getThemeProps2.borderWidth,\n          minimumRectSize = _this$getThemeProps2.minimumRectSize,\n          innerPadding = _this$getThemeProps2.innerPadding,\n          onBackgroundPress = _this$getThemeProps2.onBackgroundPress,\n          borderRadius = _this$getThemeProps2.borderRadius,\n          pageControlProps = _this$getThemeProps2.pageControlProps;\n\n      return _react.default.createElement(_nativeComponents.HighlighterOverlayView, {\n        testID: testID,\n        highlightViewTag: node,\n        highlightFrame: highlightFrame,\n        visible: visible,\n        overlayColor: overlayColor || defaultOverlayColor,\n        strokeColor: borderColor || defaultStrokeColor,\n        strokeWidth: borderWidth || defaultStrokeWidth,\n        minimumRectSize: minimumRectSize,\n        innerPadding: innerPadding,\n        borderRadius: borderRadius,\n        accessible: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        style: styles.touchableOverlay,\n        onPress: onBackgroundPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 9\n        }\n      }, pageControlProps ? _react.default.createElement(_view.default, {\n        flex: true,\n        bottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_pageControl.default, (0, _extends2.default)({}, pageControlProps, {\n        containerStyle: {\n          marginBottom: 24\n        },\n        ref: function ref(r) {\n          return _this4.viewRef = r;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      })), _react.default.createElement(_view.default, {\n        accessible: true,\n        accessibilityLabel: 'dismiss button',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }\n      })) : _react.default.createElement(_view.default, {\n        flex: true,\n        accessible: true,\n        accessibilityLabel: 'dismiss',\n        accessibilityRole: 'button',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }\n      })), this.renderHighlightMessage());\n    }\n  }]);\n  return FeatureHighlight;\n}(_commons.BaseComponent);\n\nFeatureHighlight.displayName = 'FeatureHighlight';\nFeatureHighlight.propTypes = {\n  visible: _propTypes.default.bool.isRequired,\n  highlightFrame: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number,\n    width: _propTypes.default.number,\n    height: _propTypes.default.number\n  }),\n  getTarget: _propTypes.default.func,\n  title: _propTypes.default.string,\n  message: _propTypes.default.string,\n  titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  messageStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  titleNumberOfLines: _propTypes.default.number,\n  messageNumberOfLines: _propTypes.default.number,\n  confirmButtonProps: _propTypes.default.object,\n  onBackgroundPress: _propTypes.default.func,\n  overlayColor: _propTypes.default.string,\n  textColor: _propTypes.default.string,\n  borderColor: _propTypes.default.string,\n  borderWidth: _propTypes.default.number,\n  borderRadius: _propTypes.default.number,\n  minimumRectSize: _propTypes.default.shape({\n    width: _propTypes.default.number,\n    height: _propTypes.default.number\n  }),\n  innerPadding: _propTypes.default.number,\n  pageControlProps: _propTypes.default.shape(_pageControl.default.propTypes)\n};\nFeatureHighlight.defaultProps = {\n  minimumRectSize: {\n    width: 56,\n    height: 56\n  },\n  innerPadding: 10\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  highlightContent: {\n    position: 'absolute',\n    padding: contentViewPadding,\n    marginRight: contentViewRightMargin,\n    alignItems: 'flex-start'\n  },\n  title: {\n    lineHeight: _style.Typography.text60.lineHeight,\n    fontWeight: '900'\n  },\n  message: _objectSpread(_objectSpread({\n    marginBottom: messageBottomMargin\n  }, _style.Typography.text70), {}, {\n    lineHeight: messageLineHeight\n  }),\n  touchableOverlay: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject)\n});\n\nvar _default = FeatureHighlight;\nexports.default = _default;","map":{"version":3,"sources":["E:/react-native-starter-master/react-native-starter-master/node_modules/react-native-ui-lib/src/components/featureHighlight/index.js"],"names":["defaultOverlayColor","Colors","rgba","black","defaultTextColor","white","defaultStrokeColor","defaultStrokeWidth","contentViewPadding","contentViewRightMargin","Constants","isIOS","titleBottomMargin","messageBottomMargin","messageLineHeight","defaultButtonLabel","contentViewHeight","isAndroid","FeatureHighlight","props","onPress","animate","contentHeight","didLayout","targetPosition","undefined","confirmButtonProps","_","invoke","getComponentDimensions","bind","setTargetPosition","state","fadeAnim","Animated","Value","contentTopPosition","nextProps","viewRef","setAccessibilityFocus","ref","reactTag","AccessibilityInfo","target","toValue","timing","duration","start","getTarget","node","findTargetNode","setState","setTimeout","measureInWindow","x","y","width","height","left","top","setContentPosition","frame","highlightFrame","minimumRectSize","innerPadding","screenVerticalCenter","screenHeight","targetCenter","isAlignedTop","topPosition","minRectHeight","isUnderMin","console","warn","getContentPosition","event","nativeEvent","layout","getThemeProps","title","message","titleStyle","messageStyle","textColor","titleNumberOfLines","messageNumberOfLines","pageControlProps","color","styles","highlightContent","opacity","r","marginBottom","Typography","text80","fontWeight","testID","visible","overlayColor","borderColor","borderWidth","onBackgroundPress","borderRadius","touchableOverlay","renderHighlightMessage","BaseComponent","displayName","propTypes","PropTypes","bool","isRequired","shape","number","func","string","oneOfType","object","array","PageControl","defaultProps","StyleSheet","create","position","padding","marginRight","alignItems","lineHeight","text60","text70","absoluteFillObject"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, findNodeHandle, TouchableWithoutFeedback, Animated, AccessibilityInfo} from 'react-native';\nimport {Colors, Typography} from '../../style';\nimport {Constants} from '../../helpers';\nimport {BaseComponent} from '../../commons';\nimport View from '../view';\nimport Text from '../text';\nimport Button from '../button';\nimport PageControl from '../pageControl';\nimport {HighlighterOverlayView} from '../../nativeComponents';\n\nconst defaultOverlayColor = Colors.rgba(Colors.black, 0.82);\nconst defaultTextColor = Colors.white;\nconst defaultStrokeColor = Colors.rgba(Colors.white, 0.12);\nconst defaultStrokeWidth = 12;\nconst contentViewPadding = 32;\nconst contentViewRightMargin = Constants.isIOS ? 45 : 46;\nconst titleBottomMargin = 12;\nconst messageBottomMargin = 24;\nconst messageLineHeight = 24;\nconst defaultButtonLabel = 'Got it';\nconst contentViewHeight = Constants.isAndroid ? 268 : 282;\n\n/*eslint-disable*/\n/**\n * @description: FeatureHighlight component for feature discovery\n * @notes: 1) FeatureHighlight component must be a direct child of the root view returned in render().; 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\n * @important: FeatureHighlight uses a native library. You MUST add and link the native library to both iOS and Android projects. For instruction please see\n * @importantLink: https://facebook.github.io/react-native/docs/linking-libraries-ios.html\n * @extends: HighlighterOverlayView\n * @extendslink: docs/HighlighterOverlayView\n * @gif: https://media.giphy.com/media/3ohs4D5irZm5GojsDS/giphy.gif, https://media.giphy.com/media/3oxQNaDQckPZI78rWo/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FeatureHighlightScreen.js\n */\n/*eslint-enable*/\nclass FeatureHighlight extends BaseComponent {\n  static displayName = 'FeatureHighlight';\n  static propTypes = {\n    /**\n     * Boolean to determine if to present the feature highlight component\n     */\n    visible: PropTypes.bool.isRequired,\n    /**\n     * Frame of the area to highlight {x, y, width, height}\n     */\n    highlightFrame: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    /**\n     * Callback that extract the ref of the element to be highlighted\n     */\n    getTarget: PropTypes.func,\n    /**\n     * Title of the content to be displayed\n     */\n    title: PropTypes.string,\n    /**\n     * Message to be displayed\n     */\n    message: PropTypes.string,\n    /**\n     * Title text style\n     */\n    titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Message text style\n     */\n    messageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Title's max number of lines\n     */\n    titleNumberOfLines: PropTypes.number,\n    /**\n     * Message's max number of lines\n     */\n    messageNumberOfLines: PropTypes.number,\n    /**\n     * Props that will be passed to the dismiss button\n     */\n    confirmButtonProps: PropTypes.object,\n    /**\n     * Callback for the background press\n     */\n    onBackgroundPress: PropTypes.func,\n    /**\n     * Color of the content's background (usually includes alpha for transparency)\n     */\n    overlayColor: PropTypes.string,\n    /**\n     * Color of the content's text\n     */\n    textColor: PropTypes.string,\n    /**\n     * Color of the border around the highlighted element\n     */\n    borderColor: PropTypes.string,\n    /**\n     * Width of the border around the highlighted element\n     */\n    borderWidth: PropTypes.number,\n    /**\n     * Border radius for the border corners around the highlighted element\n     */\n    borderRadius: PropTypes.number,\n    /**\n     * The minimum size of the highlighted component (Android API 21+, and only when passing a ref in 'getTarget')\n     */\n    minimumRectSize: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    /**\n     * The padding of the highlight frame around the highlighted element's frame (only when passing ref in 'getTarget')\n     */\n    innerPadding: PropTypes.number,\n    /**\n     * PageControl component's props\n     */\n    pageControlProps: PropTypes.shape(PageControl.propTypes)\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.getComponentDimensions = this.getComponentDimensions.bind(this);\n    this.setTargetPosition = this.setTargetPosition.bind(this);\n\n    this.state = {\n      fadeAnim: new Animated.Value(0), // Initial value for opacity: 0\n      contentTopPosition: undefined\n    };\n\n    this.contentHeight = contentViewHeight;\n    this.targetPosition = undefined;\n  }\n\n  static defaultProps = {\n    minimumRectSize: {width: 56, height: 56},\n    innerPadding: 10\n  };\n\n  componentDidMount() {\n    this.setTargetPosition();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setTargetPosition(nextProps);\n  }\n\n  componentDidUpdate() {\n    if (this.viewRef) {\n      this.setAccessibilityFocus(this.viewRef);\n    }\n  }\n\n  setAccessibilityFocus(ref) {\n    const reactTag = findNodeHandle(ref);\n    AccessibilityInfo.setAccessibilityFocus(reactTag);\n  }\n\n  findTargetNode(target) {\n    return findNodeHandle(target);\n  }\n\n  animate(toValue) {\n    Animated.timing(\n      // Animate over time\n      this.state.fadeAnim, // The animated value to drive\n      {\n        toValue, // Animate to value\n        duration: toValue ? 100 : 0 // Make it take a while\n      },).start(); // Starts the animation\n  }\n\n  setTargetPosition(props = this.props) {\n    if (props.getTarget !== undefined) {\n      const target = props.getTarget();\n\n      const node = this.findTargetNode(target);\n      this.setState({node});\n      if (target) {\n        setTimeout(() => {\n          target.measureInWindow((x, y, width, height) => {\n            this.targetPosition = {left: x, top: y, width, height};\n            this.setContentPosition();\n          });\n        }, 0);\n      }\n    } else {\n      const frame = props.highlightFrame;\n      if (frame) {\n        this.targetPosition = {left: frame.x, top: frame.y, width: frame.width, height: frame.height};\n        this.setContentPosition();\n      }\n    }\n  }\n\n  getContentPosition() {\n    const {highlightFrame, minimumRectSize, innerPadding} = this.props;\n    const {top, height} = this.targetPosition;\n    const screenVerticalCenter = Constants.screenHeight / 2;\n    const targetCenter = top + height / 2;\n    const isAlignedTop = targetCenter > screenVerticalCenter;\n    let topPosition = isAlignedTop ? top - this.contentHeight : top + height;\n    if (!highlightFrame && !isAlignedTop) {\n      const minRectHeight = minimumRectSize.height;\n      const isUnderMin = height >= minRectHeight;\n      topPosition = isUnderMin ? topPosition + innerPadding : targetCenter + minRectHeight / 2 + innerPadding / 2;\n    }\n    if (topPosition < 0 || topPosition + this.contentHeight > Constants.screenHeight) {\n      console.warn(`Content is too long and might appear off screen. Please adjust the message length for better results.`,);\n    }\n    return topPosition;\n  }\n\n  setContentPosition() {\n    const top = this.getContentPosition();\n    this.setState({contentTopPosition: top});\n    this.animate(1);\n  }\n\n  // This method will be called more than once in case of layout change!\n  getComponentDimensions(event) {\n    this.contentHeight = event.nativeEvent.layout.height;\n    if (this.targetPosition !== undefined) {\n      this.setContentPosition();\n    }\n  }\n\n  onPress = () => {\n    this.animate(0);\n    this.contentHeight = contentViewHeight;\n    this.didLayout = false;\n    this.targetPosition = undefined;\n    const {confirmButtonProps} = this.props;\n    _.invoke(confirmButtonProps, 'onPress');\n  };\n\n  renderHighlightMessage() {\n    const {\n      title,\n      message,\n      titleStyle,\n      messageStyle,\n      confirmButtonProps,\n      textColor,\n      titleNumberOfLines,\n      messageNumberOfLines,\n      pageControlProps\n    } = this.getThemeProps();\n    const color = textColor || defaultTextColor;\n\n    return (\n      <Animated.View\n        style={[styles.highlightContent, {opacity: this.state.fadeAnim, top: this.state.contentTopPosition}]}\n        onLayout={this.getComponentDimensions}\n        pointerEvents=\"box-none\"\n        ref={\n          !pageControlProps\n            ? r => {\n              this.viewRef = r;\n            }\n            : undefined\n        }\n      >\n        {title && (\n          <Text\n            text60\n            style={[\n              styles.title,\n              {\n                color,\n                marginBottom: message ? titleBottomMargin : messageBottomMargin\n              },\n              titleStyle\n            ]}\n            numberOfLines={titleNumberOfLines}\n            pointerEvents=\"none\"\n          >\n            {title}\n          </Text>\n        )}\n        {message && (\n          <Text\n            text70\n            style={[styles.message, {color}, messageStyle]}\n            numberOfLines={messageNumberOfLines}\n            pointerEvents=\"none\"\n          >\n            {message}\n          </Text>\n        )}\n        <Button\n          label={defaultButtonLabel}\n          size=\"medium\"\n          labelStyle={{...Typography.text80, fontWeight: '700'}}\n          outline\n          outlineColor={color}\n          activeBackgroundColor={Colors.rgba(color, 0.3)}\n          {...confirmButtonProps}\n          onPress={this.onPress}\n        />\n      </Animated.View>\n    );\n  }\n\n  render() {\n    const {node, contentTopPosition} = this.state;\n    if (contentTopPosition === undefined) {\n      return null;\n    }\n\n    const {\n      testID,\n      visible,\n      highlightFrame,\n      overlayColor,\n      borderColor,\n      borderWidth,\n      minimumRectSize,\n      innerPadding,\n      onBackgroundPress,\n      borderRadius,\n      pageControlProps\n    } = this.getThemeProps();\n\n    return (\n      <HighlighterOverlayView\n        testID={testID}\n        highlightViewTag={node}\n        highlightFrame={highlightFrame}\n        visible={visible}\n        overlayColor={overlayColor || defaultOverlayColor}\n        strokeColor={borderColor || defaultStrokeColor}\n        strokeWidth={borderWidth || defaultStrokeWidth}\n        minimumRectSize={minimumRectSize}\n        innerPadding={innerPadding}\n        borderRadius={borderRadius}\n        accessible={false}\n      >\n        <TouchableWithoutFeedback style={styles.touchableOverlay} onPress={onBackgroundPress}>\n          {pageControlProps ? (\n            <View flex bottom>\n              <PageControl {...pageControlProps} containerStyle={{marginBottom: 24}} ref={r => (this.viewRef = r)}/>\n              <View accessible accessibilityLabel={'dismiss button'}/>\n            </View>\n          ) : (\n            <View flex accessible accessibilityLabel={'dismiss'} accessibilityRole={'button'}/>\n          )}\n        </TouchableWithoutFeedback>\n        {this.renderHighlightMessage()}\n      </HighlighterOverlayView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  highlightContent: {\n    position: 'absolute',\n    padding: contentViewPadding,\n    marginRight: contentViewRightMargin,\n    alignItems: 'flex-start'\n  },\n  title: {\n    lineHeight: Typography.text60.lineHeight,\n    fontWeight: '900'\n  },\n  message: {\n    marginBottom: messageBottomMargin,\n    ...Typography.text70,\n    lineHeight: messageLineHeight\n  },\n  touchableOverlay: {\n    ...StyleSheet.absoluteFillObject\n  }\n});\n\nexport default FeatureHighlight;\n"]},"metadata":{},"sourceType":"script"}